{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60","program":"/home/ryan/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","js_sys","--edition=2018","/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=72d130a74acb596d","-C","extra-filename=-72d130a74acb596d","--out-dir","/home/ryan/Documents/webdev/qinbeans.net/frontend/src/wasm-lib/target/rls/debug/deps","-L","dependency=/home/ryan/Documents/webdev/qinbeans.net/frontend/src/wasm-lib/target/rls/debug/deps","--extern","wasm_bindgen=/home/ryan/Documents/webdev/qinbeans.net/frontend/src/wasm-lib/target/rls/debug/deps/libwasm_bindgen-a12681726b54cbe7.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ryan/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ryan/Documents/webdev/qinbeans.net/frontend/src/wasm-lib/target/rls/debug/deps/libjs_sys-72d130a74acb596d.rmeta"},"prelude":{"crate_id":{"name":"js_sys","disambiguator":[17366768000101902067,0]},"crate_root":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src","external_crates":[{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18009504021925498586,0]}},{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[4529231008568630066,0]}},{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6454353934602915994,0]}},{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4068501274341658802,0]}},{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6477578750782050620,0]}},{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8891903781499800355,0]}},{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5820604803307051361,0]}},{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8495696488133152618,0]}},{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[573130743634949162,0]}},{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[194626158685852222,0]}},{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6912020744921273940,0]}},{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[6083063236018227814,0]}},{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[4457149757231420433,0]}},{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[17193898272045318619,0]}},{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[16816495372639671287,0]}},{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[18018821183479052995,0]}},{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[8471467948192562461,0]}},{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[10516304001967857410,0]}},{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[14599081442512269196,0]}},{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","num":20,"id":{"name":"wasm_bindgen","disambiguator":[80318779322048909,0]}},{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","num":21,"id":{"name":"wasm_bindgen_macro","disambiguator":[14417964965453303153,0]}},{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","num":22,"id":{"name":"cfg_if","disambiguator":[16971327672742534159,0]}}],"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":0,"byte_end":275843,"line_start":1,"line_end":5871,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":0,"byte_end":275843,"line_start":1,"line_end":5871,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":539},{"krate":0,"index":541},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":327},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":408},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":470},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":536},{"krate":0,"index":552},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":88},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":107},{"krate":0,"index":111},{"krate":0,"index":662},{"krate":0,"index":664},{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":562},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":642},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":653},{"krate":0,"index":656},{"krate":0,"index":659},{"krate":0,"index":772},{"krate":0,"index":774},{"krate":0,"index":776},{"krate":0,"index":675},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":755},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":769},{"krate":0,"index":778},{"krate":0,"index":781},{"krate":0,"index":784},{"krate":0,"index":113},{"krate":0,"index":924},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":815},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":897},{"krate":0,"index":902},{"krate":0,"index":904},{"krate":0,"index":906},{"krate":0,"index":909},{"krate":0,"index":912},{"krate":0,"index":915},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":115},{"krate":0,"index":119},{"krate":0,"index":935},{"krate":0,"index":937},{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":943},{"krate":0,"index":945},{"krate":0,"index":947},{"krate":0,"index":949},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":957},{"krate":0,"index":959},{"krate":0,"index":961},{"krate":0,"index":963},{"krate":0,"index":965},{"krate":0,"index":120},{"krate":0,"index":967},{"krate":0,"index":969},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":976},{"krate":0,"index":978},{"krate":0,"index":981},{"krate":0,"index":983},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":995},{"krate":0,"index":998},{"krate":0,"index":1001},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1011},{"krate":0,"index":1014},{"krate":0,"index":1017},{"krate":0,"index":1020},{"krate":0,"index":1024},{"krate":0,"index":1027},{"krate":0,"index":1030},{"krate":0,"index":1033},{"krate":0,"index":1037},{"krate":0,"index":1040},{"krate":0,"index":1043},{"krate":0,"index":1046},{"krate":0,"index":1050},{"krate":0,"index":1053},{"krate":0,"index":1056},{"krate":0,"index":1059},{"krate":0,"index":1063},{"krate":0,"index":1066},{"krate":0,"index":1069},{"krate":0,"index":1072},{"krate":0,"index":1076},{"krate":0,"index":1079},{"krate":0,"index":1082},{"krate":0,"index":1085},{"krate":0,"index":1089},{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1102},{"krate":0,"index":1105},{"krate":0,"index":1108},{"krate":0,"index":1111},{"krate":0,"index":1115},{"krate":0,"index":1118},{"krate":0,"index":1121},{"krate":0,"index":1124},{"krate":0,"index":1128},{"krate":0,"index":1131},{"krate":0,"index":1134},{"krate":0,"index":1138},{"krate":0,"index":1142},{"krate":0,"index":1147},{"krate":0,"index":1152},{"krate":0,"index":1158},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":1253},{"krate":0,"index":1255},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1160},{"krate":0,"index":1234},{"krate":0,"index":1237},{"krate":0,"index":1242},{"krate":0,"index":1247},{"krate":0,"index":1250},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":1264},{"krate":0,"index":1267},{"krate":0,"index":1273},{"krate":0,"index":1456},{"krate":0,"index":1458},{"krate":0,"index":1460},{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1275},{"krate":0,"index":1347},{"krate":0,"index":1350},{"krate":0,"index":1355},{"krate":0,"index":1360},{"krate":0,"index":1363},{"krate":0,"index":1366},{"krate":0,"index":1369},{"krate":0,"index":1372},{"krate":0,"index":1375},{"krate":0,"index":1378},{"krate":0,"index":1381},{"krate":0,"index":1384},{"krate":0,"index":1387},{"krate":0,"index":1390},{"krate":0,"index":1393},{"krate":0,"index":1396},{"krate":0,"index":1399},{"krate":0,"index":1402},{"krate":0,"index":1405},{"krate":0,"index":1408},{"krate":0,"index":1411},{"krate":0,"index":1414},{"krate":0,"index":1417},{"krate":0,"index":1420},{"krate":0,"index":1423},{"krate":0,"index":1426},{"krate":0,"index":1429},{"krate":0,"index":1432},{"krate":0,"index":1435},{"krate":0,"index":1438},{"krate":0,"index":1441},{"krate":0,"index":1444},{"krate":0,"index":1447},{"krate":0,"index":1450},{"krate":0,"index":1453},{"krate":0,"index":1581},{"krate":0,"index":1583},{"krate":0,"index":1585},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1469},{"krate":0,"index":1541},{"krate":0,"index":1544},{"krate":0,"index":1549},{"krate":0,"index":1554},{"krate":0,"index":1557},{"krate":0,"index":1560},{"krate":0,"index":1563},{"krate":0,"index":1566},{"krate":0,"index":1569},{"krate":0,"index":1572},{"krate":0,"index":1575},{"krate":0,"index":1578},{"krate":0,"index":1594},{"krate":0,"index":1600},{"krate":0,"index":1700},{"krate":0,"index":1702},{"krate":0,"index":1704},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1602},{"krate":0,"index":1674},{"krate":0,"index":1677},{"krate":0,"index":1682},{"krate":0,"index":1687},{"krate":0,"index":1692},{"krate":0,"index":1697},{"krate":0,"index":1844},{"krate":0,"index":1846},{"krate":0,"index":1848},{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1713},{"krate":0,"index":1786},{"krate":0,"index":1789},{"krate":0,"index":1794},{"krate":0,"index":1799},{"krate":0,"index":1802},{"krate":0,"index":1805},{"krate":0,"index":1808},{"krate":0,"index":1811},{"krate":0,"index":1814},{"krate":0,"index":1817},{"krate":0,"index":1820},{"krate":0,"index":1823},{"krate":0,"index":1826},{"krate":0,"index":1829},{"krate":0,"index":1832},{"krate":0,"index":1835},{"krate":0,"index":1838},{"krate":0,"index":1841},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":1951},{"krate":0,"index":1953},{"krate":0,"index":1955},{"krate":0,"index":1957},{"krate":0,"index":1958},{"krate":0,"index":1961},{"krate":0,"index":1962},{"krate":0,"index":1857},{"krate":0,"index":1929},{"krate":0,"index":1932},{"krate":0,"index":1937},{"krate":0,"index":1942},{"krate":0,"index":1945},{"krate":0,"index":1948},{"krate":0,"index":2073},{"krate":0,"index":2075},{"krate":0,"index":2077},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":1964},{"krate":0,"index":2036},{"krate":0,"index":2039},{"krate":0,"index":2044},{"krate":0,"index":2049},{"krate":0,"index":2052},{"krate":0,"index":2055},{"krate":0,"index":2058},{"krate":0,"index":2061},{"krate":0,"index":2064},{"krate":0,"index":2067},{"krate":0,"index":2070},{"krate":0,"index":162},{"krate":0,"index":2086},{"krate":0,"index":2089},{"krate":0,"index":2092},{"krate":0,"index":2174},{"krate":0,"index":2176},{"krate":0,"index":2178},{"krate":0,"index":2095},{"krate":0,"index":2168},{"krate":0,"index":2171},{"krate":0,"index":164},{"krate":0,"index":2338},{"krate":0,"index":2340},{"krate":0,"index":2342},{"krate":0,"index":2259},{"krate":0,"index":2332},{"krate":0,"index":2335},{"krate":0,"index":166},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":180},{"krate":0,"index":184},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":2435},{"krate":0,"index":2437},{"krate":0,"index":2439},{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2445},{"krate":0,"index":2446},{"krate":0,"index":2344},{"krate":0,"index":2416},{"krate":0,"index":2419},{"krate":0,"index":2424},{"krate":0,"index":2429},{"krate":0,"index":2432},{"krate":0,"index":195},{"krate":0,"index":2647},{"krate":0,"index":2649},{"krate":0,"index":2651},{"krate":0,"index":2652},{"krate":0,"index":2518},{"krate":0,"index":2592},{"krate":0,"index":2595},{"krate":0,"index":2600},{"krate":0,"index":2605},{"krate":0,"index":2608},{"krate":0,"index":2611},{"krate":0,"index":2614},{"krate":0,"index":2617},{"krate":0,"index":2620},{"krate":0,"index":2623},{"krate":0,"index":2626},{"krate":0,"index":2629},{"krate":0,"index":2632},{"krate":0,"index":2635},{"krate":0,"index":2638},{"krate":0,"index":2641},{"krate":0,"index":2644},{"krate":0,"index":197},{"krate":0,"index":208},{"krate":0,"index":2655},{"krate":0,"index":2657},{"krate":0,"index":2659},{"krate":0,"index":2661},{"krate":0,"index":2663},{"krate":0,"index":2665},{"krate":0,"index":2667},{"krate":0,"index":2669},{"krate":0,"index":2671},{"krate":0,"index":2673},{"krate":0,"index":2675},{"krate":0,"index":2677},{"krate":0,"index":2679},{"krate":0,"index":2681},{"krate":0,"index":2683},{"krate":0,"index":2685},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":2687},{"krate":0,"index":2690},{"krate":0,"index":2693},{"krate":0,"index":2696},{"krate":0,"index":2699},{"krate":0,"index":2703},{"krate":0,"index":2706},{"krate":0,"index":2709},{"krate":0,"index":2712},{"krate":0,"index":2716},{"krate":0,"index":2719},{"krate":0,"index":2722},{"krate":0,"index":2725},{"krate":0,"index":2729},{"krate":0,"index":2732},{"krate":0,"index":2735},{"krate":0,"index":2738},{"krate":0,"index":2742},{"krate":0,"index":2745},{"krate":0,"index":2748},{"krate":0,"index":2751},{"krate":0,"index":2755},{"krate":0,"index":2758},{"krate":0,"index":2761},{"krate":0,"index":2764},{"krate":0,"index":2768},{"krate":0,"index":2771},{"krate":0,"index":2774},{"krate":0,"index":2777},{"krate":0,"index":2781},{"krate":0,"index":2784},{"krate":0,"index":2787},{"krate":0,"index":2790},{"krate":0,"index":2794},{"krate":0,"index":2797},{"krate":0,"index":2800},{"krate":0,"index":2803},{"krate":0,"index":2807},{"krate":0,"index":2810},{"krate":0,"index":2813},{"krate":0,"index":2816},{"krate":0,"index":2820},{"krate":0,"index":2823},{"krate":0,"index":2826},{"krate":0,"index":2830},{"krate":0,"index":2834},{"krate":0,"index":2839},{"krate":0,"index":224},{"krate":0,"index":230},{"krate":0,"index":3103},{"krate":0,"index":3105},{"krate":0,"index":3107},{"krate":0,"index":3109},{"krate":0,"index":3110},{"krate":0,"index":3113},{"krate":0,"index":3114},{"krate":0,"index":2844},{"krate":0,"index":2916},{"krate":0,"index":2919},{"krate":0,"index":2924},{"krate":0,"index":2929},{"krate":0,"index":2932},{"krate":0,"index":2935},{"krate":0,"index":2938},{"krate":0,"index":2941},{"krate":0,"index":2944},{"krate":0,"index":2947},{"krate":0,"index":2950},{"krate":0,"index":2953},{"krate":0,"index":2956},{"krate":0,"index":2959},{"krate":0,"index":2962},{"krate":0,"index":2965},{"krate":0,"index":2968},{"krate":0,"index":2971},{"krate":0,"index":2974},{"krate":0,"index":2977},{"krate":0,"index":2980},{"krate":0,"index":2983},{"krate":0,"index":2986},{"krate":0,"index":2989},{"krate":0,"index":2992},{"krate":0,"index":2995},{"krate":0,"index":2998},{"krate":0,"index":3001},{"krate":0,"index":3004},{"krate":0,"index":3007},{"krate":0,"index":3010},{"krate":0,"index":3013},{"krate":0,"index":3016},{"krate":0,"index":3019},{"krate":0,"index":3022},{"krate":0,"index":3025},{"krate":0,"index":3028},{"krate":0,"index":3031},{"krate":0,"index":3034},{"krate":0,"index":3037},{"krate":0,"index":3040},{"krate":0,"index":3043},{"krate":0,"index":3046},{"krate":0,"index":3049},{"krate":0,"index":3052},{"krate":0,"index":3055},{"krate":0,"index":3058},{"krate":0,"index":3061},{"krate":0,"index":3064},{"krate":0,"index":3067},{"krate":0,"index":3070},{"krate":0,"index":3073},{"krate":0,"index":3076},{"krate":0,"index":3079},{"krate":0,"index":3082},{"krate":0,"index":3085},{"krate":0,"index":3088},{"krate":0,"index":3091},{"krate":0,"index":3094},{"krate":0,"index":3097},{"krate":0,"index":3100},{"krate":0,"index":3287},{"krate":0,"index":3289},{"krate":0,"index":3291},{"krate":0,"index":3116},{"krate":0,"index":3188},{"krate":0,"index":3191},{"krate":0,"index":3194},{"krate":0,"index":3197},{"krate":0,"index":3200},{"krate":0,"index":3203},{"krate":0,"index":3206},{"krate":0,"index":3209},{"krate":0,"index":3212},{"krate":0,"index":3215},{"krate":0,"index":3218},{"krate":0,"index":3221},{"krate":0,"index":3224},{"krate":0,"index":3227},{"krate":0,"index":3230},{"krate":0,"index":3233},{"krate":0,"index":3236},{"krate":0,"index":3239},{"krate":0,"index":3242},{"krate":0,"index":3245},{"krate":0,"index":3248},{"krate":0,"index":3251},{"krate":0,"index":3254},{"krate":0,"index":3257},{"krate":0,"index":3260},{"krate":0,"index":3263},{"krate":0,"index":3266},{"krate":0,"index":3269},{"krate":0,"index":3272},{"krate":0,"index":3275},{"krate":0,"index":3278},{"krate":0,"index":3281},{"krate":0,"index":3284},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":3374},{"krate":0,"index":3376},{"krate":0,"index":3378},{"krate":0,"index":3293},{"krate":0,"index":3365},{"krate":0,"index":3368},{"krate":0,"index":3371},{"krate":0,"index":3478},{"krate":0,"index":3480},{"krate":0,"index":3482},{"krate":0,"index":3484},{"krate":0,"index":3485},{"krate":0,"index":3488},{"krate":0,"index":3489},{"krate":0,"index":3380},{"krate":0,"index":3452},{"krate":0,"index":3455},{"krate":0,"index":3460},{"krate":0,"index":3465},{"krate":0,"index":3470},{"krate":0,"index":3475},{"krate":0,"index":3589},{"krate":0,"index":3591},{"krate":0,"index":3593},{"krate":0,"index":3595},{"krate":0,"index":3596},{"krate":0,"index":3599},{"krate":0,"index":3600},{"krate":0,"index":3491},{"krate":0,"index":3563},{"krate":0,"index":3566},{"krate":0,"index":3571},{"krate":0,"index":3576},{"krate":0,"index":3581},{"krate":0,"index":3586},{"krate":0,"index":240},{"krate":0,"index":3809},{"krate":0,"index":3811},{"krate":0,"index":3813},{"krate":0,"index":3815},{"krate":0,"index":3816},{"krate":0,"index":3819},{"krate":0,"index":3820},{"krate":0,"index":3640},{"krate":0,"index":3712},{"krate":0,"index":3715},{"krate":0,"index":3720},{"krate":0,"index":3725},{"krate":0,"index":3728},{"krate":0,"index":3731},{"krate":0,"index":3734},{"krate":0,"index":3737},{"krate":0,"index":3740},{"krate":0,"index":3743},{"krate":0,"index":3746},{"krate":0,"index":3749},{"krate":0,"index":3752},{"krate":0,"index":3755},{"krate":0,"index":3758},{"krate":0,"index":3761},{"krate":0,"index":3764},{"krate":0,"index":3767},{"krate":0,"index":3770},{"krate":0,"index":3773},{"krate":0,"index":3776},{"krate":0,"index":3779},{"krate":0,"index":3782},{"krate":0,"index":3785},{"krate":0,"index":3788},{"krate":0,"index":3791},{"krate":0,"index":3794},{"krate":0,"index":3797},{"krate":0,"index":3800},{"krate":0,"index":3803},{"krate":0,"index":3806},{"krate":0,"index":3928},{"krate":0,"index":3930},{"krate":0,"index":3932},{"krate":0,"index":3934},{"krate":0,"index":3935},{"krate":0,"index":3938},{"krate":0,"index":3939},{"krate":0,"index":3822},{"krate":0,"index":3894},{"krate":0,"index":3897},{"krate":0,"index":3902},{"krate":0,"index":3907},{"krate":0,"index":3910},{"krate":0,"index":3913},{"krate":0,"index":3916},{"krate":0,"index":3919},{"krate":0,"index":3922},{"krate":0,"index":3925},{"krate":0,"index":242},{"krate":0,"index":3941},{"krate":0,"index":3944},{"krate":0,"index":3947},{"krate":0,"index":4048},{"krate":0,"index":4050},{"krate":0,"index":4052},{"krate":0,"index":4054},{"krate":0,"index":4055},{"krate":0,"index":4058},{"krate":0,"index":4059},{"krate":0,"index":3950},{"krate":0,"index":4022},{"krate":0,"index":4025},{"krate":0,"index":4030},{"krate":0,"index":4035},{"krate":0,"index":4040},{"krate":0,"index":4045},{"krate":0,"index":4159},{"krate":0,"index":4161},{"krate":0,"index":4163},{"krate":0,"index":4165},{"krate":0,"index":4166},{"krate":0,"index":4169},{"krate":0,"index":4170},{"krate":0,"index":4061},{"krate":0,"index":4133},{"krate":0,"index":4136},{"krate":0,"index":4141},{"krate":0,"index":4146},{"krate":0,"index":4151},{"krate":0,"index":4156},{"krate":0,"index":4270},{"krate":0,"index":4272},{"krate":0,"index":4274},{"krate":0,"index":4276},{"krate":0,"index":4277},{"krate":0,"index":4280},{"krate":0,"index":4281},{"krate":0,"index":4172},{"krate":0,"index":4244},{"krate":0,"index":4247},{"krate":0,"index":4252},{"krate":0,"index":4257},{"krate":0,"index":4262},{"krate":0,"index":4267},{"krate":0,"index":4383},{"krate":0,"index":4385},{"krate":0,"index":4387},{"krate":0,"index":4389},{"krate":0,"index":4390},{"krate":0,"index":4393},{"krate":0,"index":4394},{"krate":0,"index":4283},{"krate":0,"index":4355},{"krate":0,"index":4358},{"krate":0,"index":4363},{"krate":0,"index":4368},{"krate":0,"index":4371},{"krate":0,"index":4374},{"krate":0,"index":4377},{"krate":0,"index":4380},{"krate":0,"index":244},{"krate":0,"index":4493},{"krate":0,"index":4495},{"krate":0,"index":4497},{"krate":0,"index":4499},{"krate":0,"index":4500},{"krate":0,"index":4503},{"krate":0,"index":4504},{"krate":0,"index":4396},{"krate":0,"index":4468},{"krate":0,"index":4471},{"krate":0,"index":4476},{"krate":0,"index":4481},{"krate":0,"index":4484},{"krate":0,"index":4487},{"krate":0,"index":4490},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":5654},{"krate":0,"index":5656},{"krate":0,"index":5658},{"krate":0,"index":5659},{"krate":0,"index":5662},{"krate":0,"index":5663},{"krate":0,"index":5370},{"krate":0,"index":5443},{"krate":0,"index":5446},{"krate":0,"index":5451},{"krate":0,"index":5456},{"krate":0,"index":5459},{"krate":0,"index":5462},{"krate":0,"index":5465},{"krate":0,"index":5468},{"krate":0,"index":5471},{"krate":0,"index":5474},{"krate":0,"index":5477},{"krate":0,"index":5480},{"krate":0,"index":5483},{"krate":0,"index":5486},{"krate":0,"index":5489},{"krate":0,"index":5492},{"krate":0,"index":5495},{"krate":0,"index":5498},{"krate":0,"index":5501},{"krate":0,"index":5504},{"krate":0,"index":5507},{"krate":0,"index":5510},{"krate":0,"index":5513},{"krate":0,"index":5516},{"krate":0,"index":5519},{"krate":0,"index":5522},{"krate":0,"index":5525},{"krate":0,"index":5528},{"krate":0,"index":5531},{"krate":0,"index":5534},{"krate":0,"index":5537},{"krate":0,"index":5540},{"krate":0,"index":5543},{"krate":0,"index":5546},{"krate":0,"index":5549},{"krate":0,"index":5552},{"krate":0,"index":5555},{"krate":0,"index":5558},{"krate":0,"index":5561},{"krate":0,"index":5564},{"krate":0,"index":5567},{"krate":0,"index":5570},{"krate":0,"index":5573},{"krate":0,"index":5576},{"krate":0,"index":5579},{"krate":0,"index":5582},{"krate":0,"index":5585},{"krate":0,"index":5588},{"krate":0,"index":5591},{"krate":0,"index":5594},{"krate":0,"index":5597},{"krate":0,"index":5600},{"krate":0,"index":5603},{"krate":0,"index":5606},{"krate":0,"index":5609},{"krate":0,"index":5612},{"krate":0,"index":5615},{"krate":0,"index":5618},{"krate":0,"index":5621},{"krate":0,"index":5624},{"krate":0,"index":5627},{"krate":0,"index":5630},{"krate":0,"index":5633},{"krate":0,"index":5636},{"krate":0,"index":5639},{"krate":0,"index":5642},{"krate":0,"index":5645},{"krate":0,"index":5648},{"krate":0,"index":5651},{"krate":0,"index":252},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":5789},{"krate":0,"index":5791},{"krate":0,"index":5793},{"krate":0,"index":5665},{"krate":0,"index":5738},{"krate":0,"index":5741},{"krate":0,"index":5744},{"krate":0,"index":5747},{"krate":0,"index":5750},{"krate":0,"index":5753},{"krate":0,"index":5756},{"krate":0,"index":5759},{"krate":0,"index":5762},{"krate":0,"index":5765},{"krate":0,"index":5768},{"krate":0,"index":5771},{"krate":0,"index":5774},{"krate":0,"index":5777},{"krate":0,"index":5780},{"krate":0,"index":5783},{"krate":0,"index":5786},{"krate":0,"index":290},{"krate":0,"index":6333},{"krate":0,"index":6335},{"krate":0,"index":6337},{"krate":0,"index":6215},{"krate":0,"index":6287},{"krate":0,"index":6290},{"krate":0,"index":6295},{"krate":0,"index":6300},{"krate":0,"index":6303},{"krate":0,"index":6306},{"krate":0,"index":6309},{"krate":0,"index":6312},{"krate":0,"index":6315},{"krate":0,"index":6318},{"krate":0,"index":6321},{"krate":0,"index":6324},{"krate":0,"index":6327},{"krate":0,"index":6330},{"krate":0,"index":300},{"krate":0,"index":306},{"krate":0,"index":6697},{"krate":0,"index":6699},{"krate":0,"index":6701},{"krate":0,"index":6564},{"krate":0,"index":6636},{"krate":0,"index":6639},{"krate":0,"index":6644},{"krate":0,"index":6649},{"krate":0,"index":6652},{"krate":0,"index":6655},{"krate":0,"index":6658},{"krate":0,"index":6661},{"krate":0,"index":6664},{"krate":0,"index":6667},{"krate":0,"index":6670},{"krate":0,"index":6673},{"krate":0,"index":6676},{"krate":0,"index":6679},{"krate":0,"index":6682},{"krate":0,"index":6685},{"krate":0,"index":6688},{"krate":0,"index":6691},{"krate":0,"index":6694},{"krate":0,"index":6432},{"krate":0,"index":6439},{"krate":0,"index":6442},{"krate":0,"index":6836},{"krate":0,"index":6838},{"krate":0,"index":6840},{"krate":0,"index":6703},{"krate":0,"index":6775},{"krate":0,"index":6778},{"krate":0,"index":6783},{"krate":0,"index":6788},{"krate":0,"index":6791},{"krate":0,"index":6794},{"krate":0,"index":6797},{"krate":0,"index":6800},{"krate":0,"index":6803},{"krate":0,"index":6806},{"krate":0,"index":6809},{"krate":0,"index":6812},{"krate":0,"index":6815},{"krate":0,"index":6818},{"krate":0,"index":6821},{"krate":0,"index":6824},{"krate":0,"index":6827},{"krate":0,"index":6830},{"krate":0,"index":6833},{"krate":0,"index":6444},{"krate":0,"index":6451},{"krate":0,"index":6454},{"krate":0,"index":6975},{"krate":0,"index":6977},{"krate":0,"index":6979},{"krate":0,"index":6842},{"krate":0,"index":6914},{"krate":0,"index":6917},{"krate":0,"index":6922},{"krate":0,"index":6927},{"krate":0,"index":6930},{"krate":0,"index":6933},{"krate":0,"index":6936},{"krate":0,"index":6939},{"krate":0,"index":6942},{"krate":0,"index":6945},{"krate":0,"index":6948},{"krate":0,"index":6951},{"krate":0,"index":6954},{"krate":0,"index":6957},{"krate":0,"index":6960},{"krate":0,"index":6963},{"krate":0,"index":6966},{"krate":0,"index":6969},{"krate":0,"index":6972},{"krate":0,"index":6456},{"krate":0,"index":6463},{"krate":0,"index":6466},{"krate":0,"index":7114},{"krate":0,"index":7116},{"krate":0,"index":7118},{"krate":0,"index":6981},{"krate":0,"index":7053},{"krate":0,"index":7056},{"krate":0,"index":7061},{"krate":0,"index":7066},{"krate":0,"index":7069},{"krate":0,"index":7072},{"krate":0,"index":7075},{"krate":0,"index":7078},{"krate":0,"index":7081},{"krate":0,"index":7084},{"krate":0,"index":7087},{"krate":0,"index":7090},{"krate":0,"index":7093},{"krate":0,"index":7096},{"krate":0,"index":7099},{"krate":0,"index":7102},{"krate":0,"index":7105},{"krate":0,"index":7108},{"krate":0,"index":7111},{"krate":0,"index":6468},{"krate":0,"index":6475},{"krate":0,"index":6478},{"krate":0,"index":7253},{"krate":0,"index":7255},{"krate":0,"index":7257},{"krate":0,"index":7120},{"krate":0,"index":7192},{"krate":0,"index":7195},{"krate":0,"index":7200},{"krate":0,"index":7205},{"krate":0,"index":7208},{"krate":0,"index":7211},{"krate":0,"index":7214},{"krate":0,"index":7217},{"krate":0,"index":7220},{"krate":0,"index":7223},{"krate":0,"index":7226},{"krate":0,"index":7229},{"krate":0,"index":7232},{"krate":0,"index":7235},{"krate":0,"index":7238},{"krate":0,"index":7241},{"krate":0,"index":7244},{"krate":0,"index":7247},{"krate":0,"index":7250},{"krate":0,"index":6480},{"krate":0,"index":6487},{"krate":0,"index":6490},{"krate":0,"index":7392},{"krate":0,"index":7394},{"krate":0,"index":7396},{"krate":0,"index":7259},{"krate":0,"index":7331},{"krate":0,"index":7334},{"krate":0,"index":7339},{"krate":0,"index":7344},{"krate":0,"index":7347},{"krate":0,"index":7350},{"krate":0,"index":7353},{"krate":0,"index":7356},{"krate":0,"index":7359},{"krate":0,"index":7362},{"krate":0,"index":7365},{"krate":0,"index":7368},{"krate":0,"index":7371},{"krate":0,"index":7374},{"krate":0,"index":7377},{"krate":0,"index":7380},{"krate":0,"index":7383},{"krate":0,"index":7386},{"krate":0,"index":7389},{"krate":0,"index":6492},{"krate":0,"index":6499},{"krate":0,"index":6502},{"krate":0,"index":7531},{"krate":0,"index":7533},{"krate":0,"index":7535},{"krate":0,"index":7398},{"krate":0,"index":7470},{"krate":0,"index":7473},{"krate":0,"index":7478},{"krate":0,"index":7483},{"krate":0,"index":7486},{"krate":0,"index":7489},{"krate":0,"index":7492},{"krate":0,"index":7495},{"krate":0,"index":7498},{"krate":0,"index":7501},{"krate":0,"index":7504},{"krate":0,"index":7507},{"krate":0,"index":7510},{"krate":0,"index":7513},{"krate":0,"index":7516},{"krate":0,"index":7519},{"krate":0,"index":7522},{"krate":0,"index":7525},{"krate":0,"index":7528},{"krate":0,"index":6504},{"krate":0,"index":6511},{"krate":0,"index":6514},{"krate":0,"index":7670},{"krate":0,"index":7672},{"krate":0,"index":7674},{"krate":0,"index":7537},{"krate":0,"index":7609},{"krate":0,"index":7612},{"krate":0,"index":7617},{"krate":0,"index":7622},{"krate":0,"index":7625},{"krate":0,"index":7628},{"krate":0,"index":7631},{"krate":0,"index":7634},{"krate":0,"index":7637},{"krate":0,"index":7640},{"krate":0,"index":7643},{"krate":0,"index":7646},{"krate":0,"index":7649},{"krate":0,"index":7652},{"krate":0,"index":7655},{"krate":0,"index":7658},{"krate":0,"index":7661},{"krate":0,"index":7664},{"krate":0,"index":7667},{"krate":0,"index":6516},{"krate":0,"index":6523},{"krate":0,"index":6526},{"krate":0,"index":7809},{"krate":0,"index":7811},{"krate":0,"index":7813},{"krate":0,"index":7676},{"krate":0,"index":7748},{"krate":0,"index":7751},{"krate":0,"index":7756},{"krate":0,"index":7761},{"krate":0,"index":7764},{"krate":0,"index":7767},{"krate":0,"index":7770},{"krate":0,"index":7773},{"krate":0,"index":7776},{"krate":0,"index":7779},{"krate":0,"index":7782},{"krate":0,"index":7785},{"krate":0,"index":7788},{"krate":0,"index":7791},{"krate":0,"index":7794},{"krate":0,"index":7797},{"krate":0,"index":7800},{"krate":0,"index":7803},{"krate":0,"index":7806},{"krate":0,"index":6528},{"krate":0,"index":6535},{"krate":0,"index":6538},{"krate":0,"index":7948},{"krate":0,"index":7950},{"krate":0,"index":7952},{"krate":0,"index":7815},{"krate":0,"index":7887},{"krate":0,"index":7890},{"krate":0,"index":7895},{"krate":0,"index":7900},{"krate":0,"index":7903},{"krate":0,"index":7906},{"krate":0,"index":7909},{"krate":0,"index":7912},{"krate":0,"index":7915},{"krate":0,"index":7918},{"krate":0,"index":7921},{"krate":0,"index":7924},{"krate":0,"index":7927},{"krate":0,"index":7930},{"krate":0,"index":7933},{"krate":0,"index":7936},{"krate":0,"index":7939},{"krate":0,"index":7942},{"krate":0,"index":7945},{"krate":0,"index":6540},{"krate":0,"index":6547},{"krate":0,"index":6550},{"krate":0,"index":8087},{"krate":0,"index":8089},{"krate":0,"index":8091},{"krate":0,"index":7954},{"krate":0,"index":8026},{"krate":0,"index":8029},{"krate":0,"index":8034},{"krate":0,"index":8039},{"krate":0,"index":8042},{"krate":0,"index":8045},{"krate":0,"index":8048},{"krate":0,"index":8051},{"krate":0,"index":8054},{"krate":0,"index":8057},{"krate":0,"index":8060},{"krate":0,"index":8063},{"krate":0,"index":8066},{"krate":0,"index":8069},{"krate":0,"index":8072},{"krate":0,"index":8075},{"krate":0,"index":8078},{"krate":0,"index":8081},{"krate":0,"index":8084},{"krate":0,"index":6552},{"krate":0,"index":6559},{"krate":0,"index":6562}],"decl_id":null,"docs":" Bindings to JavaScript's standard, built-in objects, including their methods\n and properties.","sig":null,"attributes":[{"value":"/ Bindings to JavaScript's standard, built-in objects, including their methods","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":0,"byte_end":80,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ and properties.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":81,"byte_end":100,"line_start":2,"line_end":2,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":101,"byte_end":104,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This does *not* include any Web, Node, or any other JS environment","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":105,"byte_end":175,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ APIs. Only the things that are guaranteed to exist in the global scope by","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":176,"byte_end":253,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ the ECMAScript standard.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":254,"byte_end":282,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":283,"byte_end":286,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects>","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":287,"byte_end":373,"line_start":8,"line_end":8,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":374,"byte_end":377,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ## A Note About `camelCase`, `snake_case`, and Naming Conventions","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":378,"byte_end":447,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":448,"byte_end":451,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ JavaScript's global objects use `camelCase` naming conventions for functions","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":452,"byte_end":532,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ and methods, but Rust style is to use `snake_case`. These bindings expose","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":533,"byte_end":610,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ the Rust style `snake_case` name. Additionally, acronyms within a method","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":611,"byte_end":687,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ name are all lower case, where as in JavaScript they are all upper case. For","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":688,"byte_end":768,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ example, `decodeURI` in JavaScript is exposed as `decode_uri` in these","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":769,"byte_end":843,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ bindings.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":844,"byte_end":857,"line_start":17,"line_end":17,"column_start":1,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":307},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":6666,"byte_end":6676,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"decode_uri","qualname":"::decode_uri","value":"fn decode_uri(&str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `decodeURI()` function decodes a Uniform Resource Identifier (URI)\n previously created by `encodeURI` or by a similar routine.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":6304,"byte_end":6319,"line_start":215,"line_end":215,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":6304,"byte_end":6319,"line_start":215,"line_end":215,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":309},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":7102,"byte_end":7122,"line_start":229,"line_end":229,"column_start":12,"column_end":32},"name":"decode_uri_component","qualname":"::decode_uri_component","value":"fn decode_uri_component(&str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `decodeURIComponent()` function decodes a Uniform Resource Identifier (URI) component\n previously created by `encodeURIComponent` or by a similar routine.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":6304,"byte_end":6319,"line_start":215,"line_end":215,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":6304,"byte_end":6319,"line_start":215,"line_end":215,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":311},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":7695,"byte_end":7705,"line_start":239,"line_end":239,"column_start":12,"column_end":22},"name":"encode_uri","qualname":"::encode_uri","value":"fn encode_uri(&str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `encodeURI()` function encodes a Uniform Resource Identifier (URI)\n by replacing each instance of certain characters by one, two, three, or\n four escape sequences representing the UTF-8 encoding of the character\n (will only be four escape sequences for characters composed of two\n \"surrogate\" characters).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":6304,"byte_end":6319,"line_start":215,"line_end":215,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":6304,"byte_end":6319,"line_start":215,"line_end":215,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":313},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":8290,"byte_end":8310,"line_start":248,"line_end":248,"column_start":12,"column_end":32},"name":"encode_uri_component","qualname":"::encode_uri_component","value":"fn encode_uri_component(&str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `encodeURIComponent()` function encodes a Uniform Resource Identifier (URI) component\n by replacing each instance of certain characters by one, two, three, or four escape sequences\n representing the UTF-8 encoding of the character\n (will only be four escape sequences for characters composed of two \"surrogate\" characters).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":6304,"byte_end":6319,"line_start":215,"line_end":215,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":6304,"byte_end":6319,"line_start":215,"line_end":215,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":315},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":8582,"byte_end":8586,"line_start":254,"line_end":254,"column_start":12,"column_end":16},"name":"eval","qualname":"::eval","value":"fn eval(&str) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `eval()` function evaluates JavaScript code represented as a string.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":6304,"byte_end":6319,"line_start":215,"line_end":215,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":6304,"byte_end":6319,"line_start":215,"line_end":215,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":317},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":8979,"byte_end":8988,"line_start":261,"line_end":261,"column_start":12,"column_end":21},"name":"is_finite","qualname":"::is_finite","value":"fn is_finite(&JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The global `isFinite()` function determines whether the passed value is a finite number.\n If needed, the parameter is first converted to a number.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":6304,"byte_end":6319,"line_start":215,"line_end":215,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":6304,"byte_end":6319,"line_start":215,"line_end":215,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":319},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":9368,"byte_end":9377,"line_start":268,"line_end":268,"column_start":12,"column_end":21},"name":"parse_int","qualname":"::parse_int","value":"fn parse_int(&str, u8) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `parseInt()` function parses a string argument and returns an integer\n of the specified radix (the base in mathematical numeral systems), or NaN on error.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":6304,"byte_end":6319,"line_start":215,"line_end":215,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":6304,"byte_end":6319,"line_start":215,"line_end":215,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":321},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":9709,"byte_end":9720,"line_start":275,"line_end":275,"column_start":12,"column_end":23},"name":"parse_float","qualname":"::parse_float","value":"fn parse_float(&str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `parseFloat()` function parses an argument and returns a floating point number,\n or NaN on error.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":6304,"byte_end":6319,"line_start":215,"line_end":215,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":6304,"byte_end":6319,"line_start":215,"line_end":215,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":323},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10041,"byte_end":10047,"line_start":282,"line_end":282,"column_start":12,"column_end":18},"name":"escape","qualname":"::escape","value":"fn escape(&str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `escape()` function computes a new string in which certain characters have been\n replaced by a hexadecimal escape sequence.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":6304,"byte_end":6319,"line_start":215,"line_end":215,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":6304,"byte_end":6319,"line_start":215,"line_end":215,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":325},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10550,"byte_end":10558,"line_start":291,"line_end":291,"column_start":12,"column_end":20},"name":"unescape","qualname":"::unescape","value":"fn unescape(&str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `unescape()` function computes a new string in which hexadecimal escape\n sequences are replaced with the character that it represents. The escape sequences might\n be introduced by a function like `escape`. Usually, `decodeURI` or `decodeURIComponent`\n are preferred over `unescape`.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":6304,"byte_end":6319,"line_start":215,"line_end":215,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":6304,"byte_end":6319,"line_start":215,"line_end":215,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":539},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10783,"byte_end":10788,"line_start":299,"line_end":299,"column_start":14,"column_end":19},"name":"Array","qualname":"::Array","value":"Array {  }","parent":null,"children":[{"krate":0,"index":540}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10870,"byte_end":10873,"line_start":303,"line_end":303,"column_start":12,"column_end":15},"name":"new","qualname":"<Array>::new","value":"fn new() -> Array","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty array.\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":11028,"byte_end":11043,"line_start":307,"line_end":307,"column_start":12,"column_end":27},"name":"new_with_length","qualname":"<Array>::new_with_length","value":"fn new_with_length(u32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" Creates a new array with the specified length (elements are initialized to `undefined`).\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":11242,"byte_end":11244,"line_start":312,"line_end":312,"column_start":12,"column_end":14},"name":"at","qualname":"<Array>::at","value":"fn at(&Self, i32) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the element at the index, counting from the end if negative\n (returns `undefined` if the index is out of range).\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":11447,"byte_end":11450,"line_start":316,"line_end":316,"column_start":12,"column_end":15},"name":"get","qualname":"<Array>::get","value":"fn get(&Self, u32) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the element at the index (returns `undefined` if the index is out of range).\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":11652,"byte_end":11655,"line_start":320,"line_end":320,"column_start":12,"column_end":15},"name":"set","qualname":"<Array>::set","value":"fn set(&Self, u32, JsValue)","parent":null,"children":[],"decl_id":null,"docs":" Sets the element at the index (auto-enlarges the array if the index is out of range).\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":12008,"byte_end":12014,"line_start":328,"line_end":328,"column_start":12,"column_end":18},"name":"delete","qualname":"<Array>::delete","value":"fn delete(&Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Deletes the element at the index (does nothing if the index is out of range).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":12228,"byte_end":12232,"line_start":333,"line_end":333,"column_start":12,"column_end":16},"name":"from","qualname":"<Array>::from","value":"fn from(&JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Array.from()` method creates a new, shallow-copied `Array` instance\n from an array-like or iterable object.\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":12611,"byte_end":12622,"line_start":340,"line_end":340,"column_start":12,"column_end":23},"name":"copy_within","qualname":"<Array>::copy_within","value":"fn copy_within(&Self, i32, i32, i32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `copyWithin()` method shallow copies part of an array to another\n location in the same array and returns it, without modifying its size.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":13010,"byte_end":13016,"line_start":347,"line_end":347,"column_start":12,"column_end":18},"name":"concat","qualname":"<Array>::concat","value":"fn concat(&Self, &Array) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `concat()` method is used to merge two or more arrays. This method\n does not change the existing arrays, but instead returns a new array.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":13355,"byte_end":13360,"line_start":354,"line_end":354,"column_start":12,"column_end":17},"name":"every","qualname":"<Array>::every","value":"fn every(&Self, &mut dyn FnMut(JsValue, u32, Array) -> bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `every()` method tests whether all elements in the array pass the test\n implemented by the provided function.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":13767,"byte_end":13771,"line_start":361,"line_end":361,"column_start":12,"column_end":16},"name":"fill","qualname":"<Array>::fill","value":"fn fill(&Self, &JsValue, u32, u32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `fill()` method fills all the elements of an array from a start index\n to an end index with a static value. The end index is not included.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":14139,"byte_end":14145,"line_start":368,"line_end":368,"column_start":12,"column_end":18},"name":"filter","qualname":"<Array>::filter","value":"fn filter(&Self, &mut dyn FnMut(JsValue, u32, Array) -> bool) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `filter()` method creates a new array with all elements that pass the\n test implemented by the provided function.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":14565,"byte_end":14569,"line_start":375,"line_end":375,"column_start":12,"column_end":16},"name":"find","qualname":"<Array>::find","value":"fn find(&Self, &mut dyn FnMut(JsValue, u32, Array) -> bool) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `find()` method returns the value of the first element in the array that satisfies\n  the provided testing function. Otherwise `undefined` is returned.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":15012,"byte_end":15022,"line_start":382,"line_end":382,"column_start":12,"column_end":22},"name":"find_index","qualname":"<Array>::find_index","value":"fn find_index(&Self, &mut dyn FnMut(JsValue, u32, Array) -> bool) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `findIndex()` method returns the index of the first element in the array that\n satisfies the provided testing function. Otherwise -1 is returned.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":15414,"byte_end":15418,"line_start":389,"line_end":389,"column_start":12,"column_end":16},"name":"flat","qualname":"<Array>::flat","value":"fn flat(&Self, i32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `flat()` method creates a new array with all sub-array elements concatenated into it\n recursively up to the specified depth.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":15778,"byte_end":15786,"line_start":396,"line_end":396,"column_start":12,"column_end":20},"name":"flat_map","qualname":"<Array>::flat_map","value":"fn flat_map(&Self, &mut dyn FnMut(JsValue, u32, Array) -> Vec<JsValue>)\n-> Array","parent":null,"children":[],"decl_id":null,"docs":" The `flatMap()` method first maps each element using a mapping function, then flattens\n the result into a new array.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":16177,"byte_end":16185,"line_start":405,"line_end":405,"column_start":12,"column_end":20},"name":"for_each","qualname":"<Array>::for_each","value":"fn for_each(&Self, &mut dyn FnMut(JsValue, u32, Array) -> ())","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once for each array element.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":16557,"byte_end":16565,"line_start":412,"line_end":412,"column_start":12,"column_end":20},"name":"includes","qualname":"<Array>::includes","value":"fn includes(&Self, &JsValue, i32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `includes()` method determines whether an array includes a certain\n element, returning true or false as appropriate.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":16957,"byte_end":16965,"line_start":419,"line_end":419,"column_start":12,"column_end":20},"name":"index_of","qualname":"<Array>::index_of","value":"fn index_of(&Self, &JsValue, i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `indexOf()` method returns the first index at which a given element\n can be found in the array, or -1 if it is not present.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":17317,"byte_end":17325,"line_start":425,"line_end":425,"column_start":12,"column_end":20},"name":"is_array","qualname":"<Array>::is_array","value":"fn is_array(&JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Array.isArray()` method determines whether the passed value is an Array.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":17653,"byte_end":17657,"line_start":432,"line_end":432,"column_start":12,"column_end":16},"name":"join","qualname":"<Array>::join","value":"fn join(&Self, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `join()` method joins all elements of an array (or an array-like object)\n into a string and returns this string.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":18111,"byte_end":18124,"line_start":440,"line_end":440,"column_start":12,"column_end":25},"name":"last_index_of","qualname":"<Array>::last_index_of","value":"fn last_index_of(&Self, &JsValue, i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `lastIndexOf()` method returns the last index at which a given element\n can be found in the array, or -1 if it is not present. The array is\n searched backwards, starting at fromIndex.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":18639,"byte_end":18645,"line_start":449,"line_end":449,"column_start":12,"column_end":18},"name":"length","qualname":"<Array>::length","value":"fn length(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The length property of an object which is an instance of type Array\n sets or returns the number of elements in that array. The value is an\n unsigned, 32-bit integer that is always numerically greater than the\n highest index in the array.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":19271,"byte_end":19274,"line_start":459,"line_end":459,"column_start":12,"column_end":15},"name":"map","qualname":"<Array>::map","value":"fn map(&Self, &mut dyn FnMut(JsValue, u32, Array) -> JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" `map()` calls a provided callback function once for each element in an array,\n in order, and constructs a new array from the results. callback is invoked\n only for indexes of the array which have assigned values, including undefined.\n It is not called for missing elements of the array (that is, indexes that have\n never been set, which have been deleted or which have never been assigned a value).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":20223,"byte_end":20226,"line_start":477,"line_end":477,"column_start":12,"column_end":15},"name":"of1","qualname":"<Array>::of1","value":"fn of1(&JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Array.of()` method creates a new Array instance with a variable\n number of arguments, regardless of number or type of the arguments.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":20441,"byte_end":20444,"line_start":481,"line_end":481,"column_start":12,"column_end":15},"name":"of2","qualname":"<Array>::of2","value":"fn of2(&JsValue, &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of)\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":20672,"byte_end":20675,"line_start":485,"line_end":485,"column_start":12,"column_end":15},"name":"of3","qualname":"<Array>::of3","value":"fn of3(&JsValue, &JsValue, &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of)\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":20916,"byte_end":20919,"line_start":489,"line_end":489,"column_start":12,"column_end":15},"name":"of4","qualname":"<Array>::of4","value":"fn of4(&JsValue, &JsValue, &JsValue, &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of)\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":21173,"byte_end":21176,"line_start":493,"line_end":493,"column_start":12,"column_end":15},"name":"of5","qualname":"<Array>::of5","value":"fn of5(&JsValue, &JsValue, &JsValue, &JsValue, &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of)\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":21565,"byte_end":21568,"line_start":500,"line_end":500,"column_start":12,"column_end":15},"name":"pop","qualname":"<Array>::pop","value":"fn pop(&Self) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `pop()` method removes the last element from an array and returns that\n element. This method changes the length of the array.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":21890,"byte_end":21894,"line_start":507,"line_end":507,"column_start":12,"column_end":16},"name":"push","qualname":"<Array>::push","value":"fn push(&Self, &JsValue) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `push()` method adds one or more elements to the end of an array and\n returns the new length of the array.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":22268,"byte_end":22274,"line_start":514,"line_end":514,"column_start":12,"column_end":18},"name":"reduce","qualname":"<Array>::reduce","value":"fn reduce(&Self, &mut dyn FnMut(JsValue, JsValue, u32, Array) -> JsValue,\n&JsValue) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `reduce()` method applies a function against an accumulator and each element in\n the array (from left to right) to reduce it to a single value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":22790,"byte_end":22802,"line_start":525,"line_end":525,"column_start":12,"column_end":24},"name":"reduce_right","qualname":"<Array>::reduce_right","value":"fn reduce_right(&Self,\n&mut dyn FnMut(JsValue, JsValue, u32, Array) -> JsValue, &JsValue) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `reduceRight()` method applies a function against an accumulator and each value\n of the array (from right-to-left) to reduce it to a single value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":23280,"byte_end":23287,"line_start":536,"line_end":536,"column_start":12,"column_end":19},"name":"reverse","qualname":"<Array>::reverse","value":"fn reverse(&Self) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `reverse()` method reverses an array in place. The first array\n element becomes the last, and the last array element becomes the first.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":23638,"byte_end":23643,"line_start":543,"line_end":543,"column_start":12,"column_end":17},"name":"shift","qualname":"<Array>::shift","value":"fn shift(&Self) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `shift()` method removes the first element from an array and returns\n that removed element. This method changes the length of the array.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":24045,"byte_end":24050,"line_start":551,"line_end":551,"column_start":12,"column_end":17},"name":"slice","qualname":"<Array>::slice","value":"fn slice(&Self, u32, u32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a shallow copy of a portion of an array into\n a new array object selected from begin to end (end not included).\n The original array will not be modified.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":24477,"byte_end":24481,"line_start":558,"line_end":558,"column_start":12,"column_end":16},"name":"some","qualname":"<Array>::some","value":"fn some(&Self, &mut dyn FnMut(JsValue) -> bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `some()` method tests whether at least one element in the array passes the test implemented\n by the provided function.\n Note: This method returns false for any condition put on an empty array.\n [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":25050,"byte_end":25054,"line_start":569,"line_end":569,"column_start":12,"column_end":16},"name":"sort","qualname":"<Array>::sort","value":"fn sort(&Self) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `sort()` method sorts the elements of an array in place and returns\n the array. The sort is not necessarily stable. The default sort\n order is according to string Unicode code points.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":25379,"byte_end":25385,"line_start":576,"line_end":576,"column_start":12,"column_end":18},"name":"splice","qualname":"<Array>::splice","value":"fn splice(&Self, u32, u32, &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `splice()` method changes the contents of an array by removing existing elements and/or\n adding new elements.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":25933,"byte_end":25949,"line_start":584,"line_end":584,"column_start":12,"column_end":28},"name":"to_locale_string","qualname":"<Array>::to_locale_string","value":"fn to_locale_string(&Self, &JsValue, &JsValue) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleString()` method returns a string representing the elements of the array.\n The elements are converted to Strings using their toLocaleString methods and these\n Strings are separated by a locale-specific String (such as a comma “,”).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":26316,"byte_end":26325,"line_start":591,"line_end":591,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Array>::to_string","value":"fn to_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the specified array\n and its elements.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":26660,"byte_end":26667,"line_start":598,"line_end":598,"column_start":12,"column_end":19},"name":"unshift","qualname":"<Array>::unshift","value":"fn unshift(&Self, &JsValue) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `unshift()` method adds one or more elements to the beginning of an\n array and returns the new length of the array.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":10598,"byte_end":10613,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":552},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":26784,"byte_end":26793,"line_start":603,"line_end":603,"column_start":12,"column_end":21},"name":"ArrayIter","qualname":"::ArrayIter","value":"ArrayIter {  }","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":555}],"decl_id":null,"docs":" Iterator returned by `Array::iter`\n","sig":null,"attributes":[{"value":"/ Iterator returned by `Array::iter`","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":26710,"byte_end":26748,"line_start":601,"line_end":601,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":26940,"byte_end":26944,"line_start":611,"line_end":611,"column_start":8,"column_end":12},"name":"next","qualname":"<ArrayIter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":27084,"byte_end":27093,"line_start":617,"line_end":617,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<ArrayIter as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":27067,"byte_end":27076,"line_start":616,"line_end":616,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":27236,"byte_end":27245,"line_start":623,"line_end":623,"column_start":8,"column_end":17},"name":"next_back","qualname":"<ArrayIter as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8323},"children":[],"decl_id":{"krate":2,"index":8324},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":27572,"byte_end":27576,"line_start":635,"line_end":635,"column_start":12,"column_end":16},"name":"iter","qualname":"<Array>::iter","value":"fn iter(&Self) -> ArrayIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the values of the JS array.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the values of the JS array.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":27504,"byte_end":27560,"line_start":634,"line_end":634,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":27759,"byte_end":27765,"line_start":643,"line_end":643,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<Array>::to_vec","value":"fn to_vec(&Self) -> Vec<JsValue>","parent":null,"children":[],"decl_id":null,"docs":" Converts the JS array into a new Vec.\n","sig":null,"attributes":[{"value":"/ Converts the JS array into a new Vec.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":27706,"byte_end":27747,"line_start":642,"line_end":642,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":28141,"byte_end":28150,"line_start":661,"line_end":661,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<Array as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Array where T: IntoIterator<Item = A>","parent":{"krate":2,"index":8275},"children":[],"decl_id":{"krate":2,"index":8277},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":28383,"byte_end":28389,"line_start":675,"line_end":675,"column_start":8,"column_end":14},"name":"extend","qualname":"<Array as std::iter::Extend>::extend","value":"fn extend<T>(&mut Self, T) where T: IntoIterator<Item = A>","parent":{"krate":2,"index":8288},"children":[],"decl_id":{"krate":2,"index":8290},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":28582,"byte_end":28589,"line_start":686,"line_end":686,"column_start":8,"column_end":15},"name":"default","qualname":"<Array as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":662},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":28802,"byte_end":28813,"line_start":696,"line_end":696,"column_start":14,"column_end":25},"name":"ArrayBuffer","qualname":"::ArrayBuffer","value":"ArrayBuffer {  }","parent":null,"children":[{"krate":0,"index":663}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":28646,"byte_end":28661,"line_start":692,"line_end":692,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":28646,"byte_end":28661,"line_start":692,"line_end":692,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":29380,"byte_end":29383,"line_start":707,"line_end":707,"column_start":12,"column_end":15},"name":"new","qualname":"<ArrayBuffer>::new","value":"fn new(u32) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `ArrayBuffer` object is used to represent a generic,\n fixed-length raw binary data buffer. You cannot directly\n manipulate the contents of an `ArrayBuffer`; instead, you\n create one of the typed array objects or a `DataView` object\n which represents the buffer in a specific format, and use that\n to read and write the contents of the buffer.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":28646,"byte_end":28661,"line_start":692,"line_end":692,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":28646,"byte_end":28661,"line_start":692,"line_end":692,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":29997,"byte_end":30008,"line_start":717,"line_end":717,"column_start":12,"column_end":23},"name":"byte_length","qualname":"<ArrayBuffer>::byte_length","value":"fn byte_length(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The byteLength property of an object which is an instance of type ArrayBuffer\n it's an accessor property whose set accessor function is undefined,\n meaning that you can only read this property.\n The value is established when the array is constructed and cannot be changed.\n This property returns 0 if this ArrayBuffer has been detached.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":28646,"byte_end":28661,"line_start":692,"line_end":692,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":28646,"byte_end":28661,"line_start":692,"line_end":692,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":30409,"byte_end":30416,"line_start":724,"line_end":724,"column_start":12,"column_end":19},"name":"is_view","qualname":"<ArrayBuffer>::is_view","value":"fn is_view(&JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `isView()` method returns true if arg is one of the `ArrayBuffer`\n views, such as typed array objects or a DataView; false otherwise.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":28646,"byte_end":28661,"line_start":692,"line_end":692,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":28646,"byte_end":28661,"line_start":692,"line_end":692,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":30793,"byte_end":30798,"line_start":732,"line_end":732,"column_start":12,"column_end":17},"name":"slice","qualname":"<ArrayBuffer>::slice","value":"fn slice(&Self, u32) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a new `ArrayBuffer` whose contents\n are a copy of this `ArrayBuffer`'s bytes from begin, inclusive,\n up to end, exclusive.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":28646,"byte_end":28661,"line_start":692,"line_end":692,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":28646,"byte_end":28661,"line_start":692,"line_end":692,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":31092,"byte_end":31106,"line_start":738,"line_end":738,"column_start":12,"column_end":26},"name":"slice_with_end","qualname":"<ArrayBuffer>::slice_with_end","value":"fn slice_with_end(&Self, u32, u32) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" Like `slice()` but with the `end` argument.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":28646,"byte_end":28661,"line_start":692,"line_end":692,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":28646,"byte_end":28661,"line_start":692,"line_end":692,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":772},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":31336,"byte_end":31353,"line_start":746,"line_end":746,"column_start":14,"column_end":31},"name":"SharedArrayBuffer","qualname":"::SharedArrayBuffer","value":"SharedArrayBuffer {  }","parent":null,"children":[{"krate":0,"index":773}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":31189,"byte_end":31204,"line_start":742,"line_end":742,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":31189,"byte_end":31204,"line_start":742,"line_end":742,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":31853,"byte_end":31856,"line_start":756,"line_end":756,"column_start":12,"column_end":15},"name":"new","qualname":"<SharedArrayBuffer>::new","value":"fn new(u32) -> SharedArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `SharedArrayBuffer` object is used to represent a generic,\n fixed-length raw binary data buffer, similar to the `ArrayBuffer`\n object, but in a way that they can be used to create views\n on shared memory. Unlike an `ArrayBuffer`, a `SharedArrayBuffer`\n cannot become detached.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":31189,"byte_end":31204,"line_start":742,"line_end":742,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":31189,"byte_end":31204,"line_start":742,"line_end":742,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":32311,"byte_end":32322,"line_start":764,"line_end":764,"column_start":12,"column_end":23},"name":"byte_length","qualname":"<SharedArrayBuffer>::byte_length","value":"fn byte_length(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The byteLength accessor property represents the length of\n an `SharedArrayBuffer` in bytes. This is established when\n the `SharedArrayBuffer` is constructed and cannot be changed.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":31189,"byte_end":31204,"line_start":742,"line_end":742,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":31189,"byte_end":31204,"line_start":742,"line_end":742,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":32725,"byte_end":32730,"line_start":772,"line_end":772,"column_start":12,"column_end":17},"name":"slice","qualname":"<SharedArrayBuffer>::slice","value":"fn slice(&Self, u32) -> SharedArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a new `SharedArrayBuffer` whose contents\n are a copy of this `SharedArrayBuffer`'s bytes from begin, inclusive,\n up to end, exclusive.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":31189,"byte_end":31204,"line_start":742,"line_end":742,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":31189,"byte_end":31204,"line_start":742,"line_end":742,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":33042,"byte_end":33056,"line_start":778,"line_end":778,"column_start":12,"column_end":26},"name":"slice_with_end","qualname":"<SharedArrayBuffer>::slice_with_end","value":"fn slice_with_end(&Self, u32, u32) -> SharedArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" Like `slice()` but with the `end` argument.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":31189,"byte_end":31204,"line_start":742,"line_end":742,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":31189,"byte_end":31204,"line_start":742,"line_end":742,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":33469,"byte_end":33473,"line_start":789,"line_end":789,"column_start":12,"column_end":16},"name":"keys","qualname":"<Array>::keys","value":"fn keys(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `keys()` method returns a new Array Iterator object that contains the\n keys for each index in the array.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":33148,"byte_end":33163,"line_start":782,"line_end":782,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":33148,"byte_end":33163,"line_start":782,"line_end":782,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":33811,"byte_end":33818,"line_start":796,"line_end":796,"column_start":12,"column_end":19},"name":"entries","qualname":"<Array>::entries","value":"fn entries(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `entries()` method returns a new Array Iterator object that contains\n the key/value pairs for each index in the array.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":33148,"byte_end":33163,"line_start":782,"line_end":782,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":33148,"byte_end":33163,"line_start":782,"line_end":782,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34145,"byte_end":34151,"line_start":803,"line_end":803,"column_start":12,"column_end":18},"name":"values","qualname":"<Array>::values","value":"fn values(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `values()` method returns a new Array Iterator object that\n contains the values for each index in the array.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":33148,"byte_end":33163,"line_start":782,"line_end":782,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":33148,"byte_end":33163,"line_start":782,"line_end":782,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":113},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34788,"byte_end":34795,"line_start":816,"line_end":816,"column_start":9,"column_end":16},"name":"Atomics","qualname":"::Atomics","value":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":787},{"krate":0,"index":789},{"krate":0,"index":791},{"krate":0,"index":793},{"krate":0,"index":795},{"krate":0,"index":797},{"krate":0,"index":799},{"krate":0,"index":801},{"krate":0,"index":803},{"krate":0,"index":805},{"krate":0,"index":807},{"krate":0,"index":809},{"krate":0,"index":811},{"krate":0,"index":813}],"decl_id":null,"docs":" The `Atomics` object provides atomic operations as static methods.\n They are used with `SharedArrayBuffer` objects.","sig":null,"attributes":[{"value":"/ The `Atomics` object provides atomic operations as static methods.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34182,"byte_end":34252,"line_start":806,"line_end":806,"column_start":1,"column_end":71}},{"value":"/ They are used with `SharedArrayBuffer` objects.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34253,"byte_end":34304,"line_start":807,"line_end":807,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34305,"byte_end":34308,"line_start":808,"line_end":808,"column_start":1,"column_end":4}},{"value":"/ The Atomic operations are installed on an `Atomics` module. Unlike","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34309,"byte_end":34379,"line_start":809,"line_end":809,"column_start":1,"column_end":71}},{"value":"/ the other global objects, `Atomics` is not a constructor. You cannot","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34380,"byte_end":34452,"line_start":810,"line_end":810,"column_start":1,"column_end":73}},{"value":"/ use it with a new operator or invoke the `Atomics` object as a","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34453,"byte_end":34519,"line_start":811,"line_end":811,"column_start":1,"column_end":67}},{"value":"/ function. All properties and methods of `Atomics` are static","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34520,"byte_end":34584,"line_start":812,"line_end":812,"column_start":1,"column_end":65}},{"value":"/ (as is the case with the Math object, for example).","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34585,"byte_end":34640,"line_start":813,"line_end":813,"column_start":1,"column_end":56}},{"value":"/ [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34641,"byte_end":34754,"line_start":814,"line_end":814,"column_start":1,"column_end":114}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34755,"byte_end":34779,"line_start":815,"line_end":815,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":787},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":35343,"byte_end":35346,"line_start":828,"line_end":828,"column_start":16,"column_end":19},"name":"add","qualname":"::Atomics::add","value":"fn add(&JsValue, u32, i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.add()` method adds a given value at a given\n position in the array and returns the old value at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":789},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":35945,"byte_end":35948,"line_start":838,"line_end":838,"column_start":16,"column_end":19},"name":"and","qualname":"::Atomics::and","value":"fn and(&JsValue, u32, i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.and()` method computes a bitwise AND with a given\n value at a given position in the array, and returns the old value\n at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":791},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":36701,"byte_end":36717,"line_start":849,"line_end":849,"column_start":16,"column_end":32},"name":"compare_exchange","qualname":"::Atomics::compare_exchange","value":"fn compare_exchange(&JsValue, u32, i32, i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.compareExchange()` method exchanges a given\n replacement value at a given position in the array, if a given expected\n value equals the old value. It returns the old value at that position\n whether it was equal to the expected value or not.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":793},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":37384,"byte_end":37392,"line_start":863,"line_end":863,"column_start":16,"column_end":24},"name":"exchange","qualname":"::Atomics::exchange","value":"fn exchange(&JsValue, u32, i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.exchange()` method stores a given value at a given\n position in the array and returns the old value at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":795},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":37958,"byte_end":37970,"line_start":872,"line_end":872,"column_start":16,"column_end":28},"name":"is_lock_free","qualname":"::Atomics::is_lock_free","value":"fn is_lock_free(u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.isLockFree()` method is used to determine\n whether to use locks or atomic operations. It returns true,\n if the given size is one of the `BYTES_PER_ELEMENT` property\n of integer `TypedArray` types.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":797},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":38310,"byte_end":38314,"line_start":879,"line_end":879,"column_start":16,"column_end":20},"name":"load","qualname":"::Atomics::load","value":"fn load(&JsValue, u32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.load()` method returns a value at a given\n position in the array.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":799},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":38859,"byte_end":38865,"line_start":888,"line_end":888,"column_start":16,"column_end":22},"name":"notify","qualname":"::Atomics::notify","value":"fn notify(&Int32Array, u32) -> Result<u32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.notify()` method notifies up some agents that\n are sleeping in the wait queue.\n Note: This operation works with a shared `Int32Array` only.\n If `count` is not provided, notifies all the agents in the queue.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":801},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":39079,"byte_end":39096,"line_start":892,"line_end":892,"column_start":16,"column_end":33},"name":"notify_with_count","qualname":"::Atomics::notify_with_count","value":"fn notify_with_count(&Int32Array, u32, u32) -> Result<u32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" Notifies up to `count` agents in the wait queue.\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":803},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":39730,"byte_end":39732,"line_start":905,"line_end":905,"column_start":16,"column_end":18},"name":"or","qualname":"::Atomics::or","value":"fn or(&JsValue, u32, i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.or()` method computes a bitwise OR with a given value\n at a given position in the array, and returns the old value at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":805},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":40156,"byte_end":40161,"line_start":912,"line_end":912,"column_start":16,"column_end":21},"name":"store","qualname":"::Atomics::store","value":"fn store(&JsValue, u32, i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.store()` method stores a given value at the given\n position in the array and returns that value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":807},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":40730,"byte_end":40733,"line_start":921,"line_end":921,"column_start":16,"column_end":19},"name":"sub","qualname":"::Atomics::sub","value":"fn sub(&JsValue, u32, i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.sub()` method substracts a given value at a\n given position in the array and returns the old value at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":809},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":41425,"byte_end":41429,"line_start":932,"line_end":932,"column_start":16,"column_end":20},"name":"wait","qualname":"::Atomics::wait","value":"fn wait(&Int32Array, u32, i32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.wait()` method verifies that a given\n position in an `Int32Array` still contains a given value\n and if so sleeps, awaiting a wakeup or a timeout.\n It returns a string which is either \"ok\", \"not-equal\", or \"timed-out\".\n Note: This operation only works with a shared `Int32Array`\n and may not be allowed on the main thread.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":811},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":41780,"byte_end":41797,"line_start":938,"line_end":938,"column_start":16,"column_end":33},"name":"wait_with_timeout","qualname":"::Atomics::wait_with_timeout","value":"fn wait_with_timeout(&Int32Array, u32, i32, f64) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" Like `wait()`, but with timeout","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":813},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":42477,"byte_end":42480,"line_start":953,"line_end":953,"column_start":16,"column_end":19},"name":"xor","qualname":"::Atomics::xor","value":"fn xor(&JsValue, u32, i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.xor()` method computes a bitwise XOR\n with a given value at a given position in the array,\n and returns the old value at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":34821,"byte_end":34836,"line_start":819,"line_end":819,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":924},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":42748,"byte_end":42754,"line_start":962,"line_end":962,"column_start":14,"column_end":20},"name":"BigInt","qualname":"::BigInt","value":"BigInt {  }","parent":null,"children":[{"krate":0,"index":925}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":42572,"byte_end":42587,"line_start":958,"line_end":958,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":42572,"byte_end":42587,"line_start":958,"line_end":958,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":43248,"byte_end":43256,"line_start":974,"line_end":974,"column_start":12,"column_end":20},"name":"as_int_n","qualname":"<BigInt>::as_int_n","value":"fn as_int_n(f64, &BigInt) -> BigInt","parent":null,"children":[],"decl_id":null,"docs":" Clamps a BigInt value to a signed integer value, and returns that value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":42572,"byte_end":42587,"line_start":958,"line_end":958,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":42572,"byte_end":42587,"line_start":958,"line_end":958,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":43591,"byte_end":43600,"line_start":980,"line_end":980,"column_start":12,"column_end":21},"name":"as_uint_n","qualname":"<BigInt>::as_uint_n","value":"fn as_uint_n(f64, &BigInt) -> BigInt","parent":null,"children":[],"decl_id":null,"docs":" Clamps a BigInt value to an unsigned integer value, and returns that value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":42572,"byte_end":42587,"line_start":958,"line_end":958,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":42572,"byte_end":42587,"line_start":958,"line_end":958,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":44098,"byte_end":44114,"line_start":986,"line_end":986,"column_start":12,"column_end":28},"name":"to_locale_string","qualname":"<BigInt>::to_locale_string","value":"fn to_locale_string(&Self, &JsValue, &JsValue) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" Returns a string with a language-sensitive representation of this BigInt value. Overrides the [`Object.prototype.toLocaleString()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt/toLocaleString) method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":42572,"byte_end":42587,"line_start":958,"line_end":958,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":42572,"byte_end":42587,"line_start":958,"line_end":958,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":44621,"byte_end":44630,"line_start":992,"line_end":992,"column_start":12,"column_end":21},"name":"to_string","qualname":"<BigInt>::to_string","value":"fn to_string(&Self, u8) -> Result<JsString, RangeError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a string representing this BigInt value in the specified radix (base). Overrides the [`Object.prototype.toString()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString) method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":42572,"byte_end":42587,"line_start":958,"line_end":958,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":42572,"byte_end":42587,"line_start":958,"line_end":958,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":45180,"byte_end":45188,"line_start":1001,"line_end":1001,"column_start":12,"column_end":20},"name":"value_of","qualname":"<BigInt>::value_of","value":"fn value_of(&Self, u8) -> BigInt","parent":null,"children":[],"decl_id":null,"docs":" Returns this BigInt value. Overrides the [`Object.prototype.valueOf()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf) method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":42572,"byte_end":42587,"line_start":958,"line_end":958,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":42572,"byte_end":42587,"line_start":958,"line_end":958,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":45436,"byte_end":45439,"line_start":1009,"line_end":1009,"column_start":12,"column_end":15},"name":"new","qualname":"<BigInt>::new","value":"fn new(&JsValue) -> Result<BigInt, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new BigInt value.","sig":null,"attributes":[{"value":"/ Creates a new BigInt value.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":45247,"byte_end":45278,"line_start":1005,"line_end":1005,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":45283,"byte_end":45286,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt/BigInt)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":45291,"byte_end":45410,"line_start":1007,"line_end":1007,"column_start":5,"column_end":124}},{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":45415,"byte_end":45424,"line_start":1008,"line_end":1008,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":45759,"byte_end":45770,"line_start":1016,"line_end":1016,"column_start":12,"column_end":23},"name":"checked_div","qualname":"<BigInt>::checked_div","value":"fn checked_div(&Self, &Self) -> Result<Self, RangeError>","parent":null,"children":[],"decl_id":null,"docs":" Applies the binary `/` JS operator on two `BigInt`s, catching and returning any `RangeError` thrown.","sig":null,"attributes":[{"value":"/ Applies the binary `/` JS operator on two `BigInt`s, catching and returning any `RangeError` thrown.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":45521,"byte_end":45625,"line_start":1013,"line_end":1013,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":45630,"byte_end":45633,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Division)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":45638,"byte_end":45747,"line_start":1015,"line_end":1015,"column_start":5,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":46284,"byte_end":46287,"line_start":1030,"line_end":1030,"column_start":12,"column_end":15},"name":"pow","qualname":"<BigInt>::pow","value":"fn pow(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies the binary `**` JS operator on the two `BigInt`s.","sig":null,"attributes":[{"value":"/ Applies the binary `**` JS operator on the two `BigInt`s.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":46069,"byte_end":46130,"line_start":1026,"line_end":1026,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":46135,"byte_end":46138,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Exponentiation)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":46143,"byte_end":46258,"line_start":1028,"line_end":1028,"column_start":5,"column_end":120}},{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":46263,"byte_end":46272,"line_start":1029,"line_end":1029,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":47696,"byte_end":47698,"line_start":1086,"line_end":1086,"column_start":8,"column_end":10},"name":"eq","qualname":"<BigInt as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Number) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":47679,"byte_end":47688,"line_start":1085,"line_end":1085,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":47875,"byte_end":47878,"line_start":1095,"line_end":1095,"column_start":8,"column_end":11},"name":"not","qualname":"<&'_ BigInt as std::ops::Not>::not","value":"fn not(Self) -> Self::Output","parent":{"krate":2,"index":3299},"children":[],"decl_id":{"krate":2,"index":3301},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":47858,"byte_end":47867,"line_start":1094,"line_end":1094,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":47999,"byte_end":48002,"line_start":1100,"line_end":1100,"column_start":31,"column_end":34},"name":"not","qualname":"<BigInt as std::ops::Not>::not","value":"fn not(Self) -> Self::Output","parent":{"krate":2,"index":3299},"children":[],"decl_id":{"krate":2,"index":3301},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2220,"byte_end":2229,"line_start":59,"line_end":59,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48043,"byte_end":48046,"line_start":1101,"line_end":1101,"column_start":28,"column_end":31},"name":"neg","qualname":"<&'_ BigInt as std::ops::Neg>::neg","value":"fn neg(Self) -> Self::Output","parent":{"krate":2,"index":3274},"children":[],"decl_id":{"krate":2,"index":3276},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3362,"byte_end":3371,"line_start":103,"line_end":103,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48043,"byte_end":48046,"line_start":1101,"line_end":1101,"column_start":28,"column_end":31},"name":"neg","qualname":"<BigInt as std::ops::Neg>::neg","value":"fn neg(Self) -> Self::Output","parent":{"krate":2,"index":3274},"children":[],"decl_id":{"krate":2,"index":3276},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2220,"byte_end":2229,"line_start":59,"line_end":59,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48091,"byte_end":48097,"line_start":1102,"line_end":1102,"column_start":32,"column_end":38},"name":"bitand","qualname":"<&'_ BigInt as std::ops::BitAnd>::bitand","value":"fn bitand(Self, &BigInt) -> Self::Output","parent":{"krate":2,"index":3306},"children":[],"decl_id":{"krate":2,"index":3309},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3740,"byte_end":3749,"line_start":118,"line_end":118,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48091,"byte_end":48097,"line_start":1102,"line_end":1102,"column_start":32,"column_end":38},"name":"bitand","qualname":"<&'a BigInt as std::ops::BitAnd>::bitand","value":"fn bitand(Self, BigInt) -> Self::Output","parent":{"krate":2,"index":3306},"children":[],"decl_id":{"krate":2,"index":3309},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2557,"byte_end":2566,"line_start":72,"line_end":72,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48091,"byte_end":48097,"line_start":1102,"line_end":1102,"column_start":32,"column_end":38},"name":"bitand","qualname":"<BigInt as std::ops::BitAnd>::bitand","value":"fn bitand(Self, &BigInt) -> Self::Output","parent":{"krate":2,"index":3306},"children":[],"decl_id":{"krate":2,"index":3309},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2809,"byte_end":2818,"line_start":81,"line_end":81,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48091,"byte_end":48097,"line_start":1102,"line_end":1102,"column_start":32,"column_end":38},"name":"bitand","qualname":"<BigInt as std::ops::BitAnd>::bitand","value":"fn bitand(Self, BigInt) -> Self::Output","parent":{"krate":2,"index":3306},"children":[],"decl_id":{"krate":2,"index":3309},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3061,"byte_end":3070,"line_start":90,"line_end":90,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48141,"byte_end":48146,"line_start":1103,"line_end":1103,"column_start":31,"column_end":36},"name":"bitor","qualname":"<&'_ BigInt as std::ops::BitOr>::bitor","value":"fn bitor(Self, &BigInt) -> Self::Output","parent":{"krate":2,"index":3311},"children":[],"decl_id":{"krate":2,"index":3314},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3740,"byte_end":3749,"line_start":118,"line_end":118,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48141,"byte_end":48146,"line_start":1103,"line_end":1103,"column_start":31,"column_end":36},"name":"bitor","qualname":"<&'a BigInt as std::ops::BitOr>::bitor","value":"fn bitor(Self, BigInt) -> Self::Output","parent":{"krate":2,"index":3311},"children":[],"decl_id":{"krate":2,"index":3314},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2557,"byte_end":2566,"line_start":72,"line_end":72,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48141,"byte_end":48146,"line_start":1103,"line_end":1103,"column_start":31,"column_end":36},"name":"bitor","qualname":"<BigInt as std::ops::BitOr>::bitor","value":"fn bitor(Self, &BigInt) -> Self::Output","parent":{"krate":2,"index":3311},"children":[],"decl_id":{"krate":2,"index":3314},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2809,"byte_end":2818,"line_start":81,"line_end":81,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48141,"byte_end":48146,"line_start":1103,"line_end":1103,"column_start":31,"column_end":36},"name":"bitor","qualname":"<BigInt as std::ops::BitOr>::bitor","value":"fn bitor(Self, BigInt) -> Self::Output","parent":{"krate":2,"index":3311},"children":[],"decl_id":{"krate":2,"index":3314},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3061,"byte_end":3070,"line_start":90,"line_end":90,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48191,"byte_end":48197,"line_start":1104,"line_end":1104,"column_start":32,"column_end":38},"name":"bitxor","qualname":"<&'_ BigInt as std::ops::BitXor>::bitxor","value":"fn bitxor(Self, &BigInt) -> Self::Output","parent":{"krate":2,"index":3316},"children":[],"decl_id":{"krate":2,"index":3319},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3740,"byte_end":3749,"line_start":118,"line_end":118,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48191,"byte_end":48197,"line_start":1104,"line_end":1104,"column_start":32,"column_end":38},"name":"bitxor","qualname":"<&'a BigInt as std::ops::BitXor>::bitxor","value":"fn bitxor(Self, BigInt) -> Self::Output","parent":{"krate":2,"index":3316},"children":[],"decl_id":{"krate":2,"index":3319},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2557,"byte_end":2566,"line_start":72,"line_end":72,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48191,"byte_end":48197,"line_start":1104,"line_end":1104,"column_start":32,"column_end":38},"name":"bitxor","qualname":"<BigInt as std::ops::BitXor>::bitxor","value":"fn bitxor(Self, &BigInt) -> Self::Output","parent":{"krate":2,"index":3316},"children":[],"decl_id":{"krate":2,"index":3319},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2809,"byte_end":2818,"line_start":81,"line_end":81,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48191,"byte_end":48197,"line_start":1104,"line_end":1104,"column_start":32,"column_end":38},"name":"bitxor","qualname":"<BigInt as std::ops::BitXor>::bitxor","value":"fn bitxor(Self, BigInt) -> Self::Output","parent":{"krate":2,"index":3316},"children":[],"decl_id":{"krate":2,"index":3319},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3061,"byte_end":3070,"line_start":90,"line_end":90,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48239,"byte_end":48242,"line_start":1105,"line_end":1105,"column_start":29,"column_end":32},"name":"shl","qualname":"<&'_ BigInt as std::ops::Shl>::shl","value":"fn shl(Self, &BigInt) -> Self::Output","parent":{"krate":2,"index":3321},"children":[],"decl_id":{"krate":2,"index":3324},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3740,"byte_end":3749,"line_start":118,"line_end":118,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48239,"byte_end":48242,"line_start":1105,"line_end":1105,"column_start":29,"column_end":32},"name":"shl","qualname":"<&'a BigInt as std::ops::Shl>::shl","value":"fn shl(Self, BigInt) -> Self::Output","parent":{"krate":2,"index":3321},"children":[],"decl_id":{"krate":2,"index":3324},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2557,"byte_end":2566,"line_start":72,"line_end":72,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48239,"byte_end":48242,"line_start":1105,"line_end":1105,"column_start":29,"column_end":32},"name":"shl","qualname":"<BigInt as std::ops::Shl>::shl","value":"fn shl(Self, &BigInt) -> Self::Output","parent":{"krate":2,"index":3321},"children":[],"decl_id":{"krate":2,"index":3324},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2809,"byte_end":2818,"line_start":81,"line_end":81,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48239,"byte_end":48242,"line_start":1105,"line_end":1105,"column_start":29,"column_end":32},"name":"shl","qualname":"<BigInt as std::ops::Shl>::shl","value":"fn shl(Self, BigInt) -> Self::Output","parent":{"krate":2,"index":3321},"children":[],"decl_id":{"krate":2,"index":3324},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3061,"byte_end":3070,"line_start":90,"line_end":90,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48284,"byte_end":48287,"line_start":1106,"line_end":1106,"column_start":29,"column_end":32},"name":"shr","qualname":"<&'_ BigInt as std::ops::Shr>::shr","value":"fn shr(Self, &BigInt) -> Self::Output","parent":{"krate":2,"index":3327},"children":[],"decl_id":{"krate":2,"index":3330},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3740,"byte_end":3749,"line_start":118,"line_end":118,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48284,"byte_end":48287,"line_start":1106,"line_end":1106,"column_start":29,"column_end":32},"name":"shr","qualname":"<&'a BigInt as std::ops::Shr>::shr","value":"fn shr(Self, BigInt) -> Self::Output","parent":{"krate":2,"index":3327},"children":[],"decl_id":{"krate":2,"index":3330},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2557,"byte_end":2566,"line_start":72,"line_end":72,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48284,"byte_end":48287,"line_start":1106,"line_end":1106,"column_start":29,"column_end":32},"name":"shr","qualname":"<BigInt as std::ops::Shr>::shr","value":"fn shr(Self, &BigInt) -> Self::Output","parent":{"krate":2,"index":3327},"children":[],"decl_id":{"krate":2,"index":3330},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2809,"byte_end":2818,"line_start":81,"line_end":81,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48284,"byte_end":48287,"line_start":1106,"line_end":1106,"column_start":29,"column_end":32},"name":"shr","qualname":"<BigInt as std::ops::Shr>::shr","value":"fn shr(Self, BigInt) -> Self::Output","parent":{"krate":2,"index":3327},"children":[],"decl_id":{"krate":2,"index":3330},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3061,"byte_end":3070,"line_start":90,"line_end":90,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48329,"byte_end":48332,"line_start":1107,"line_end":1107,"column_start":29,"column_end":32},"name":"add","qualname":"<&'_ BigInt as std::ops::Add>::add","value":"fn add(Self, &BigInt) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3740,"byte_end":3749,"line_start":118,"line_end":118,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48329,"byte_end":48332,"line_start":1107,"line_end":1107,"column_start":29,"column_end":32},"name":"add","qualname":"<&'a BigInt as std::ops::Add>::add","value":"fn add(Self, BigInt) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2557,"byte_end":2566,"line_start":72,"line_end":72,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48329,"byte_end":48332,"line_start":1107,"line_end":1107,"column_start":29,"column_end":32},"name":"add","qualname":"<BigInt as std::ops::Add>::add","value":"fn add(Self, &BigInt) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2809,"byte_end":2818,"line_start":81,"line_end":81,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48329,"byte_end":48332,"line_start":1107,"line_end":1107,"column_start":29,"column_end":32},"name":"add","qualname":"<BigInt as std::ops::Add>::add","value":"fn add(Self, BigInt) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3061,"byte_end":3070,"line_start":90,"line_end":90,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48374,"byte_end":48377,"line_start":1108,"line_end":1108,"column_start":29,"column_end":32},"name":"sub","qualname":"<&'_ BigInt as std::ops::Sub>::sub","value":"fn sub(Self, &BigInt) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3740,"byte_end":3749,"line_start":118,"line_end":118,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48374,"byte_end":48377,"line_start":1108,"line_end":1108,"column_start":29,"column_end":32},"name":"sub","qualname":"<&'a BigInt as std::ops::Sub>::sub","value":"fn sub(Self, BigInt) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2557,"byte_end":2566,"line_start":72,"line_end":72,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48374,"byte_end":48377,"line_start":1108,"line_end":1108,"column_start":29,"column_end":32},"name":"sub","qualname":"<BigInt as std::ops::Sub>::sub","value":"fn sub(Self, &BigInt) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2809,"byte_end":2818,"line_start":81,"line_end":81,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48374,"byte_end":48377,"line_start":1108,"line_end":1108,"column_start":29,"column_end":32},"name":"sub","qualname":"<BigInt as std::ops::Sub>::sub","value":"fn sub(Self, BigInt) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3061,"byte_end":3070,"line_start":90,"line_end":90,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48419,"byte_end":48422,"line_start":1109,"line_end":1109,"column_start":29,"column_end":32},"name":"div","qualname":"<&'_ BigInt as std::ops::Div>::div","value":"fn div(Self, &BigInt) -> Self::Output","parent":{"krate":2,"index":3262},"children":[],"decl_id":{"krate":2,"index":3265},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3740,"byte_end":3749,"line_start":118,"line_end":118,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48419,"byte_end":48422,"line_start":1109,"line_end":1109,"column_start":29,"column_end":32},"name":"div","qualname":"<&'a BigInt as std::ops::Div>::div","value":"fn div(Self, BigInt) -> Self::Output","parent":{"krate":2,"index":3262},"children":[],"decl_id":{"krate":2,"index":3265},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2557,"byte_end":2566,"line_start":72,"line_end":72,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48419,"byte_end":48422,"line_start":1109,"line_end":1109,"column_start":29,"column_end":32},"name":"div","qualname":"<BigInt as std::ops::Div>::div","value":"fn div(Self, &BigInt) -> Self::Output","parent":{"krate":2,"index":3262},"children":[],"decl_id":{"krate":2,"index":3265},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2809,"byte_end":2818,"line_start":81,"line_end":81,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48419,"byte_end":48422,"line_start":1109,"line_end":1109,"column_start":29,"column_end":32},"name":"div","qualname":"<BigInt as std::ops::Div>::div","value":"fn div(Self, BigInt) -> Self::Output","parent":{"krate":2,"index":3262},"children":[],"decl_id":{"krate":2,"index":3265},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3061,"byte_end":3070,"line_start":90,"line_end":90,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48464,"byte_end":48467,"line_start":1110,"line_end":1110,"column_start":29,"column_end":32},"name":"mul","qualname":"<&'_ BigInt as std::ops::Mul>::mul","value":"fn mul(Self, &BigInt) -> Self::Output","parent":{"krate":2,"index":3257},"children":[],"decl_id":{"krate":2,"index":3260},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3740,"byte_end":3749,"line_start":118,"line_end":118,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48464,"byte_end":48467,"line_start":1110,"line_end":1110,"column_start":29,"column_end":32},"name":"mul","qualname":"<&'a BigInt as std::ops::Mul>::mul","value":"fn mul(Self, BigInt) -> Self::Output","parent":{"krate":2,"index":3257},"children":[],"decl_id":{"krate":2,"index":3260},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2557,"byte_end":2566,"line_start":72,"line_end":72,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48464,"byte_end":48467,"line_start":1110,"line_end":1110,"column_start":29,"column_end":32},"name":"mul","qualname":"<BigInt as std::ops::Mul>::mul","value":"fn mul(Self, &BigInt) -> Self::Output","parent":{"krate":2,"index":3257},"children":[],"decl_id":{"krate":2,"index":3260},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2809,"byte_end":2818,"line_start":81,"line_end":81,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48464,"byte_end":48467,"line_start":1110,"line_end":1110,"column_start":29,"column_end":32},"name":"mul","qualname":"<BigInt as std::ops::Mul>::mul","value":"fn mul(Self, BigInt) -> Self::Output","parent":{"krate":2,"index":3257},"children":[],"decl_id":{"krate":2,"index":3260},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3061,"byte_end":3070,"line_start":90,"line_end":90,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48509,"byte_end":48512,"line_start":1111,"line_end":1111,"column_start":29,"column_end":32},"name":"rem","qualname":"<&'_ BigInt as std::ops::Rem>::rem","value":"fn rem(Self, &BigInt) -> Self::Output","parent":{"krate":2,"index":3268},"children":[],"decl_id":{"krate":2,"index":3271},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3740,"byte_end":3749,"line_start":118,"line_end":118,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48509,"byte_end":48512,"line_start":1111,"line_end":1111,"column_start":29,"column_end":32},"name":"rem","qualname":"<&'a BigInt as std::ops::Rem>::rem","value":"fn rem(Self, BigInt) -> Self::Output","parent":{"krate":2,"index":3268},"children":[],"decl_id":{"krate":2,"index":3271},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2557,"byte_end":2566,"line_start":72,"line_end":72,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48509,"byte_end":48512,"line_start":1111,"line_end":1111,"column_start":29,"column_end":32},"name":"rem","qualname":"<BigInt as std::ops::Rem>::rem","value":"fn rem(Self, &BigInt) -> Self::Output","parent":{"krate":2,"index":3268},"children":[],"decl_id":{"krate":2,"index":3271},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2809,"byte_end":2818,"line_start":81,"line_end":81,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48509,"byte_end":48512,"line_start":1111,"line_end":1111,"column_start":29,"column_end":32},"name":"rem","qualname":"<BigInt as std::ops::Rem>::rem","value":"fn rem(Self, BigInt) -> Self::Output","parent":{"krate":2,"index":3268},"children":[],"decl_id":{"krate":2,"index":3271},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3061,"byte_end":3070,"line_start":90,"line_end":90,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48608,"byte_end":48615,"line_start":1117,"line_end":1117,"column_start":8,"column_end":15},"name":"default","qualname":"<BigInt as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48744,"byte_end":48752,"line_start":1126,"line_end":1126,"column_start":8,"column_end":16},"name":"from_str","qualname":"<BigInt as std::str::FromStr>::from_str","value":"fn from_str(&str) -> Result<Self, Self::Err>","parent":{"krate":2,"index":12765},"children":[],"decl_id":{"krate":2,"index":12767},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48727,"byte_end":48736,"line_start":1125,"line_end":1125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48881,"byte_end":48884,"line_start":1133,"line_end":1133,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BigInt as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48864,"byte_end":48873,"line_start":1132,"line_end":1132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":49033,"byte_end":49036,"line_start":1140,"line_end":1140,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BigInt as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10115},"children":[],"decl_id":{"krate":2,"index":10116},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":49016,"byte_end":49025,"line_start":1139,"line_end":1139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":49233,"byte_end":49236,"line_start":1147,"line_end":1147,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BigInt as std::fmt::Binary>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10119},"children":[],"decl_id":{"krate":2,"index":10120},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":49216,"byte_end":49225,"line_start":1146,"line_end":1146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":49433,"byte_end":49436,"line_start":1154,"line_end":1154,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BigInt as std::fmt::Octal>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":49416,"byte_end":49425,"line_start":1153,"line_end":1153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":49636,"byte_end":49639,"line_start":1161,"line_end":1161,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BigInt as std::fmt::LowerHex>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10121},"children":[],"decl_id":{"krate":2,"index":10122},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":49619,"byte_end":49628,"line_start":1160,"line_end":1160,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":49887,"byte_end":49890,"line_start":1172,"line_end":1172,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BigInt as std::fmt::UpperHex>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10123},"children":[],"decl_id":{"krate":2,"index":10124},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":49870,"byte_end":49879,"line_start":1171,"line_end":1171,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1253},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":50299,"byte_end":50306,"line_start":1184,"line_end":1184,"column_start":14,"column_end":21},"name":"Boolean","qualname":"::Boolean","value":"Boolean {  }","parent":null,"children":[{"krate":0,"index":1254}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":50114,"byte_end":50129,"line_start":1180,"line_end":1180,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":50114,"byte_end":50129,"line_start":1180,"line_end":1180,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":50658,"byte_end":50661,"line_start":1192,"line_end":1192,"column_start":12,"column_end":15},"name":"new","qualname":"<Boolean>::new","value":"fn new(&JsValue) -> Boolean","parent":null,"children":[],"decl_id":null,"docs":" The `Boolean()` constructor creates an object wrapper for a boolean value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":50114,"byte_end":50129,"line_start":1180,"line_end":1180,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":50114,"byte_end":50129,"line_start":1180,"line_end":1180,"column_start":1,"column_end":16}},{"value":"deprecated(note = \"recommended to use `Boolean::from` instead\")","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":50555,"byte_end":50621,"line_start":1190,"line_end":1190,"column_start":5,"column_end":71}},{"value":"allow(deprecated)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":50626,"byte_end":50646,"line_start":1191,"line_end":1191,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":50966,"byte_end":50974,"line_start":1198,"line_end":1198,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Boolean>::value_of","value":"fn value_of(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `valueOf()` method returns the primitive value of a `Boolean` object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":50114,"byte_end":50129,"line_start":1180,"line_end":1180,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":50114,"byte_end":50129,"line_start":1180,"line_end":1180,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":51054,"byte_end":51058,"line_start":1203,"line_end":1203,"column_start":8,"column_end":12},"name":"from","qualname":"<Boolean as std::convert::From>::from","value":"fn from(bool) -> Boolean","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":51037,"byte_end":51046,"line_start":1202,"line_end":1202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":51194,"byte_end":51198,"line_start":1210,"line_end":1210,"column_start":8,"column_end":12},"name":"from","qualname":"<bool as std::convert::From>::from","value":"fn from(Boolean) -> bool","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":51177,"byte_end":51186,"line_start":1209,"line_end":1209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":51307,"byte_end":51309,"line_start":1217,"line_end":1217,"column_start":8,"column_end":10},"name":"eq","qualname":"<Boolean as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &bool) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":51290,"byte_end":51299,"line_start":1216,"line_end":1216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":51421,"byte_end":51424,"line_start":1223,"line_end":1223,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Boolean as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":51566,"byte_end":51569,"line_start":1229,"line_end":1229,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Boolean as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10115},"children":[],"decl_id":{"krate":2,"index":10116},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":51708,"byte_end":51715,"line_start":1235,"line_end":1235,"column_start":8,"column_end":15},"name":"default","qualname":"<Boolean as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":51846,"byte_end":51849,"line_start":1244,"line_end":1244,"column_start":8,"column_end":11},"name":"not","qualname":"<&'_ Boolean as std::ops::Not>::not","value":"fn not(Self) -> Self::Output","parent":{"krate":2,"index":3299},"children":[],"decl_id":{"krate":2,"index":3301},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":51829,"byte_end":51838,"line_start":1243,"line_end":1243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":51953,"byte_end":51956,"line_start":1249,"line_end":1249,"column_start":31,"column_end":34},"name":"not","qualname":"<Boolean as std::ops::Not>::not","value":"fn not(Self) -> Self::Output","parent":{"krate":2,"index":3299},"children":[],"decl_id":{"krate":2,"index":3301},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2220,"byte_end":2229,"line_start":59,"line_end":59,"column_start":13,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1456},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52164,"byte_end":52172,"line_start":1258,"line_end":1258,"column_start":14,"column_end":22},"name":"DataView","qualname":"::DataView","value":"DataView {  }","parent":null,"children":[{"krate":0,"index":1457}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52530,"byte_end":52533,"line_start":1266,"line_end":1266,"column_start":12,"column_end":15},"name":"new","qualname":"<DataView>::new","value":"fn new(&ArrayBuffer, usize, usize) -> DataView","parent":null,"children":[],"decl_id":null,"docs":" The `DataView` view provides a low-level interface for reading and\n writing multiple number types in an `ArrayBuffer` irrespective of the\n platform's endianness.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52897,"byte_end":52903,"line_start":1272,"line_end":1272,"column_start":12,"column_end":18},"name":"buffer","qualname":"<DataView>::buffer","value":"fn buffer(&Self) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The ArrayBuffer referenced by this view. Fixed at construction time and thus read only.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":53290,"byte_end":53301,"line_start":1279,"line_end":1279,"column_start":12,"column_end":23},"name":"byte_length","qualname":"<DataView>::byte_length","value":"fn byte_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The length (in bytes) of this view from the start of its ArrayBuffer.\n Fixed at construction time and thus read only.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":53682,"byte_end":53693,"line_start":1286,"line_end":1286,"column_start":12,"column_end":23},"name":"byte_offset","qualname":"<DataView>::byte_offset","value":"fn byte_offset(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The offset (in bytes) of this view from the start of its ArrayBuffer.\n Fixed at construction time and thus read only.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":54050,"byte_end":54058,"line_start":1293,"line_end":1293,"column_start":12,"column_end":20},"name":"get_int8","qualname":"<DataView>::get_int8","value":"fn get_int8(&Self, usize) -> i8","parent":null,"children":[],"decl_id":null,"docs":" The `getInt8()` method gets a signed 8-bit integer (byte) at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":54437,"byte_end":54446,"line_start":1300,"line_end":1300,"column_start":12,"column_end":21},"name":"get_uint8","qualname":"<DataView>::get_uint8","value":"fn get_uint8(&Self, usize) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The `getUint8()` method gets a unsigned 8-bit integer (byte) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":54825,"byte_end":54834,"line_start":1307,"line_end":1307,"column_start":12,"column_end":21},"name":"get_int16","qualname":"<DataView>::get_int16","value":"fn get_int16(&Self, usize) -> i16","parent":null,"children":[],"decl_id":null,"docs":" The `getInt16()` method gets a signed 16-bit integer (short) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":55214,"byte_end":55230,"line_start":1314,"line_end":1314,"column_start":12,"column_end":28},"name":"get_int16_endian","qualname":"<DataView>::get_int16_endian","value":"fn get_int16_endian(&Self, usize, bool) -> i16","parent":null,"children":[],"decl_id":null,"docs":" The `getInt16()` method gets a signed 16-bit integer (short) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":55642,"byte_end":55652,"line_start":1321,"line_end":1321,"column_start":12,"column_end":22},"name":"get_uint16","qualname":"<DataView>::get_uint16","value":"fn get_uint16(&Self, usize) -> u16","parent":null,"children":[],"decl_id":null,"docs":" The `getUint16()` method gets an unsigned 16-bit integer (unsigned short) at the specified\n byte offset from the start of the view.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":56043,"byte_end":56060,"line_start":1328,"line_end":1328,"column_start":12,"column_end":29},"name":"get_uint16_endian","qualname":"<DataView>::get_uint16_endian","value":"fn get_uint16_endian(&Self, usize, bool) -> u16","parent":null,"children":[],"decl_id":null,"docs":" The `getUint16()` method gets an unsigned 16-bit integer (unsigned short) at the specified\n byte offset from the start of the view.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":56460,"byte_end":56469,"line_start":1335,"line_end":1335,"column_start":12,"column_end":21},"name":"get_int32","qualname":"<DataView>::get_int32","value":"fn get_int32(&Self, usize) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `getInt32()` method gets a signed 32-bit integer (long) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":56848,"byte_end":56864,"line_start":1342,"line_end":1342,"column_start":12,"column_end":28},"name":"get_int32_endian","qualname":"<DataView>::get_int32_endian","value":"fn get_int32_endian(&Self, usize, bool) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `getInt32()` method gets a signed 32-bit integer (long) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1397},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":57275,"byte_end":57285,"line_start":1349,"line_end":1349,"column_start":12,"column_end":22},"name":"get_uint32","qualname":"<DataView>::get_uint32","value":"fn get_uint32(&Self, usize) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUint32()` method gets an unsigned 32-bit integer (unsigned long) at the specified\n byte offset from the start of the view.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":57675,"byte_end":57692,"line_start":1356,"line_end":1356,"column_start":12,"column_end":29},"name":"get_uint32_endian","qualname":"<DataView>::get_uint32_endian","value":"fn get_uint32_endian(&Self, usize, bool) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUint32()` method gets an unsigned 32-bit integer (unsigned long) at the specified\n byte offset from the start of the view.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1403},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":58097,"byte_end":58108,"line_start":1363,"line_end":1363,"column_start":12,"column_end":23},"name":"get_float32","qualname":"<DataView>::get_float32","value":"fn get_float32(&Self, usize) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The `getFloat32()` method gets a signed 32-bit float (float) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1406},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":58492,"byte_end":58510,"line_start":1370,"line_end":1370,"column_start":12,"column_end":30},"name":"get_float32_endian","qualname":"<DataView>::get_float32_endian","value":"fn get_float32_endian(&Self, usize, bool) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The `getFloat32()` method gets a signed 32-bit float (float) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1409},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":58916,"byte_end":58927,"line_start":1377,"line_end":1377,"column_start":12,"column_end":23},"name":"get_float64","qualname":"<DataView>::get_float64","value":"fn get_float64(&Self, usize) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `getFloat64()` method gets a signed 64-bit float (double) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":59312,"byte_end":59330,"line_start":1384,"line_end":1384,"column_start":12,"column_end":30},"name":"get_float64_endian","qualname":"<DataView>::get_float64_endian","value":"fn get_float64_endian(&Self, usize, bool) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `getFloat64()` method gets a signed 64-bit float (double) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1415},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":59734,"byte_end":59742,"line_start":1391,"line_end":1391,"column_start":12,"column_end":20},"name":"set_int8","qualname":"<DataView>::set_int8","value":"fn set_int8(&Self, usize, i8)","parent":null,"children":[],"decl_id":null,"docs":" The `setInt8()` method stores a signed 8-bit integer (byte) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1418},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":60135,"byte_end":60144,"line_start":1398,"line_end":1398,"column_start":12,"column_end":21},"name":"set_uint8","qualname":"<DataView>::set_uint8","value":"fn set_uint8(&Self, usize, u8)","parent":null,"children":[],"decl_id":null,"docs":" The `setUint8()` method stores an unsigned 8-bit integer (byte) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1421},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":60536,"byte_end":60545,"line_start":1405,"line_end":1405,"column_start":12,"column_end":21},"name":"set_int16","qualname":"<DataView>::set_int16","value":"fn set_int16(&Self, usize, i16)","parent":null,"children":[],"decl_id":null,"docs":" The `setInt16()` method stores a signed 16-bit integer (short) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":60938,"byte_end":60954,"line_start":1412,"line_end":1412,"column_start":12,"column_end":28},"name":"set_int16_endian","qualname":"<DataView>::set_int16_endian","value":"fn set_int16_endian(&Self, usize, i16, bool)","parent":null,"children":[],"decl_id":null,"docs":" The `setInt16()` method stores a signed 16-bit integer (short) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":61383,"byte_end":61393,"line_start":1419,"line_end":1419,"column_start":12,"column_end":22},"name":"set_uint16","qualname":"<DataView>::set_uint16","value":"fn set_uint16(&Self, usize, u16)","parent":null,"children":[],"decl_id":null,"docs":" The `setUint16()` method stores an unsigned 16-bit integer (unsigned short) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":61801,"byte_end":61818,"line_start":1426,"line_end":1426,"column_start":12,"column_end":29},"name":"set_uint16_endian","qualname":"<DataView>::set_uint16_endian","value":"fn set_uint16_endian(&Self, usize, u16, bool)","parent":null,"children":[],"decl_id":null,"docs":" The `setUint16()` method stores an unsigned 16-bit integer (unsigned short) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":62231,"byte_end":62240,"line_start":1433,"line_end":1433,"column_start":12,"column_end":21},"name":"set_int32","qualname":"<DataView>::set_int32","value":"fn set_int32(&Self, usize, i32)","parent":null,"children":[],"decl_id":null,"docs":" The `setInt32()` method stores a signed 32-bit integer (long) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1436},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":62632,"byte_end":62648,"line_start":1440,"line_end":1440,"column_start":12,"column_end":28},"name":"set_int32_endian","qualname":"<DataView>::set_int32_endian","value":"fn set_int32_endian(&Self, usize, i32, bool)","parent":null,"children":[],"decl_id":null,"docs":" The `setInt32()` method stores a signed 32-bit integer (long) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1439},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":63076,"byte_end":63086,"line_start":1447,"line_end":1447,"column_start":12,"column_end":22},"name":"set_uint32","qualname":"<DataView>::set_uint32","value":"fn set_uint32(&Self, usize, u32)","parent":null,"children":[],"decl_id":null,"docs":" The `setUint32()` method stores an unsigned 32-bit integer (unsigned long) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":63493,"byte_end":63510,"line_start":1454,"line_end":1454,"column_start":12,"column_end":29},"name":"set_uint32_endian","qualname":"<DataView>::set_uint32_endian","value":"fn set_uint32_endian(&Self, usize, u32, bool)","parent":null,"children":[],"decl_id":null,"docs":" The `setUint32()` method stores an unsigned 32-bit integer (unsigned long) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":63928,"byte_end":63939,"line_start":1461,"line_end":1461,"column_start":12,"column_end":23},"name":"set_float32","qualname":"<DataView>::set_float32","value":"fn set_float32(&Self, usize, f32)","parent":null,"children":[],"decl_id":null,"docs":" The `setFloat32()` method stores a signed 32-bit float (float) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":64336,"byte_end":64354,"line_start":1468,"line_end":1468,"column_start":12,"column_end":30},"name":"set_float32_endian","qualname":"<DataView>::set_float32_endian","value":"fn set_float32_endian(&Self, usize, f32, bool)","parent":null,"children":[],"decl_id":null,"docs":" The `setFloat32()` method stores a signed 32-bit float (float) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":64773,"byte_end":64784,"line_start":1475,"line_end":1475,"column_start":12,"column_end":23},"name":"set_float64","qualname":"<DataView>::set_float64","value":"fn set_float64(&Self, usize, f64)","parent":null,"children":[],"decl_id":null,"docs":" The `setFloat64()` method stores a signed 64-bit float (double) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1454},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":65182,"byte_end":65200,"line_start":1482,"line_end":1482,"column_start":12,"column_end":30},"name":"set_float64_endian","qualname":"<DataView>::set_float64_endian","value":"fn set_float64_endian(&Self, usize, f64, bool)","parent":null,"children":[],"decl_id":null,"docs":" The `setFloat64()` method stores a signed 64-bit float (double) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":52011,"byte_end":52026,"line_start":1254,"line_end":1254,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1581},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":65434,"byte_end":65439,"line_start":1490,"line_end":1490,"column_start":14,"column_end":19},"name":"Error","qualname":"::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":1582}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":65284,"byte_end":65299,"line_start":1486,"line_end":1486,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":65284,"byte_end":65299,"line_start":1486,"line_end":1486,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":65879,"byte_end":65882,"line_start":1499,"line_end":1499,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"fn new(&str) -> Error","parent":null,"children":[],"decl_id":null,"docs":" The Error constructor creates an error object.\n Instances of Error objects are thrown when runtime errors occur.\n The Error object can also be used as a base object for user-defined exceptions.\n See below for standard built-in error types.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":65284,"byte_end":65299,"line_start":1486,"line_end":1486,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":65284,"byte_end":65299,"line_start":1486,"line_end":1486,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":65952,"byte_end":65968,"line_start":1501,"line_end":1501,"column_start":12,"column_end":28},"name":"new_with_options","qualname":"<Error>::new_with_options","value":"fn new_with_options(&str, &Object) -> Error","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":65284,"byte_end":65299,"line_start":1486,"line_end":1486,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":65284,"byte_end":65299,"line_start":1486,"line_end":1486,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1561},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":66363,"byte_end":66368,"line_start":1508,"line_end":1508,"column_start":12,"column_end":17},"name":"cause","qualname":"<Error>::cause","value":"fn cause(&Self) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The cause property is the underlying cause of the error.\n Usually this is used to add context to re-thrown errors.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":65284,"byte_end":65299,"line_start":1486,"line_end":1486,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":65284,"byte_end":65299,"line_start":1486,"line_end":1486,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1564},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":66454,"byte_end":66463,"line_start":1510,"line_end":1510,"column_start":12,"column_end":21},"name":"set_cause","qualname":"<Error>::set_cause","value":"fn set_cause(&Self, &JsValue)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":65284,"byte_end":65299,"line_start":1486,"line_end":1486,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":65284,"byte_end":65299,"line_start":1486,"line_end":1486,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":66763,"byte_end":66770,"line_start":1516,"line_end":1516,"column_start":12,"column_end":19},"name":"message","qualname":"<Error>::message","value":"fn message(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The message property is a human-readable description of the error.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":65284,"byte_end":65299,"line_start":1486,"line_end":1486,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":65284,"byte_end":65299,"line_start":1486,"line_end":1486,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":66857,"byte_end":66868,"line_start":1518,"line_end":1518,"column_start":12,"column_end":23},"name":"set_message","qualname":"<Error>::set_message","value":"fn set_message(&Self, &str)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":65284,"byte_end":65299,"line_start":1486,"line_end":1486,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":65284,"byte_end":65299,"line_start":1486,"line_end":1486,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1573},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":67185,"byte_end":67189,"line_start":1524,"line_end":1524,"column_start":12,"column_end":16},"name":"name","qualname":"<Error>::name","value":"fn name(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The name property represents a name for the type of error. The initial value is \"Error\".","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":65284,"byte_end":65299,"line_start":1486,"line_end":1486,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":65284,"byte_end":65299,"line_start":1486,"line_end":1486,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1576},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":67276,"byte_end":67284,"line_start":1526,"line_end":1526,"column_start":12,"column_end":20},"name":"set_name","qualname":"<Error>::set_name","value":"fn set_name(&Self, &str)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":65284,"byte_end":65299,"line_start":1486,"line_end":1486,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":65284,"byte_end":65299,"line_start":1486,"line_end":1486,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":67594,"byte_end":67603,"line_start":1532,"line_end":1532,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Error>::to_string","value":"fn to_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the specified Error object","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":65284,"byte_end":65299,"line_start":1486,"line_end":1486,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":65284,"byte_end":65299,"line_start":1486,"line_end":1486,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1700},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":67846,"byte_end":67855,"line_start":1542,"line_end":1542,"column_start":14,"column_end":23},"name":"EvalError","qualname":"::EvalError","value":"EvalError {  }","parent":null,"children":[{"krate":0,"index":1701}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":67675,"byte_end":67690,"line_start":1538,"line_end":1538,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":67675,"byte_end":67690,"line_start":1538,"line_end":1538,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68240,"byte_end":68243,"line_start":1550,"line_end":1550,"column_start":12,"column_end":15},"name":"new","qualname":"<EvalError>::new","value":"fn new(&str) -> EvalError","parent":null,"children":[],"decl_id":null,"docs":" The EvalError object indicates an error regarding the global eval() function. This\n exception is not thrown by JavaScript anymore, however the EvalError object remains for\n compatibility.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":67675,"byte_end":67690,"line_start":1538,"line_end":1538,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":67675,"byte_end":67690,"line_start":1538,"line_end":1538,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1844},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68476,"byte_end":68484,"line_start":1558,"line_end":1558,"column_start":14,"column_end":22},"name":"Function","qualname":"::Function","value":"Function {  }","parent":null,"children":[{"krate":0,"index":1845}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1800},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":69117,"byte_end":69130,"line_start":1569,"line_end":1569,"column_start":12,"column_end":25},"name":"new_with_args","qualname":"<Function>::new_with_args","value":"fn new_with_args(&str, &str) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The `Function` constructor creates a new `Function` object. Calling the\n constructor directly can create functions dynamically, but suffers from\n security and similar (but far less significant) performance issues\n similar to `eval`. However, unlike `eval`, the `Function` constructor\n allows executing code in the global scope, prompting better programming\n habits and allowing for more efficient code minification.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1803},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":69799,"byte_end":69810,"line_start":1580,"line_end":1580,"column_start":12,"column_end":23},"name":"new_no_args","qualname":"<Function>::new_no_args","value":"fn new_no_args(&str) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The `Function` constructor creates a new `Function` object. Calling the\n constructor directly can create functions dynamically, but suffers from\n security and similar (but far less significant) performance issues\n similar to `eval`. However, unlike `eval`, the `Function` constructor\n allows executing code in the global scope, prompting better programming\n habits and allowing for more efficient code minification.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1806},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":70157,"byte_end":70162,"line_start":1587,"line_end":1587,"column_start":12,"column_end":17},"name":"apply","qualname":"<Function>::apply","value":"fn apply(&Self, &JsValue, &Array) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `apply()` method calls a function with a given this value, and arguments provided as an array\n (or an array-like object).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1809},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":70551,"byte_end":70556,"line_start":1594,"line_end":1594,"column_start":12,"column_end":17},"name":"call0","qualname":"<Function>::call0","value":"fn call0(&Self, &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `call()` method calls a function with a given this value and\n arguments provided individually.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1812},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":70931,"byte_end":70936,"line_start":1601,"line_end":1601,"column_start":12,"column_end":17},"name":"call1","qualname":"<Function>::call1","value":"fn call1(&Self, &JsValue, &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `call()` method calls a function with a given this value and\n arguments provided individually.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1815},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":71327,"byte_end":71332,"line_start":1608,"line_end":1608,"column_start":12,"column_end":17},"name":"call2","qualname":"<Function>::call2","value":"fn call2(&Self, &JsValue, &JsValue, &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `call()` method calls a function with a given this value and\n arguments provided individually.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1818},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":71778,"byte_end":71783,"line_start":1620,"line_end":1620,"column_start":12,"column_end":17},"name":"call3","qualname":"<Function>::call3","value":"fn call3(&Self, &JsValue, &JsValue, &JsValue, &JsValue)\n-> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `call()` method calls a function with a given this value and\n arguments provided individually.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1821},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":72349,"byte_end":72353,"line_start":1633,"line_end":1633,"column_start":12,"column_end":16},"name":"bind","qualname":"<Function>::bind","value":"fn bind(&Self, &JsValue) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The `bind()` method creates a new function that, when called, has its this keyword set to the provided value,\n with a given sequence of arguments preceding any provided when the new function is called.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1824},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":72808,"byte_end":72813,"line_start":1640,"line_end":1640,"column_start":12,"column_end":17},"name":"bind0","qualname":"<Function>::bind0","value":"fn bind0(&Self, &JsValue) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The `bind()` method creates a new function that, when called, has its this keyword set to the provided value,\n with a given sequence of arguments preceding any provided when the new function is called.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1827},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":73268,"byte_end":73273,"line_start":1647,"line_end":1647,"column_start":12,"column_end":17},"name":"bind1","qualname":"<Function>::bind1","value":"fn bind1(&Self, &JsValue, &JsValue) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The `bind()` method creates a new function that, when called, has its this keyword set to the provided value,\n with a given sequence of arguments preceding any provided when the new function is called.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1830},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":73744,"byte_end":73749,"line_start":1654,"line_end":1654,"column_start":12,"column_end":17},"name":"bind2","qualname":"<Function>::bind2","value":"fn bind2(&Self, &JsValue, &JsValue, &JsValue) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The `bind()` method creates a new function that, when called, has its this keyword set to the provided value,\n with a given sequence of arguments preceding any provided when the new function is called.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1833},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":74236,"byte_end":74241,"line_start":1661,"line_end":1661,"column_start":12,"column_end":17},"name":"bind3","qualname":"<Function>::bind3","value":"fn bind3(&Self, &JsValue, &JsValue, &JsValue, &JsValue) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The `bind()` method creates a new function that, when called, has its this keyword set to the provided value,\n with a given sequence of arguments preceding any provided when the new function is called.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1836},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":74668,"byte_end":74674,"line_start":1673,"line_end":1673,"column_start":12,"column_end":18},"name":"length","qualname":"<Function>::length","value":"fn length(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The length property indicates the number of arguments expected by the function.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1839},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":75073,"byte_end":75077,"line_start":1681,"line_end":1681,"column_start":12,"column_end":16},"name":"name","qualname":"<Function>::name","value":"fn name(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" A Function object's read-only name property indicates the function's\n name as specified when it was created or \"anonymous\" for functions\n created anonymously.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1842},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":75399,"byte_end":75408,"line_start":1687,"line_end":1687,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Function>::to_string","value":"fn to_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the source code of the function.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":68288,"byte_end":68303,"line_start":1554,"line_end":1554,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":75753,"byte_end":75761,"line_start":1697,"line_end":1697,"column_start":12,"column_end":20},"name":"try_from","qualname":"<Function>::try_from","value":"fn try_from(&JsValue) -> Option<&Function>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Function` value of this JS value if it's an instance of a\n function.","sig":null,"attributes":[{"value":"/ Returns the `Function` value of this JS value if it's an instance of a","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":75462,"byte_end":75536,"line_start":1691,"line_end":1691,"column_start":5,"column_end":79}},{"value":"/ function.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":75541,"byte_end":75554,"line_start":1692,"line_end":1692,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":75559,"byte_end":75562,"line_start":1693,"line_end":1693,"column_start":5,"column_end":8}},{"value":"/ If this JS value is not an instance of a function then this returns","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":75567,"byte_end":75638,"line_start":1694,"line_end":1694,"column_start":5,"column_end":76}},{"value":"/ `None`.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":75643,"byte_end":75654,"line_start":1695,"line_end":1695,"column_start":5,"column_end":16}},{"value":"deprecated(note =\n\"recommended to use dyn_ref instead which is now equivalent\")","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":75659,"byte_end":75741,"line_start":1696,"line_end":1696,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":75866,"byte_end":75873,"line_start":1703,"line_end":1703,"column_start":8,"column_end":15},"name":"default","qualname":"<Function as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1951},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":76107,"byte_end":76116,"line_start":1713,"line_end":1713,"column_start":14,"column_end":23},"name":"Generator","qualname":"::Generator","value":"Generator {  }","parent":null,"children":[{"krate":0,"index":1952}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":75938,"byte_end":75953,"line_start":1709,"line_end":1709,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":75938,"byte_end":75953,"line_start":1709,"line_end":1709,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1943},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":76486,"byte_end":76490,"line_start":1720,"line_end":1720,"column_start":12,"column_end":16},"name":"next","qualname":"<Generator>::next","value":"fn next(&Self, &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `next()` method returns an object with two properties done and value.\n You can also provide a parameter to the next method to send a value to the generator.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":75938,"byte_end":75953,"line_start":1709,"line_end":1709,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":75938,"byte_end":75953,"line_start":1709,"line_end":1709,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1946},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":76842,"byte_end":76849,"line_start":1726,"line_end":1726,"column_start":12,"column_end":19},"name":"return_","qualname":"<Generator>::return_","value":"fn return_(&Self, &JsValue) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `return()` method returns the given value and finishes the generator.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":75938,"byte_end":75953,"line_start":1709,"line_end":1709,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":75938,"byte_end":75953,"line_start":1709,"line_end":1709,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1949},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":77251,"byte_end":77256,"line_start":1733,"line_end":1733,"column_start":12,"column_end":17},"name":"throw","qualname":"<Generator>::throw","value":"fn throw(&Self, &Error) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `throw()` method resumes the execution of a generator by throwing an error into it\n and returns an object with two properties done and value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":75938,"byte_end":75953,"line_start":1709,"line_end":1709,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":75938,"byte_end":75953,"line_start":1709,"line_end":1709,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2073},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":77487,"byte_end":77490,"line_start":1741,"line_end":1741,"column_start":14,"column_end":17},"name":"Map","qualname":"::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":2074}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":77329,"byte_end":77344,"line_start":1737,"line_end":1737,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":77329,"byte_end":77344,"line_start":1737,"line_end":1737,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2050},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":77729,"byte_end":77734,"line_start":1747,"line_end":1747,"column_start":12,"column_end":17},"name":"clear","qualname":"<Map>::clear","value":"fn clear(&Self)","parent":null,"children":[],"decl_id":null,"docs":" The `clear()` method removes all elements from a Map object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":77329,"byte_end":77344,"line_start":1737,"line_end":1737,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":77329,"byte_end":77344,"line_start":1737,"line_end":1737,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2053},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":77996,"byte_end":78002,"line_start":1753,"line_end":1753,"column_start":12,"column_end":18},"name":"delete","qualname":"<Map>::delete","value":"fn delete(&Self, &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `delete()` method removes the specified element from a Map object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":77329,"byte_end":77344,"line_start":1737,"line_end":1737,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":77329,"byte_end":77344,"line_start":1737,"line_end":1737,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2056},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":78628,"byte_end":78636,"line_start":1767,"line_end":1767,"column_start":12,"column_end":20},"name":"for_each","qualname":"<Map>::for_each","value":"fn for_each(&Self, &mut dyn FnMut(JsValue, JsValue) -> ())","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once per each\n key/value pair in the Map object, in insertion order.\n Note that in Javascript land the `Key` and `Value` are reversed compared to normal expectations:\n # Examples\n ```\n let js_map = Map::new();\n js_map.for_each(&mut |value, key| {\n     // Do something here...\n })\n ```\n [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach)\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":77329,"byte_end":77344,"line_start":1737,"line_end":1737,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":77329,"byte_end":77344,"line_start":1737,"line_end":1737,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":78934,"byte_end":78937,"line_start":1773,"line_end":1773,"column_start":12,"column_end":15},"name":"get","qualname":"<Map>::get","value":"fn get(&Self, &JsValue) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `get()` method returns a specified element from a Map object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":77329,"byte_end":77344,"line_start":1737,"line_end":1737,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":77329,"byte_end":77344,"line_start":1737,"line_end":1737,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":79264,"byte_end":79267,"line_start":1780,"line_end":1780,"column_start":12,"column_end":15},"name":"has","qualname":"<Map>::has","value":"fn has(&Self, &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `has()` method returns a boolean indicating whether an element with\n the specified key exists or not.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":77329,"byte_end":77344,"line_start":1737,"line_end":1737,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":77329,"byte_end":77344,"line_start":1737,"line_end":1737,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2065},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":79610,"byte_end":79613,"line_start":1787,"line_end":1787,"column_start":12,"column_end":15},"name":"new","qualname":"<Map>::new","value":"fn new() -> Map","parent":null,"children":[],"decl_id":null,"docs":" The Map object holds key-value pairs. Any value (both objects and\n primitive values) maybe used as either a key or a value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":77329,"byte_end":77344,"line_start":1737,"line_end":1737,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":77329,"byte_end":77344,"line_start":1737,"line_end":1737,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":79900,"byte_end":79903,"line_start":1794,"line_end":1794,"column_start":12,"column_end":15},"name":"set","qualname":"<Map>::set","value":"fn set(&Self, &JsValue, &JsValue) -> Map","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method adds or updates an element with a specified key\n and value to a Map object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":77329,"byte_end":77344,"line_start":1737,"line_end":1737,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":77329,"byte_end":77344,"line_start":1737,"line_end":1737,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":80330,"byte_end":80334,"line_start":1802,"line_end":1802,"column_start":12,"column_end":16},"name":"size","qualname":"<Map>::size","value":"fn size(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The value of size is an integer representing how many entries\n the Map object has. A set accessor function for size is undefined;\n you can not change this property.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":77329,"byte_end":77344,"line_start":1737,"line_end":1737,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":77329,"byte_end":77344,"line_start":1737,"line_end":1737,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":80388,"byte_end":80395,"line_start":1806,"line_end":1806,"column_start":8,"column_end":15},"name":"default","qualname":"<Map as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2087},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":80820,"byte_end":80827,"line_start":1820,"line_end":1820,"column_start":12,"column_end":19},"name":"entries","qualname":"<Map>::entries","value":"fn entries(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `entries()` method returns a new Iterator object that contains\n the [key, value] pairs for each element in the Map object in\n insertion order.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":80453,"byte_end":80468,"line_start":1812,"line_end":1812,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":80453,"byte_end":80468,"line_start":1812,"line_end":1812,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2090},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":81164,"byte_end":81168,"line_start":1827,"line_end":1827,"column_start":12,"column_end":16},"name":"keys","qualname":"<Map>::keys","value":"fn keys(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `keys()` method returns a new Iterator object that contains the\n keys for each element in the Map object in insertion order.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":80453,"byte_end":80468,"line_start":1812,"line_end":1812,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":80453,"byte_end":80468,"line_start":1812,"line_end":1812,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2093},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":81511,"byte_end":81517,"line_start":1834,"line_end":1834,"column_start":12,"column_end":18},"name":"values","qualname":"<Map>::values","value":"fn values(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `values()` method returns a new Iterator object that contains the\n values for each element in the Map object in insertion order.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":80453,"byte_end":80468,"line_start":1812,"line_end":1812,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":80453,"byte_end":80468,"line_start":1812,"line_end":1812,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2174},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":81985,"byte_end":81993,"line_start":1846,"line_end":1846,"column_start":14,"column_end":22},"name":"Iterator","qualname":"::Iterator","value":"Iterator {  }","parent":null,"children":[{"krate":0,"index":2175}],"decl_id":null,"docs":" Any object that conforms to the JS iterator protocol. For example,\n something returned by `myArray[Symbol.iterator]()`.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":81558,"byte_end":81573,"line_start":1838,"line_end":1838,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":81558,"byte_end":81573,"line_start":1838,"line_end":1838,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2172},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":82333,"byte_end":82337,"line_start":1853,"line_end":1853,"column_start":12,"column_end":16},"name":"next","qualname":"<Iterator>::next","value":"fn next(&Self) -> Result<IteratorNext, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `next()` method always has to return an object with appropriate\n properties including done and value. If a non-object value gets returned\n (such as false or undefined), a TypeError (\"iterator.next() returned a\n non-object value\") will be thrown.\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":81558,"byte_end":81573,"line_start":1838,"line_end":1838,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":81558,"byte_end":81573,"line_start":1838,"line_end":1838,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2338},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":83276,"byte_end":83289,"line_start":1885,"line_end":1885,"column_start":14,"column_end":27},"name":"AsyncIterator","qualname":"::AsyncIterator","value":"AsyncIterator {  }","parent":null,"children":[{"krate":0,"index":2339}],"decl_id":null,"docs":" Any object that conforms to the JS async iterator protocol. For example,\n something returned by `myObject[Symbol.asyncIterator]()`.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":82826,"byte_end":82841,"line_start":1877,"line_end":1877,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":82826,"byte_end":82841,"line_start":1877,"line_end":1877,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2336},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":83657,"byte_end":83661,"line_start":1892,"line_end":1892,"column_start":12,"column_end":16},"name":"next","qualname":"<AsyncIterator>::next","value":"fn next(&Self) -> Result<Promise, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `next()` method always has to return a Promise which resolves to an object\n with appropriate properties including done and value. If a non-object value\n gets returned (such as false or undefined), a TypeError (\"iterator.next()\n returned a non-object value\") will be thrown.\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":82826,"byte_end":82841,"line_start":1877,"line_end":1877,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":82826,"byte_end":82841,"line_start":1877,"line_end":1877,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":166},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":83877,"byte_end":83881,"line_start":1898,"line_end":1898,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"decl_id":null,"docs":" An iterator over the JS `Symbol.iterator` iteration protocol.","sig":null,"attributes":[{"value":"/ An iterator over the JS `Symbol.iterator` iteration protocol.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":83716,"byte_end":83781,"line_start":1895,"line_end":1895,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":83782,"byte_end":83785,"line_start":1896,"line_end":1896,"column_start":1,"column_end":4}},{"value":"/ Use the `IntoIterator for &js_sys::Iterator` implementation to create this.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":83786,"byte_end":83865,"line_start":1897,"line_end":1897,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":170},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":84095,"byte_end":84103,"line_start":1906,"line_end":1906,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"decl_id":null,"docs":" An iterator over the JS `Symbol.iterator` iteration protocol.","sig":null,"attributes":[{"value":"/ An iterator over the JS `Symbol.iterator` iteration protocol.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":83935,"byte_end":84000,"line_start":1903,"line_end":1903,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":84001,"byte_end":84004,"line_start":1904,"line_end":1904,"column_start":1,"column_end":4}},{"value":"/ Use the `IntoIterator for js_sys::Iterator` implementation to create this.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":84005,"byte_end":84083,"line_start":1905,"line_end":1905,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":84308,"byte_end":84317,"line_start":1919,"line_end":1919,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a Iterator as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Iter","parent":{"krate":2,"index":8279},"children":[],"decl_id":{"krate":2,"index":8282},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":84525,"byte_end":84529,"line_start":1930,"line_end":1930,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":84720,"byte_end":84729,"line_start":1939,"line_end":1939,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<Iterator as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> IntoIter","parent":{"krate":2,"index":8279},"children":[],"decl_id":{"krate":2,"index":8282},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":84937,"byte_end":84941,"line_start":1950,"line_end":1950,"column_start":8,"column_end":12},"name":"next","qualname":"<IntoIter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":194},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":85668,"byte_end":85676,"line_start":1982,"line_end":1982,"column_start":8,"column_end":16},"name":"try_iter","qualname":"::try_iter","value":"fn try_iter(&JsValue) -> Result<Option<IntoIter>, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator over `val` using the JS iteration protocol and\n `Symbol.iterator`.\n","sig":null,"attributes":[{"value":"/ Create an iterator over `val` using the JS iteration protocol and","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":85568,"byte_end":85637,"line_start":1980,"line_end":1980,"column_start":1,"column_end":70}},{"value":"/ `Symbol.iterator`.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":85638,"byte_end":85660,"line_start":1981,"line_end":1981,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2435},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":86477,"byte_end":86489,"line_start":2007,"line_end":2007,"column_start":14,"column_end":26},"name":"IteratorNext","qualname":"::IteratorNext","value":"IteratorNext {  }","parent":null,"children":[{"krate":0,"index":2436}],"decl_id":null,"docs":" The result of calling `next()` on a JS iterator.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":86133,"byte_end":86148,"line_start":2000,"line_end":2000,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":86133,"byte_end":86148,"line_start":2000,"line_end":2000,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2430},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":86917,"byte_end":86921,"line_start":2017,"line_end":2017,"column_start":12,"column_end":16},"name":"done","qualname":"<IteratorNext>::done","value":"fn done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Has the value `true` if the iterator is past the end of the iterated\n sequence. In this case value optionally specifies the return value of\n the iterator.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":86133,"byte_end":86148,"line_start":2000,"line_end":2000,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":86133,"byte_end":86148,"line_start":2000,"line_end":2000,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2433},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87109,"byte_end":87114,"line_start":2022,"line_end":2022,"column_start":12,"column_end":17},"name":"value","qualname":"<IteratorNext>::value","value":"fn value(&Self) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" Any JavaScript value returned by the iterator. Can be omitted when done\n is true.\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":86133,"byte_end":86148,"line_start":2000,"line_end":2000,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":86133,"byte_end":86148,"line_start":2000,"line_end":2000,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":195},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87184,"byte_end":87188,"line_start":2026,"line_end":2026,"column_start":9,"column_end":13},"name":"Math","qualname":"::Math","value":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":2448},{"krate":0,"index":2450},{"krate":0,"index":2452},{"krate":0,"index":2454},{"krate":0,"index":2456},{"krate":0,"index":2458},{"krate":0,"index":2460},{"krate":0,"index":2462},{"krate":0,"index":2464},{"krate":0,"index":2466},{"krate":0,"index":2468},{"krate":0,"index":2470},{"krate":0,"index":2472},{"krate":0,"index":2474},{"krate":0,"index":2476},{"krate":0,"index":2478},{"krate":0,"index":2480},{"krate":0,"index":2482},{"krate":0,"index":2484},{"krate":0,"index":2486},{"krate":0,"index":2488},{"krate":0,"index":2490},{"krate":0,"index":2492},{"krate":0,"index":2494},{"krate":0,"index":2496},{"krate":0,"index":2498},{"krate":0,"index":2500},{"krate":0,"index":2502},{"krate":0,"index":2504},{"krate":0,"index":2506},{"krate":0,"index":2508},{"krate":0,"index":2510},{"krate":0,"index":2512},{"krate":0,"index":2514},{"krate":0,"index":2516}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87151,"byte_end":87175,"line_start":2025,"line_end":2025,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2448},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87570,"byte_end":87573,"line_start":2037,"line_end":2037,"column_start":16,"column_end":19},"name":"abs","qualname":"::Math::abs","value":"fn abs(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.abs()` function returns the absolute value of a number, that is\n Math.abs(x) = |x|","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2450},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87988,"byte_end":87992,"line_start":2045,"line_end":2045,"column_start":16,"column_end":20},"name":"acos","qualname":"::Math::acos","value":"fn acos(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.acos()` function returns the arccosine (in radians) of a\n number, that is ∀x∊[-1;1]\n Math.acos(x) = arccos(x) = the unique y∊[0;π] such that cos(y)=x","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2452},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":88406,"byte_end":88411,"line_start":2053,"line_end":2053,"column_start":16,"column_end":21},"name":"acosh","qualname":"::Math::acosh","value":"fn acosh(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.acosh()` function returns the hyperbolic arc-cosine of a\n number, that is ∀x ≥ 1\n Math.acosh(x) = arcosh(x) = the unique y ≥ 0 such that cosh(y) = x","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2454},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":88832,"byte_end":88836,"line_start":2061,"line_end":2061,"column_start":16,"column_end":20},"name":"asin","qualname":"::Math::asin","value":"fn asin(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.asin()` function returns the arcsine (in radians) of a\n number, that is ∀x ∊ [-1;1]\n Math.asin(x) = arcsin(x) = the unique y∊[-π2;π2] such that sin(y) = x","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2456},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":89218,"byte_end":89223,"line_start":2068,"line_end":2068,"column_start":16,"column_end":21},"name":"asinh","qualname":"::Math::asinh","value":"fn asinh(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.asinh()` function returns the hyperbolic arcsine of a\n number, that is Math.asinh(x) = arsinh(x) = the unique y such that sinh(y) = x","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2458},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":89496,"byte_end":89500,"line_start":2074,"line_end":2074,"column_start":16,"column_end":20},"name":"atan","qualname":"::Math::atan","value":"fn atan(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.atan()` function returns the arctangent (in radians) of a\n number, that is Math.atan(x) = arctan(x) = the unique y ∊ [-π2;π2]such that\n tan(y) = x\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2460},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":89824,"byte_end":89829,"line_start":2081,"line_end":2081,"column_start":16,"column_end":21},"name":"atan2","qualname":"::Math::atan2","value":"fn atan2(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.atan2()` function returns the arctangent of the quotient of\n its arguments.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2462},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":90252,"byte_end":90257,"line_start":2089,"line_end":2089,"column_start":16,"column_end":21},"name":"atanh","qualname":"::Math::atanh","value":"fn atanh(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.atanh()` function returns the hyperbolic arctangent of a number,\n that is ∀x ∊ (-1,1), Math.atanh(x) = arctanh(x) = the unique y such that\n tanh(y) = x","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2464},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":90618,"byte_end":90622,"line_start":2096,"line_end":2096,"column_start":16,"column_end":20},"name":"cbrt","qualname":"::Math::cbrt","value":"fn cbrt(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.cbrt() `function returns the cube root of a number, that is\n Math.cbrt(x) = ∛x = the unique y such that y^3 = x","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2466},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":90957,"byte_end":90961,"line_start":2103,"line_end":2103,"column_start":16,"column_end":20},"name":"ceil","qualname":"::Math::ceil","value":"fn ceil(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.ceil()` function returns the smallest integer greater than\n or equal to a given number.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2468},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":91317,"byte_end":91322,"line_start":2110,"line_end":2110,"column_start":16,"column_end":21},"name":"clz32","qualname":"::Math::clz32","value":"fn clz32(i32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `Math.clz32()` function returns the number of leading zero bits in\n the 32-bit binary representation of a number.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2470},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":91722,"byte_end":91725,"line_start":2117,"line_end":2117,"column_start":16,"column_end":19},"name":"cos","qualname":"::Math::cos","value":"fn cos(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.cos()` static function returns the cosine of the specified angle,\n which must be specified in radians. This value is length(adjacent)/length(hypotenuse).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2472},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":92077,"byte_end":92081,"line_start":2124,"line_end":2124,"column_start":16,"column_end":20},"name":"cosh","qualname":"::Math::cosh","value":"fn cosh(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.cosh()` function returns the hyperbolic cosine of a number,\n that can be expressed using the constant e.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2474},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":92477,"byte_end":92480,"line_start":2131,"line_end":2131,"column_start":16,"column_end":19},"name":"exp","qualname":"::Math::exp","value":"fn exp(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.exp()` function returns e^x, where x is the argument, and e is Euler's number\n (also known as Napier's constant), the base of the natural logarithms.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2476},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":92831,"byte_end":92836,"line_start":2138,"line_end":2138,"column_start":16,"column_end":21},"name":"expm1","qualname":"::Math::expm1","value":"fn expm1(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.expm1()` function returns e^x - 1, where x is the argument, and e the base of the\n natural logarithms.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2478},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":93169,"byte_end":93174,"line_start":2145,"line_end":2145,"column_start":16,"column_end":21},"name":"floor","qualname":"::Math::floor","value":"fn floor(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.floor()` function returns the largest integer less than or\n equal to a given number.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2480},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":93521,"byte_end":93527,"line_start":2152,"line_end":2152,"column_start":16,"column_end":22},"name":"fround","qualname":"::Math::fround","value":"fn fround(f64) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The `Math.fround()` function returns the nearest 32-bit single precision float representation\n of a Number.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2482},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":93846,"byte_end":93851,"line_start":2158,"line_end":2158,"column_start":16,"column_end":21},"name":"hypot","qualname":"::Math::hypot","value":"fn hypot(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.hypot()` function returns the square root of the sum of squares of its arguments.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2484},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":94202,"byte_end":94206,"line_start":2165,"line_end":2165,"column_start":16,"column_end":20},"name":"imul","qualname":"::Math::imul","value":"fn imul(i32, i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `Math.imul()` function returns the result of the C-like 32-bit multiplication of the\n two parameters.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2486},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":94605,"byte_end":94608,"line_start":2172,"line_end":2172,"column_start":16,"column_end":19},"name":"log","qualname":"::Math::log","value":"fn log(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.log()` function returns the natural logarithm (base e) of a number.\n The JavaScript `Math.log()` function is equivalent to ln(x) in mathematics.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2488},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":94906,"byte_end":94911,"line_start":2178,"line_end":2178,"column_start":16,"column_end":21},"name":"log10","qualname":"::Math::log10","value":"fn log10(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.log10()` function returns the base 10 logarithm of a number.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2490},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":95210,"byte_end":95215,"line_start":2183,"line_end":2183,"column_start":16,"column_end":21},"name":"log1p","qualname":"::Math::log1p","value":"fn log1p(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.log1p()` function returns the natural logarithm (base e) of 1 + a number.\n [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/log1p)\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2492},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":95510,"byte_end":95514,"line_start":2189,"line_end":2189,"column_start":16,"column_end":20},"name":"log2","qualname":"::Math::log2","value":"fn log2(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.log2()` function returns the base 2 logarithm of a number.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2494},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":95801,"byte_end":95804,"line_start":2195,"line_end":2195,"column_start":16,"column_end":19},"name":"max","qualname":"::Math::max","value":"fn max(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.max()` function returns the largest of two numbers.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2496},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":96119,"byte_end":96122,"line_start":2201,"line_end":2201,"column_start":16,"column_end":19},"name":"min","qualname":"::Math::min","value":"fn min(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The static function `Math.min()` returns the lowest-valued number passed into it.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2498},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":96445,"byte_end":96448,"line_start":2207,"line_end":2207,"column_start":16,"column_end":19},"name":"pow","qualname":"::Math::pow","value":"fn pow(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.pow()` function returns the base to the exponent power, that is, base^exponent.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2500},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":97102,"byte_end":97108,"line_start":2217,"line_end":2217,"column_start":16,"column_end":22},"name":"random","qualname":"::Math::random","value":"fn random() -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.random()` function returns a floating-point, pseudo-random number\n in the range 0–1 (inclusive of 0, but not 1) with approximately uniform distribution\n over that range — which you can then scale to your desired range.\n The implementation selects the initial seed to the random number generation algorithm;\n it cannot be chosen or reset by the user.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2502},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":97419,"byte_end":97424,"line_start":2223,"line_end":2223,"column_start":16,"column_end":21},"name":"round","qualname":"::Math::round","value":"fn round(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.round()` function returns the value of a number rounded to the nearest integer.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2504},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":97780,"byte_end":97784,"line_start":2230,"line_end":2230,"column_start":16,"column_end":20},"name":"sign","qualname":"::Math::sign","value":"fn sign(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.sign()` function returns the sign of a number, indicating whether the number is\n positive, negative or zero.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2506},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":98065,"byte_end":98068,"line_start":2236,"line_end":2236,"column_start":16,"column_end":19},"name":"sin","qualname":"::Math::sin","value":"fn sin(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.sin()` function returns the sine of a number.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2508},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":98448,"byte_end":98452,"line_start":2243,"line_end":2243,"column_start":16,"column_end":20},"name":"sinh","qualname":"::Math::sinh","value":"fn sinh(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.sinh()` function returns the hyperbolic sine of a number, that can be expressed\n using the constant e: Math.sinh(x) = (e^x - e^-x)/2","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2510},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":98833,"byte_end":98837,"line_start":2250,"line_end":2250,"column_start":16,"column_end":20},"name":"sqrt","qualname":"::Math::sqrt","value":"fn sqrt(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.sqrt()` function returns the square root of a number, that is\n ∀x ≥ 0, Math.sqrt(x) = √x = the unique y ≥ 0 such that y^2 = x","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2512},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99121,"byte_end":99124,"line_start":2256,"line_end":2256,"column_start":16,"column_end":19},"name":"tan","qualname":"::Math::tan","value":"fn tan(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.tan()` function returns the tangent of a number.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2514},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99518,"byte_end":99522,"line_start":2263,"line_end":2263,"column_start":16,"column_end":20},"name":"tanh","qualname":"::Math::tanh","value":"fn tanh(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.tanh()` function returns the hyperbolic tangent of a number, that is\n tanh x = sinh x / cosh x = (e^x - e^-x)/(e^x + e^-x) = (e^2x - 1)/(e^2x + 1)","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2516},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99861,"byte_end":99866,"line_start":2270,"line_end":2270,"column_start":16,"column_end":21},"name":"trunc","qualname":"::Math::trunc","value":"fn trunc(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.trunc()` function returns the integer part of a number by removing any fractional\n digits.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":87226,"byte_end":87241,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2647},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":100082,"byte_end":100088,"line_start":2279,"line_end":2279,"column_start":14,"column_end":20},"name":"Number","qualname":"::Number","value":"Number {  }","parent":null,"children":[{"krate":0,"index":2648}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2606},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":100398,"byte_end":100407,"line_start":2285,"line_end":2285,"column_start":12,"column_end":21},"name":"is_finite","qualname":"<Number>::is_finite","value":"fn is_finite(&JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Number.isFinite()` method determines whether the passed value is a finite number.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2609},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":100740,"byte_end":100750,"line_start":2291,"line_end":2291,"column_start":12,"column_end":22},"name":"is_integer","qualname":"<Number>::is_integer","value":"fn is_integer(&JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Number.isInteger()` method determines whether the passed value is an integer.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2612},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":101158,"byte_end":101164,"line_start":2298,"line_end":2298,"column_start":12,"column_end":18},"name":"is_nan","qualname":"<Number>::is_nan","value":"fn is_nan(&JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Number.isNaN()` method determines whether the passed value is `NaN` and its type is Number.\n It is a more robust version of the original, global isNaN().","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2615},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":101540,"byte_end":101555,"line_start":2305,"line_end":2305,"column_start":12,"column_end":27},"name":"is_safe_integer","qualname":"<Number>::is_safe_integer","value":"fn is_safe_integer(&JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Number.isSafeInteger()` method determines whether the provided value is a number\n that is a safe integer.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2618},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":102029,"byte_end":102032,"line_start":2315,"line_end":2315,"column_start":12,"column_end":15},"name":"new","qualname":"<Number>::new","value":"fn new(&JsValue) -> Number","parent":null,"children":[],"decl_id":null,"docs":" The `Number` JavaScript object is a wrapper object allowing\n you to work with numerical values. A `Number` object is\n created using the `Number()` constructor.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}},{"value":"deprecated(note = \"recommended to use `Number::from` instead\")","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":101927,"byte_end":101992,"line_start":2313,"line_end":2313,"column_start":5,"column_end":70}},{"value":"allow(deprecated)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":101997,"byte_end":102017,"line_start":2314,"line_end":2314,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2624},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":102479,"byte_end":102488,"line_start":2325,"line_end":2325,"column_start":12,"column_end":21},"name":"parse_int","qualname":"<Number>::parse_int","value":"fn parse_int(&str, u8) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Number.parseInt()` method parses a string argument and returns an\n integer of the specified radix or base.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2627},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":102848,"byte_end":102859,"line_start":2332,"line_end":2332,"column_start":12,"column_end":23},"name":"parse_float","qualname":"<Number>::parse_float","value":"fn parse_float(&str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Number.parseFloat()` method parses a string argument and returns a\n floating point number.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2630},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":103206,"byte_end":103222,"line_start":2339,"line_end":2339,"column_start":12,"column_end":28},"name":"to_locale_string","qualname":"<Number>::to_locale_string","value":"fn to_locale_string(&Self, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleString()` method returns a string with a language sensitive\n representation of this number.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2633},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":103591,"byte_end":103603,"line_start":2346,"line_end":2346,"column_start":12,"column_end":24},"name":"to_precision","qualname":"<Number>::to_precision","value":"fn to_precision(&Self, u8) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `toPrecision()` method returns a string representing the Number\n object to the specified precision.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2636},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":103978,"byte_end":103986,"line_start":2353,"line_end":2353,"column_start":12,"column_end":20},"name":"to_fixed","qualname":"<Number>::to_fixed","value":"fn to_fixed(&Self, u8) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `toFixed()` method returns a string representing the Number\n object using fixed-point notation.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2639},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":104373,"byte_end":104387,"line_start":2360,"line_end":2360,"column_start":12,"column_end":26},"name":"to_exponential","qualname":"<Number>::to_exponential","value":"fn to_exponential(&Self, u8) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `toExponential()` method returns a string representing the Number\n object in exponential notation.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2642},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":104754,"byte_end":104763,"line_start":2367,"line_end":2367,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Number>::to_string","value":"fn to_string(&Self, u8) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the\n specified Number object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2645},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":105107,"byte_end":105115,"line_start":2374,"line_end":2374,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Number>::value_of","value":"fn value_of(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `valueOf()` method returns the wrapped primitive value of\n a Number object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":99903,"byte_end":99918,"line_start":2275,"line_end":2275,"column_start":1,"column_end":16}}]},{"kind":"Const","id":{"krate":0,"index":198},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":105368,"byte_end":105375,"line_start":2381,"line_end":2381,"column_start":15,"column_end":22},"name":"EPSILON","qualname":"::Number::EPSILON","value":"f64","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" The smallest interval between two representable numbers.","sig":null,"attributes":[{"value":"/ The smallest interval between two representable numbers.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":105160,"byte_end":105220,"line_start":2378,"line_end":2378,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":105225,"byte_end":105228,"line_start":2379,"line_end":2379,"column_start":5,"column_end":8}},{"value":"/ [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":105233,"byte_end":105353,"line_start":2380,"line_end":2380,"column_start":5,"column_end":125}}]},{"kind":"Const","id":{"krate":0,"index":199},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":105612,"byte_end":105628,"line_start":2385,"line_end":2385,"column_start":15,"column_end":31},"name":"MAX_SAFE_INTEGER","qualname":"::Number::MAX_SAFE_INTEGER","value":"f64","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" The maximum safe integer in JavaScript (2^53 - 1).","sig":null,"attributes":[{"value":"/ The maximum safe integer in JavaScript (2^53 - 1).","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":105401,"byte_end":105455,"line_start":2382,"line_end":2382,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":105460,"byte_end":105463,"line_start":2383,"line_end":2383,"column_start":5,"column_end":8}},{"value":"/ [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":105468,"byte_end":105597,"line_start":2384,"line_end":2384,"column_start":5,"column_end":134}}]},{"kind":"Const","id":{"krate":0,"index":200},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":105856,"byte_end":105865,"line_start":2389,"line_end":2389,"column_start":15,"column_end":24},"name":"MAX_VALUE","qualname":"::Number::MAX_VALUE","value":"f64","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" The largest positive representable number.","sig":null,"attributes":[{"value":"/ The largest positive representable number.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":105660,"byte_end":105706,"line_start":2386,"line_end":2386,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":105711,"byte_end":105714,"line_start":2387,"line_end":2387,"column_start":5,"column_end":8}},{"value":"/ [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_VALUE)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":105719,"byte_end":105841,"line_start":2388,"line_end":2388,"column_start":5,"column_end":127}}]},{"kind":"Const","id":{"krate":0,"index":201},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":106101,"byte_end":106117,"line_start":2393,"line_end":2393,"column_start":15,"column_end":31},"name":"MIN_SAFE_INTEGER","qualname":"::Number::MIN_SAFE_INTEGER","value":"f64","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" The minimum safe integer in JavaScript (-(2^53 - 1)).","sig":null,"attributes":[{"value":"/ The minimum safe integer in JavaScript (-(2^53 - 1)).","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":105887,"byte_end":105944,"line_start":2390,"line_end":2390,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":105949,"byte_end":105952,"line_start":2391,"line_end":2391,"column_start":5,"column_end":8}},{"value":"/ [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":105957,"byte_end":106086,"line_start":2392,"line_end":2392,"column_start":5,"column_end":134}}]},{"kind":"Const","id":{"krate":0,"index":202},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":106524,"byte_end":106533,"line_start":2399,"line_end":2399,"column_start":15,"column_end":24},"name":"MIN_VALUE","qualname":"::Number::MIN_VALUE","value":"f64","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" The smallest positive representable number—that is, the positive number closest to zero\n (without actually being zero).","sig":null,"attributes":[{"value":"/ The smallest positive representable number—that is, the positive number closest to zero","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":106150,"byte_end":106243,"line_start":2394,"line_end":2394,"column_start":5,"column_end":96}},{"value":"/ (without actually being zero).","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":106248,"byte_end":106282,"line_start":2395,"line_end":2395,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":106287,"byte_end":106290,"line_start":2396,"line_end":2396,"column_start":5,"column_end":8}},{"value":"/ [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_VALUE)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":106295,"byte_end":106417,"line_start":2397,"line_end":2397,"column_start":5,"column_end":127}}]},{"kind":"Const","id":{"krate":0,"index":203},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":106730,"byte_end":106733,"line_start":2403,"line_end":2403,"column_start":15,"column_end":18},"name":"NAN","qualname":"::Number::NAN","value":"f64","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Special \"Not a Number\" value.","sig":null,"attributes":[{"value":"/ Special \"Not a Number\" value.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":106553,"byte_end":106586,"line_start":2400,"line_end":2400,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":106591,"byte_end":106594,"line_start":2401,"line_end":2401,"column_start":5,"column_end":8}},{"value":"/ [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/NaN)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":106599,"byte_end":106715,"line_start":2402,"line_end":2402,"column_start":5,"column_end":121}}]},{"kind":"Const","id":{"krate":0,"index":204},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":106984,"byte_end":107001,"line_start":2407,"line_end":2407,"column_start":15,"column_end":32},"name":"NEGATIVE_INFINITY","qualname":"::Number::NEGATIVE_INFINITY","value":"f64","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Special value representing negative infinity. Returned on overflow.","sig":null,"attributes":[{"value":"/ Special value representing negative infinity. Returned on overflow.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":106755,"byte_end":106826,"line_start":2404,"line_end":2404,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":106831,"byte_end":106834,"line_start":2405,"line_end":2405,"column_start":5,"column_end":8}},{"value":"/ [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/NEGATIVE_INFINITY)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":106839,"byte_end":106969,"line_start":2406,"line_end":2406,"column_start":5,"column_end":135}}]},{"kind":"Const","id":{"krate":0,"index":205},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":107252,"byte_end":107269,"line_start":2411,"line_end":2411,"column_start":15,"column_end":32},"name":"POSITIVE_INFINITY","qualname":"::Number::POSITIVE_INFINITY","value":"f64","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Special value representing infinity. Returned on overflow.","sig":null,"attributes":[{"value":"/ Special value representing infinity. Returned on overflow.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":107032,"byte_end":107094,"line_start":2408,"line_end":2408,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":107099,"byte_end":107102,"line_start":2409,"line_end":2409,"column_start":5,"column_end":8}},{"value":"/ [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/POSITIVE_INFINITY)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":107107,"byte_end":107237,"line_start":2410,"line_end":2410,"column_start":5,"column_end":135}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":107512,"byte_end":107515,"line_start":2417,"line_end":2417,"column_start":12,"column_end":15},"name":"pow","qualname":"<Number>::pow","value":"fn pow(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies the binary `**` JS operator on the two `Number`s.","sig":null,"attributes":[{"value":"/ Applies the binary `**` JS operator on the two `Number`s.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":107297,"byte_end":107358,"line_start":2413,"line_end":2413,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":107363,"byte_end":107366,"line_start":2414,"line_end":2414,"column_start":5,"column_end":8}},{"value":"/ [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Exponentiation)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":107371,"byte_end":107486,"line_start":2415,"line_end":2415,"column_start":5,"column_end":120}},{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":107491,"byte_end":107500,"line_start":2416,"line_end":2416,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":107877,"byte_end":107889,"line_start":2427,"line_end":2427,"column_start":12,"column_end":24},"name":"unsigned_shr","qualname":"<Number>::unsigned_shr","value":"fn unsigned_shr(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies the binary `>>>` JS operator on the two `Number`s.","sig":null,"attributes":[{"value":"/ Applies the binary `>>>` JS operator on the two `Number`s.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":107655,"byte_end":107717,"line_start":2423,"line_end":2423,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":107722,"byte_end":107725,"line_start":2424,"line_end":2424,"column_start":5,"column_end":8}},{"value":"/ [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":107730,"byte_end":107851,"line_start":2425,"line_end":2425,"column_start":5,"column_end":126}},{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":107856,"byte_end":107865,"line_start":2426,"line_end":2426,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":108908,"byte_end":108912,"line_start":2467,"line_end":2467,"column_start":8,"column_end":12},"name":"from","qualname":"<f64 as std::convert::From>::from","value":"fn from(&Number) -> f64","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":108891,"byte_end":108900,"line_start":2466,"line_end":2466,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":109013,"byte_end":109017,"line_start":2474,"line_end":2474,"column_start":8,"column_end":12},"name":"from","qualname":"<f64 as std::convert::From>::from","value":"fn from(Number) -> f64","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":108996,"byte_end":109005,"line_start":2473,"line_end":2473,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":109141,"byte_end":109144,"line_start":2481,"line_end":2481,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Number as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":109124,"byte_end":109133,"line_start":2480,"line_end":2480,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":109299,"byte_end":109302,"line_start":2488,"line_end":2488,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Number as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10115},"children":[],"decl_id":{"krate":2,"index":10116},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":109282,"byte_end":109291,"line_start":2487,"line_end":2487,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":109440,"byte_end":109447,"line_start":2494,"line_end":2494,"column_start":8,"column_end":15},"name":"default","qualname":"<Number as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":109561,"byte_end":109563,"line_start":2501,"line_end":2501,"column_start":8,"column_end":10},"name":"eq","qualname":"<Number as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &BigInt) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":109544,"byte_end":109553,"line_start":2500,"line_end":2500,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":109740,"byte_end":109743,"line_start":2510,"line_end":2510,"column_start":8,"column_end":11},"name":"not","qualname":"<&'_ Number as std::ops::Not>::not","value":"fn not(Self) -> Self::Output","parent":{"krate":2,"index":3299},"children":[],"decl_id":{"krate":2,"index":3301},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":109723,"byte_end":109732,"line_start":2509,"line_end":2509,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2689},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":109864,"byte_end":109867,"line_start":2515,"line_end":2515,"column_start":31,"column_end":34},"name":"not","qualname":"<Number as std::ops::Not>::not","value":"fn not(Self) -> Self::Output","parent":{"krate":2,"index":3299},"children":[],"decl_id":{"krate":2,"index":3301},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2220,"byte_end":2229,"line_start":59,"line_end":59,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2692},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":109908,"byte_end":109911,"line_start":2516,"line_end":2516,"column_start":28,"column_end":31},"name":"neg","qualname":"<&'_ Number as std::ops::Neg>::neg","value":"fn neg(Self) -> Self::Output","parent":{"krate":2,"index":3274},"children":[],"decl_id":{"krate":2,"index":3276},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3362,"byte_end":3371,"line_start":103,"line_end":103,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2695},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":109908,"byte_end":109911,"line_start":2516,"line_end":2516,"column_start":28,"column_end":31},"name":"neg","qualname":"<Number as std::ops::Neg>::neg","value":"fn neg(Self) -> Self::Output","parent":{"krate":2,"index":3274},"children":[],"decl_id":{"krate":2,"index":3276},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2220,"byte_end":2229,"line_start":59,"line_end":59,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2698},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":109956,"byte_end":109962,"line_start":2517,"line_end":2517,"column_start":32,"column_end":38},"name":"bitand","qualname":"<&'_ Number as std::ops::BitAnd>::bitand","value":"fn bitand(Self, &Number) -> Self::Output","parent":{"krate":2,"index":3306},"children":[],"decl_id":{"krate":2,"index":3309},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3740,"byte_end":3749,"line_start":118,"line_end":118,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2702},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":109956,"byte_end":109962,"line_start":2517,"line_end":2517,"column_start":32,"column_end":38},"name":"bitand","qualname":"<&'a Number as std::ops::BitAnd>::bitand","value":"fn bitand(Self, Number) -> Self::Output","parent":{"krate":2,"index":3306},"children":[],"decl_id":{"krate":2,"index":3309},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2557,"byte_end":2566,"line_start":72,"line_end":72,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2705},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":109956,"byte_end":109962,"line_start":2517,"line_end":2517,"column_start":32,"column_end":38},"name":"bitand","qualname":"<Number as std::ops::BitAnd>::bitand","value":"fn bitand(Self, &Number) -> Self::Output","parent":{"krate":2,"index":3306},"children":[],"decl_id":{"krate":2,"index":3309},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2809,"byte_end":2818,"line_start":81,"line_end":81,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2708},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":109956,"byte_end":109962,"line_start":2517,"line_end":2517,"column_start":32,"column_end":38},"name":"bitand","qualname":"<Number as std::ops::BitAnd>::bitand","value":"fn bitand(Self, Number) -> Self::Output","parent":{"krate":2,"index":3306},"children":[],"decl_id":{"krate":2,"index":3309},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3061,"byte_end":3070,"line_start":90,"line_end":90,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2711},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110006,"byte_end":110011,"line_start":2518,"line_end":2518,"column_start":31,"column_end":36},"name":"bitor","qualname":"<&'_ Number as std::ops::BitOr>::bitor","value":"fn bitor(Self, &Number) -> Self::Output","parent":{"krate":2,"index":3311},"children":[],"decl_id":{"krate":2,"index":3314},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3740,"byte_end":3749,"line_start":118,"line_end":118,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2715},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110006,"byte_end":110011,"line_start":2518,"line_end":2518,"column_start":31,"column_end":36},"name":"bitor","qualname":"<&'a Number as std::ops::BitOr>::bitor","value":"fn bitor(Self, Number) -> Self::Output","parent":{"krate":2,"index":3311},"children":[],"decl_id":{"krate":2,"index":3314},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2557,"byte_end":2566,"line_start":72,"line_end":72,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2718},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110006,"byte_end":110011,"line_start":2518,"line_end":2518,"column_start":31,"column_end":36},"name":"bitor","qualname":"<Number as std::ops::BitOr>::bitor","value":"fn bitor(Self, &Number) -> Self::Output","parent":{"krate":2,"index":3311},"children":[],"decl_id":{"krate":2,"index":3314},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2809,"byte_end":2818,"line_start":81,"line_end":81,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2721},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110006,"byte_end":110011,"line_start":2518,"line_end":2518,"column_start":31,"column_end":36},"name":"bitor","qualname":"<Number as std::ops::BitOr>::bitor","value":"fn bitor(Self, Number) -> Self::Output","parent":{"krate":2,"index":3311},"children":[],"decl_id":{"krate":2,"index":3314},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3061,"byte_end":3070,"line_start":90,"line_end":90,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2724},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110056,"byte_end":110062,"line_start":2519,"line_end":2519,"column_start":32,"column_end":38},"name":"bitxor","qualname":"<&'_ Number as std::ops::BitXor>::bitxor","value":"fn bitxor(Self, &Number) -> Self::Output","parent":{"krate":2,"index":3316},"children":[],"decl_id":{"krate":2,"index":3319},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3740,"byte_end":3749,"line_start":118,"line_end":118,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2728},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110056,"byte_end":110062,"line_start":2519,"line_end":2519,"column_start":32,"column_end":38},"name":"bitxor","qualname":"<&'a Number as std::ops::BitXor>::bitxor","value":"fn bitxor(Self, Number) -> Self::Output","parent":{"krate":2,"index":3316},"children":[],"decl_id":{"krate":2,"index":3319},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2557,"byte_end":2566,"line_start":72,"line_end":72,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2731},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110056,"byte_end":110062,"line_start":2519,"line_end":2519,"column_start":32,"column_end":38},"name":"bitxor","qualname":"<Number as std::ops::BitXor>::bitxor","value":"fn bitxor(Self, &Number) -> Self::Output","parent":{"krate":2,"index":3316},"children":[],"decl_id":{"krate":2,"index":3319},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2809,"byte_end":2818,"line_start":81,"line_end":81,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2734},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110056,"byte_end":110062,"line_start":2519,"line_end":2519,"column_start":32,"column_end":38},"name":"bitxor","qualname":"<Number as std::ops::BitXor>::bitxor","value":"fn bitxor(Self, Number) -> Self::Output","parent":{"krate":2,"index":3316},"children":[],"decl_id":{"krate":2,"index":3319},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3061,"byte_end":3070,"line_start":90,"line_end":90,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2737},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110104,"byte_end":110107,"line_start":2520,"line_end":2520,"column_start":29,"column_end":32},"name":"shl","qualname":"<&'_ Number as std::ops::Shl>::shl","value":"fn shl(Self, &Number) -> Self::Output","parent":{"krate":2,"index":3321},"children":[],"decl_id":{"krate":2,"index":3324},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3740,"byte_end":3749,"line_start":118,"line_end":118,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2741},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110104,"byte_end":110107,"line_start":2520,"line_end":2520,"column_start":29,"column_end":32},"name":"shl","qualname":"<&'a Number as std::ops::Shl>::shl","value":"fn shl(Self, Number) -> Self::Output","parent":{"krate":2,"index":3321},"children":[],"decl_id":{"krate":2,"index":3324},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2557,"byte_end":2566,"line_start":72,"line_end":72,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2744},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110104,"byte_end":110107,"line_start":2520,"line_end":2520,"column_start":29,"column_end":32},"name":"shl","qualname":"<Number as std::ops::Shl>::shl","value":"fn shl(Self, &Number) -> Self::Output","parent":{"krate":2,"index":3321},"children":[],"decl_id":{"krate":2,"index":3324},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2809,"byte_end":2818,"line_start":81,"line_end":81,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2747},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110104,"byte_end":110107,"line_start":2520,"line_end":2520,"column_start":29,"column_end":32},"name":"shl","qualname":"<Number as std::ops::Shl>::shl","value":"fn shl(Self, Number) -> Self::Output","parent":{"krate":2,"index":3321},"children":[],"decl_id":{"krate":2,"index":3324},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3061,"byte_end":3070,"line_start":90,"line_end":90,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2750},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110149,"byte_end":110152,"line_start":2521,"line_end":2521,"column_start":29,"column_end":32},"name":"shr","qualname":"<&'_ Number as std::ops::Shr>::shr","value":"fn shr(Self, &Number) -> Self::Output","parent":{"krate":2,"index":3327},"children":[],"decl_id":{"krate":2,"index":3330},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3740,"byte_end":3749,"line_start":118,"line_end":118,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2754},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110149,"byte_end":110152,"line_start":2521,"line_end":2521,"column_start":29,"column_end":32},"name":"shr","qualname":"<&'a Number as std::ops::Shr>::shr","value":"fn shr(Self, Number) -> Self::Output","parent":{"krate":2,"index":3327},"children":[],"decl_id":{"krate":2,"index":3330},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2557,"byte_end":2566,"line_start":72,"line_end":72,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2757},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110149,"byte_end":110152,"line_start":2521,"line_end":2521,"column_start":29,"column_end":32},"name":"shr","qualname":"<Number as std::ops::Shr>::shr","value":"fn shr(Self, &Number) -> Self::Output","parent":{"krate":2,"index":3327},"children":[],"decl_id":{"krate":2,"index":3330},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2809,"byte_end":2818,"line_start":81,"line_end":81,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2760},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110149,"byte_end":110152,"line_start":2521,"line_end":2521,"column_start":29,"column_end":32},"name":"shr","qualname":"<Number as std::ops::Shr>::shr","value":"fn shr(Self, Number) -> Self::Output","parent":{"krate":2,"index":3327},"children":[],"decl_id":{"krate":2,"index":3330},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3061,"byte_end":3070,"line_start":90,"line_end":90,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2763},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110194,"byte_end":110197,"line_start":2522,"line_end":2522,"column_start":29,"column_end":32},"name":"add","qualname":"<&'_ Number as std::ops::Add>::add","value":"fn add(Self, &Number) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3740,"byte_end":3749,"line_start":118,"line_end":118,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2767},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110194,"byte_end":110197,"line_start":2522,"line_end":2522,"column_start":29,"column_end":32},"name":"add","qualname":"<&'a Number as std::ops::Add>::add","value":"fn add(Self, Number) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2557,"byte_end":2566,"line_start":72,"line_end":72,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2770},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110194,"byte_end":110197,"line_start":2522,"line_end":2522,"column_start":29,"column_end":32},"name":"add","qualname":"<Number as std::ops::Add>::add","value":"fn add(Self, &Number) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2809,"byte_end":2818,"line_start":81,"line_end":81,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2773},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110194,"byte_end":110197,"line_start":2522,"line_end":2522,"column_start":29,"column_end":32},"name":"add","qualname":"<Number as std::ops::Add>::add","value":"fn add(Self, Number) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3061,"byte_end":3070,"line_start":90,"line_end":90,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2776},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110239,"byte_end":110242,"line_start":2523,"line_end":2523,"column_start":29,"column_end":32},"name":"sub","qualname":"<&'_ Number as std::ops::Sub>::sub","value":"fn sub(Self, &Number) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3740,"byte_end":3749,"line_start":118,"line_end":118,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2780},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110239,"byte_end":110242,"line_start":2523,"line_end":2523,"column_start":29,"column_end":32},"name":"sub","qualname":"<&'a Number as std::ops::Sub>::sub","value":"fn sub(Self, Number) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2557,"byte_end":2566,"line_start":72,"line_end":72,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2783},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110239,"byte_end":110242,"line_start":2523,"line_end":2523,"column_start":29,"column_end":32},"name":"sub","qualname":"<Number as std::ops::Sub>::sub","value":"fn sub(Self, &Number) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2809,"byte_end":2818,"line_start":81,"line_end":81,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2786},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110239,"byte_end":110242,"line_start":2523,"line_end":2523,"column_start":29,"column_end":32},"name":"sub","qualname":"<Number as std::ops::Sub>::sub","value":"fn sub(Self, Number) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3061,"byte_end":3070,"line_start":90,"line_end":90,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2789},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110284,"byte_end":110287,"line_start":2524,"line_end":2524,"column_start":29,"column_end":32},"name":"div","qualname":"<&'_ Number as std::ops::Div>::div","value":"fn div(Self, &Number) -> Self::Output","parent":{"krate":2,"index":3262},"children":[],"decl_id":{"krate":2,"index":3265},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3740,"byte_end":3749,"line_start":118,"line_end":118,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2793},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110284,"byte_end":110287,"line_start":2524,"line_end":2524,"column_start":29,"column_end":32},"name":"div","qualname":"<&'a Number as std::ops::Div>::div","value":"fn div(Self, Number) -> Self::Output","parent":{"krate":2,"index":3262},"children":[],"decl_id":{"krate":2,"index":3265},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2557,"byte_end":2566,"line_start":72,"line_end":72,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2796},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110284,"byte_end":110287,"line_start":2524,"line_end":2524,"column_start":29,"column_end":32},"name":"div","qualname":"<Number as std::ops::Div>::div","value":"fn div(Self, &Number) -> Self::Output","parent":{"krate":2,"index":3262},"children":[],"decl_id":{"krate":2,"index":3265},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2809,"byte_end":2818,"line_start":81,"line_end":81,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2799},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110284,"byte_end":110287,"line_start":2524,"line_end":2524,"column_start":29,"column_end":32},"name":"div","qualname":"<Number as std::ops::Div>::div","value":"fn div(Self, Number) -> Self::Output","parent":{"krate":2,"index":3262},"children":[],"decl_id":{"krate":2,"index":3265},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3061,"byte_end":3070,"line_start":90,"line_end":90,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2802},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110329,"byte_end":110332,"line_start":2525,"line_end":2525,"column_start":29,"column_end":32},"name":"mul","qualname":"<&'_ Number as std::ops::Mul>::mul","value":"fn mul(Self, &Number) -> Self::Output","parent":{"krate":2,"index":3257},"children":[],"decl_id":{"krate":2,"index":3260},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3740,"byte_end":3749,"line_start":118,"line_end":118,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2806},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110329,"byte_end":110332,"line_start":2525,"line_end":2525,"column_start":29,"column_end":32},"name":"mul","qualname":"<&'a Number as std::ops::Mul>::mul","value":"fn mul(Self, Number) -> Self::Output","parent":{"krate":2,"index":3257},"children":[],"decl_id":{"krate":2,"index":3260},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2557,"byte_end":2566,"line_start":72,"line_end":72,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2809},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110329,"byte_end":110332,"line_start":2525,"line_end":2525,"column_start":29,"column_end":32},"name":"mul","qualname":"<Number as std::ops::Mul>::mul","value":"fn mul(Self, &Number) -> Self::Output","parent":{"krate":2,"index":3257},"children":[],"decl_id":{"krate":2,"index":3260},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2809,"byte_end":2818,"line_start":81,"line_end":81,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2812},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110329,"byte_end":110332,"line_start":2525,"line_end":2525,"column_start":29,"column_end":32},"name":"mul","qualname":"<Number as std::ops::Mul>::mul","value":"fn mul(Self, Number) -> Self::Output","parent":{"krate":2,"index":3257},"children":[],"decl_id":{"krate":2,"index":3260},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3061,"byte_end":3070,"line_start":90,"line_end":90,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2815},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110374,"byte_end":110377,"line_start":2526,"line_end":2526,"column_start":29,"column_end":32},"name":"rem","qualname":"<&'_ Number as std::ops::Rem>::rem","value":"fn rem(Self, &Number) -> Self::Output","parent":{"krate":2,"index":3268},"children":[],"decl_id":{"krate":2,"index":3271},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3740,"byte_end":3749,"line_start":118,"line_end":118,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2819},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110374,"byte_end":110377,"line_start":2526,"line_end":2526,"column_start":29,"column_end":32},"name":"rem","qualname":"<&'a Number as std::ops::Rem>::rem","value":"fn rem(Self, Number) -> Self::Output","parent":{"krate":2,"index":3268},"children":[],"decl_id":{"krate":2,"index":3271},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2557,"byte_end":2566,"line_start":72,"line_end":72,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2822},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110374,"byte_end":110377,"line_start":2526,"line_end":2526,"column_start":29,"column_end":32},"name":"rem","qualname":"<Number as std::ops::Rem>::rem","value":"fn rem(Self, &Number) -> Self::Output","parent":{"krate":2,"index":3268},"children":[],"decl_id":{"krate":2,"index":3271},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":2809,"byte_end":2818,"line_start":81,"line_end":81,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2825},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110374,"byte_end":110377,"line_start":2526,"line_end":2526,"column_start":29,"column_end":32},"name":"rem","qualname":"<Number as std::ops::Rem>::rem","value":"fn rem(Self, Number) -> Self::Output","parent":{"krate":2,"index":3268},"children":[],"decl_id":{"krate":2,"index":3271},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":3061,"byte_end":3070,"line_start":90,"line_end":90,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110465,"byte_end":110476,"line_start":2532,"line_end":2532,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Number as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Self) -> Option<Ordering>","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2879},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110448,"byte_end":110457,"line_start":2531,"line_end":2531,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110823,"byte_end":110825,"line_start":2545,"line_end":2545,"column_start":8,"column_end":10},"name":"lt","qualname":"<Number as std::cmp::PartialOrd>::lt","value":"fn lt(&Self, &Self) -> bool","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2880},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110806,"byte_end":110815,"line_start":2544,"line_end":2544,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110942,"byte_end":110944,"line_start":2550,"line_end":2550,"column_start":8,"column_end":10},"name":"le","qualname":"<Number as std::cmp::PartialOrd>::le","value":"fn le(&Self, &Self) -> bool","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2881},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110925,"byte_end":110934,"line_start":2549,"line_end":2549,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111061,"byte_end":111063,"line_start":2555,"line_end":2555,"column_start":8,"column_end":10},"name":"ge","qualname":"<Number as std::cmp::PartialOrd>::ge","value":"fn ge(&Self, &Self) -> bool","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111044,"byte_end":111053,"line_start":2554,"line_end":2554,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111180,"byte_end":111182,"line_start":2560,"line_end":2560,"column_start":8,"column_end":10},"name":"gt","qualname":"<Number as std::cmp::PartialOrd>::gt","value":"fn gt(&Self, &Self) -> bool","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2882},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111163,"byte_end":111172,"line_start":2559,"line_end":2559,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111380,"byte_end":111388,"line_start":2570,"line_end":2570,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Number as std::str::FromStr>::from_str","value":"fn from_str(&str) -> Result<Self, Self::Err>","parent":{"krate":2,"index":12765},"children":[],"decl_id":{"krate":2,"index":12767},"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111338,"byte_end":111358,"line_start":2568,"line_end":2568,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111363,"byte_end":111372,"line_start":2569,"line_end":2569,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3103},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111630,"byte_end":111634,"line_start":2580,"line_end":2580,"column_start":14,"column_end":18},"name":"Date","qualname":"::Date","value":"Date {  }","parent":null,"children":[{"krate":0,"index":3104}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2930},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111942,"byte_end":111950,"line_start":2587,"line_end":2587,"column_start":12,"column_end":20},"name":"get_date","qualname":"<Date>::get_date","value":"fn get_date(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getDate()` method returns the day of the month for the\n specified date according to local time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2933},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":112341,"byte_end":112348,"line_start":2594,"line_end":2594,"column_start":12,"column_end":19},"name":"get_day","qualname":"<Date>::get_day","value":"fn get_day(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getDay()` method returns the day of the week for the specified date according to local time,\n where 0 represents Sunday. For the day of the month see getDate().","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2936},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":112667,"byte_end":112680,"line_start":2600,"line_end":2600,"column_start":12,"column_end":25},"name":"get_full_year","qualname":"<Date>::get_full_year","value":"fn get_full_year(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getFullYear()` method returns the year of the specified date according to local time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2939},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":112992,"byte_end":113001,"line_start":2606,"line_end":2606,"column_start":12,"column_end":21},"name":"get_hours","qualname":"<Date>::get_hours","value":"fn get_hours(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getHours()` method returns the hour for the specified date, according to local time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2942},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":113340,"byte_end":113356,"line_start":2612,"line_end":2612,"column_start":12,"column_end":28},"name":"get_milliseconds","qualname":"<Date>::get_milliseconds","value":"fn get_milliseconds(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getMilliseconds()` method returns the milliseconds in the specified date according to local time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2945},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":113675,"byte_end":113686,"line_start":2618,"line_end":2618,"column_start":12,"column_end":23},"name":"get_minutes","qualname":"<Date>::get_minutes","value":"fn get_minutes(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getMinutes()` method returns the minutes in the specified date according to local time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2948},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":114079,"byte_end":114088,"line_start":2625,"line_end":2625,"column_start":12,"column_end":21},"name":"get_month","qualname":"<Date>::get_month","value":"fn get_month(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getMonth()` method returns the month in the specified date according to local time,\n as a zero-based value (where zero indicates the first month of the year).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2951},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":114407,"byte_end":114418,"line_start":2631,"line_end":2631,"column_start":12,"column_end":23},"name":"get_seconds","qualname":"<Date>::get_seconds","value":"fn get_seconds(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getSeconds()` method returns the seconds in the specified date according to local time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2954},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":114773,"byte_end":114781,"line_start":2638,"line_end":2638,"column_start":12,"column_end":20},"name":"get_time","qualname":"<Date>::get_time","value":"fn get_time(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `getTime()` method returns the numeric value corresponding to the time for the specified date\n according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2957},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":115159,"byte_end":115178,"line_start":2645,"line_end":2645,"column_start":12,"column_end":31},"name":"get_timezone_offset","qualname":"<Date>::get_timezone_offset","value":"fn get_timezone_offset(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `getTimezoneOffset()` method returns the time zone difference, in minutes,\n from current locale (host system settings) to UTC.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2960},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":115525,"byte_end":115537,"line_start":2652,"line_end":2652,"column_start":12,"column_end":24},"name":"get_utc_date","qualname":"<Date>::get_utc_date","value":"fn get_utc_date(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUTCDate()` method returns the day (date) of the month in the specified date\n according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2963},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":115900,"byte_end":115911,"line_start":2659,"line_end":2659,"column_start":12,"column_end":23},"name":"get_utc_day","qualname":"<Date>::get_utc_day","value":"fn get_utc_day(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUTCDay()` method returns the day of the week in the specified date according to universal time,\n where 0 represents Sunday.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2966},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":116243,"byte_end":116260,"line_start":2665,"line_end":2665,"column_start":12,"column_end":29},"name":"get_utc_full_year","qualname":"<Date>::get_utc_full_year","value":"fn get_utc_full_year(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUTCFullYear()` method returns the year in the specified date according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2969},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":116584,"byte_end":116597,"line_start":2671,"line_end":2671,"column_start":12,"column_end":25},"name":"get_utc_hours","qualname":"<Date>::get_utc_hours","value":"fn get_utc_hours(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUTCHours()` method returns the hours in the specified date according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2972},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":116957,"byte_end":116977,"line_start":2678,"line_end":2678,"column_start":12,"column_end":32},"name":"get_utc_milliseconds","qualname":"<Date>::get_utc_milliseconds","value":"fn get_utc_milliseconds(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUTCMilliseconds()` method returns the milliseconds in the specified date\n according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2975},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":117309,"byte_end":117324,"line_start":2684,"line_end":2684,"column_start":12,"column_end":27},"name":"get_utc_minutes","qualname":"<Date>::get_utc_minutes","value":"fn get_utc_minutes(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUTCMinutes()` method returns the minutes in the specified date according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2978},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":117723,"byte_end":117736,"line_start":2691,"line_end":2691,"column_start":12,"column_end":25},"name":"get_utc_month","qualname":"<Date>::get_utc_month","value":"fn get_utc_month(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUTCMonth()` returns the month of the specified date according to universal time,\n as a zero-based value (where zero indicates the first month of the year).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2981},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":118068,"byte_end":118083,"line_start":2697,"line_end":2697,"column_start":12,"column_end":27},"name":"get_utc_seconds","qualname":"<Date>::get_utc_seconds","value":"fn get_utc_seconds(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUTCSeconds()` method returns the seconds in the specified date according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2984},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":118477,"byte_end":118480,"line_start":2705,"line_end":2705,"column_start":12,"column_end":15},"name":"new","qualname":"<Date>::new","value":"fn new(&JsValue) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript `Date` instance that represents\n a single moment in time. `Date` objects are based on a time value that is\n the number of milliseconds since 1 January 1970 UTC.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2987},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":118771,"byte_end":118776,"line_start":2712,"line_end":2712,"column_start":12,"column_end":17},"name":"new_0","qualname":"<Date>::new_0","value":"fn new_0() -> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript `Date` instance that represents the current moment in\n time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2990},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":119160,"byte_end":119179,"line_start":2720,"line_end":2720,"column_start":12,"column_end":31},"name":"new_with_year_month","qualname":"<Date>::new_with_year_month","value":"fn new_with_year_month(u32, i32) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript `Date` instance that represents\n a single moment in time. `Date` objects are based on a time value that is\n the number of milliseconds since 1 January 1970 UTC.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2993},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":119584,"byte_end":119607,"line_start":2728,"line_end":2728,"column_start":12,"column_end":35},"name":"new_with_year_month_day","qualname":"<Date>::new_with_year_month_day","value":"fn new_with_year_month_day(u32, i32, i32) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript `Date` instance that represents\n a single moment in time. `Date` objects are based on a time value that is\n the number of milliseconds since 1 January 1970 UTC.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2996},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":120022,"byte_end":120048,"line_start":2736,"line_end":2736,"column_start":12,"column_end":38},"name":"new_with_year_month_day_hr","qualname":"<Date>::new_with_year_month_day_hr","value":"fn new_with_year_month_day_hr(u32, i32, i32, i32) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript `Date` instance that represents\n a single moment in time. `Date` objects are based on a time value that is\n the number of milliseconds since 1 January 1970 UTC.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2999},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":120472,"byte_end":120502,"line_start":2744,"line_end":2744,"column_start":12,"column_end":42},"name":"new_with_year_month_day_hr_min","qualname":"<Date>::new_with_year_month_day_hr_min","value":"fn new_with_year_month_day_hr_min(u32, i32, i32, i32, i32) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript `Date` instance that represents\n a single moment in time. `Date` objects are based on a time value that is\n the number of milliseconds since 1 January 1970 UTC.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3002},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":120983,"byte_end":121017,"line_start":2758,"line_end":2758,"column_start":12,"column_end":46},"name":"new_with_year_month_day_hr_min_sec","qualname":"<Date>::new_with_year_month_day_hr_min_sec","value":"fn new_with_year_month_day_hr_min_sec(u32, i32, i32, i32, i32, i32) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript `Date` instance that represents\n a single moment in time. `Date` objects are based on a time value that is\n the number of milliseconds since 1 January 1970 UTC.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3005},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":121516,"byte_end":121556,"line_start":2773,"line_end":2773,"column_start":12,"column_end":52},"name":"new_with_year_month_day_hr_min_sec_milli","qualname":"<Date>::new_with_year_month_day_hr_min_sec_milli","value":"fn new_with_year_month_day_hr_min_sec_milli(u32, i32, i32, i32, i32, i32, i32)\n-> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript `Date` instance that represents\n a single moment in time. `Date` objects are based on a time value that is\n the number of milliseconds since 1 January 1970 UTC.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3008},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":122006,"byte_end":122009,"line_start":2788,"line_end":2788,"column_start":12,"column_end":15},"name":"now","qualname":"<Date>::now","value":"fn now() -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Date.now()` method returns the number of milliseconds\n elapsed since January 1, 1970 00:00:00 UTC.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3011},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":122479,"byte_end":122484,"line_start":2796,"line_end":2796,"column_start":12,"column_end":17},"name":"parse","qualname":"<Date>::parse","value":"fn parse(&str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Date.parse()` method parses a string representation of a date, and returns the number of milliseconds\n since January 1, 1970, 00:00:00 UTC or `NaN` if the string is unrecognized or, in some cases,\n contains illegal date values (e.g. 2015-02-31).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3014},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":122812,"byte_end":122820,"line_start":2802,"line_end":2802,"column_start":12,"column_end":20},"name":"set_date","qualname":"<Date>::set_date","value":"fn set_date(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setDate()` method sets the day of the Date object relative to the beginning of the currently set month.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3017},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":123181,"byte_end":123194,"line_start":2809,"line_end":2809,"column_start":12,"column_end":25},"name":"set_full_year","qualname":"<Date>::set_full_year","value":"fn set_full_year(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setFullYear()` method sets the full year for a specified date according to local time.\n Returns new timestamp.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3020},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":123556,"byte_end":123580,"line_start":2816,"line_end":2816,"column_start":12,"column_end":36},"name":"set_full_year_with_month","qualname":"<Date>::set_full_year_with_month","value":"fn set_full_year_with_month(&Self, u32, i32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setFullYear()` method sets the full year for a specified date according to local time.\n Returns new timestamp.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3023},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":123954,"byte_end":123983,"line_start":2823,"line_end":2823,"column_start":12,"column_end":41},"name":"set_full_year_with_month_date","qualname":"<Date>::set_full_year_with_month_date","value":"fn set_full_year_with_month_date(&Self, u32, i32, i32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setFullYear()` method sets the full year for a specified date according to local time.\n Returns new timestamp.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3026},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":124471,"byte_end":124480,"line_start":2831,"line_end":2831,"column_start":12,"column_end":21},"name":"set_hours","qualname":"<Date>::set_hours","value":"fn set_hours(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setHours()` method sets the hours for a specified date according to local time,\n and returns the number of milliseconds since January 1, 1970 00:00:00 UTC until the time represented\n by the updated Date instance.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3029},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":124827,"byte_end":124843,"line_start":2837,"line_end":2837,"column_start":12,"column_end":28},"name":"set_milliseconds","qualname":"<Date>::set_milliseconds","value":"fn set_milliseconds(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setMilliseconds()` method sets the milliseconds for a specified date according to local time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3032},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":125177,"byte_end":125188,"line_start":2843,"line_end":2843,"column_start":12,"column_end":23},"name":"set_minutes","qualname":"<Date>::set_minutes","value":"fn set_minutes(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setMinutes()` method sets the minutes for a specified date according to local time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3035},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":125521,"byte_end":125530,"line_start":2849,"line_end":2849,"column_start":12,"column_end":21},"name":"set_month","qualname":"<Date>::set_month","value":"fn set_month(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setMonth()` method sets the month for a specified date according to the currently set year.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3038},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":125857,"byte_end":125868,"line_start":2855,"line_end":2855,"column_start":12,"column_end":23},"name":"set_seconds","qualname":"<Date>::set_seconds","value":"fn set_seconds(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setSeconds()` method sets the seconds for a specified date according to local time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3041},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":126243,"byte_end":126251,"line_start":2862,"line_end":2862,"column_start":12,"column_end":20},"name":"set_time","qualname":"<Date>::set_time","value":"fn set_time(&Self, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setTime()` method sets the Date object to the time represented by a number of milliseconds\n since January 1, 1970, 00:00:00 UTC.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3044},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":126598,"byte_end":126610,"line_start":2869,"line_end":2869,"column_start":12,"column_end":24},"name":"set_utc_date","qualname":"<Date>::set_utc_date","value":"fn set_utc_date(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCDate()` method sets the day of the month for a specified date\n according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3047},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":126953,"byte_end":126970,"line_start":2875,"line_end":2875,"column_start":12,"column_end":29},"name":"set_utc_full_year","qualname":"<Date>::set_utc_full_year","value":"fn set_utc_full_year(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCFullYear()` method sets the full year for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3050},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":127314,"byte_end":127342,"line_start":2881,"line_end":2881,"column_start":12,"column_end":40},"name":"set_utc_full_year_with_month","qualname":"<Date>::set_utc_full_year_with_month","value":"fn set_utc_full_year_with_month(&Self, u32, i32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCFullYear()` method sets the full year for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3053},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":127698,"byte_end":127731,"line_start":2887,"line_end":2887,"column_start":12,"column_end":45},"name":"set_utc_full_year_with_month_date","qualname":"<Date>::set_utc_full_year_with_month_date","value":"fn set_utc_full_year_with_month_date(&Self, u32, i32, i32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCFullYear()` method sets the full year for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3056},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":128232,"byte_end":128245,"line_start":2895,"line_end":2895,"column_start":12,"column_end":25},"name":"set_utc_hours","qualname":"<Date>::set_utc_hours","value":"fn set_utc_hours(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCHours()` method sets the hour for a specified date according to universal time,\n and returns the number of milliseconds since  January 1, 1970 00:00:00 UTC until the time\n represented by the updated Date instance.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3059},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":128613,"byte_end":128633,"line_start":2902,"line_end":2902,"column_start":12,"column_end":32},"name":"set_utc_milliseconds","qualname":"<Date>::set_utc_milliseconds","value":"fn set_utc_milliseconds(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCMilliseconds()` method sets the milliseconds for a specified date\n according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3062},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":128980,"byte_end":128995,"line_start":2908,"line_end":2908,"column_start":12,"column_end":27},"name":"set_utc_minutes","qualname":"<Date>::set_utc_minutes","value":"fn set_utc_minutes(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCMinutes()` method sets the minutes for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3065},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":129329,"byte_end":129342,"line_start":2914,"line_end":2914,"column_start":12,"column_end":25},"name":"set_utc_month","qualname":"<Date>::set_utc_month","value":"fn set_utc_month(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCMonth()` method sets the month for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3068},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":129682,"byte_end":129697,"line_start":2920,"line_end":2920,"column_start":12,"column_end":27},"name":"set_utc_seconds","qualname":"<Date>::set_utc_seconds","value":"fn set_utc_seconds(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCSeconds()` method sets the seconds for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3071},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":130063,"byte_end":130077,"line_start":2927,"line_end":2927,"column_start":12,"column_end":26},"name":"to_date_string","qualname":"<Date>::to_date_string","value":"fn to_date_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toDateString()` method returns the date portion of a Date object\n in human readable form in American English.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3074},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":130608,"byte_end":130621,"line_start":2936,"line_end":2936,"column_start":12,"column_end":25},"name":"to_iso_string","qualname":"<Date>::to_iso_string","value":"fn to_iso_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toISOString()` method returns a string in simplified extended ISO format (ISO\n 8601), which is always 24 or 27 characters long (YYYY-MM-DDTHH:mm:ss.sssZ or\n ±YYYYYY-MM-DDTHH:mm:ss.sssZ, respectively). The timezone is always zero UTC offset,\n as denoted by the suffix \"Z\"","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3077},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":130918,"byte_end":130925,"line_start":2942,"line_end":2942,"column_start":12,"column_end":19},"name":"to_json","qualname":"<Date>::to_json","value":"fn to_json(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toJSON()` method returns a string representation of the Date object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3080},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":131684,"byte_end":131705,"line_start":2954,"line_end":2954,"column_start":12,"column_end":33},"name":"to_locale_date_string","qualname":"<Date>::to_locale_date_string","value":"fn to_locale_date_string(&Self, &str, &JsValue) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleDateString()` method returns a string with a language sensitive\n representation of the date portion of this date. The new locales and options\n arguments let applications specify the language whose formatting conventions\n should be used and allow to customize the behavior of the function.\n In older implementations, which ignore the locales and options arguments,\n the locale used and the form of the string\n returned are entirely implementation dependent.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3083},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":132456,"byte_end":132472,"line_start":2966,"line_end":2966,"column_start":12,"column_end":28},"name":"to_locale_string","qualname":"<Date>::to_locale_string","value":"fn to_locale_string(&Self, &str, &JsValue) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleString()` method returns a string with a language sensitive\n representation of this date. The new locales and options arguments\n let applications specify the language whose formatting conventions\n should be used and customize the behavior of the function.\n In older implementations, which ignore the locales\n and options arguments, the locale used and the form of the string\n returned are entirely implementation dependent.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3086},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":133247,"byte_end":133268,"line_start":2977,"line_end":2977,"column_start":12,"column_end":33},"name":"to_locale_time_string","qualname":"<Date>::to_locale_time_string","value":"fn to_locale_time_string(&Self, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleTimeString()` method returns a string with a language sensitive\n representation of the time portion of this date. The new locales and options\n arguments let applications specify the language whose formatting conventions should be\n used and customize the behavior of the function. In older implementations, which ignore\n the locales and options arguments, the locale used and the form of the string\n returned are entirely implementation dependent.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3089},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":133598,"byte_end":133607,"line_start":2984,"line_end":2984,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Date>::to_string","value":"fn to_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing\n the specified Date object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3092},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":133964,"byte_end":133978,"line_start":2991,"line_end":2991,"column_start":12,"column_end":26},"name":"to_time_string","qualname":"<Date>::to_time_string","value":"fn to_time_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toTimeString()` method returns the time portion of a Date object in human\n readable form in American English.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3095},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":134300,"byte_end":134313,"line_start":2998,"line_end":2998,"column_start":12,"column_end":25},"name":"to_utc_string","qualname":"<Date>::to_utc_string","value":"fn to_utc_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toUTCString()` method converts a date to a string,\n using the UTC time zone.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3098},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":134770,"byte_end":134773,"line_start":3007,"line_end":3007,"column_start":12,"column_end":15},"name":"utc","qualname":"<Date>::utc","value":"fn utc(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Date.UTC()` method accepts the same parameters as the\n longest form of the constructor, and returns the number of\n milliseconds in a `Date` object since January 1, 1970,\n 00:00:00, universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3101},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135081,"byte_end":135089,"line_start":3014,"line_end":3014,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Date>::value_of","value":"fn value_of(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `valueOf()` method  returns the primitive value of\n a Date object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111481,"byte_end":111496,"line_start":2576,"line_end":2576,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3287},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135243,"byte_end":135249,"line_start":3022,"line_end":3022,"column_start":14,"column_end":20},"name":"Object","qualname":"::Object","value":"Object {  }","parent":null,"children":[{"krate":0,"index":3288}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3192},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135641,"byte_end":135647,"line_start":3030,"line_end":3030,"column_start":12,"column_end":18},"name":"assign","qualname":"<Object>::assign","value":"fn assign(&Object, &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.assign()` method is used to copy the values of all enumerable\n own properties from one or more source objects to a target object. It\n will return the target object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3195},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":136101,"byte_end":136108,"line_start":3038,"line_end":3038,"column_start":12,"column_end":19},"name":"assign2","qualname":"<Object>::assign2","value":"fn assign2(&Object, &Object, &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.assign()` method is used to copy the values of all enumerable\n own properties from one or more source objects to a target object. It\n will return the target object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3198},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":136581,"byte_end":136588,"line_start":3046,"line_end":3046,"column_start":12,"column_end":19},"name":"assign3","qualname":"<Object>::assign3","value":"fn assign3(&Object, &Object, &Object, &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.assign()` method is used to copy the values of all enumerable\n own properties from one or more source objects to a target object. It\n will return the target object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3201},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":136996,"byte_end":137007,"line_start":3054,"line_end":3054,"column_start":12,"column_end":23},"name":"constructor","qualname":"<Object>::constructor","value":"fn constructor(&Self) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The constructor property returns a reference to the `Object` constructor\n function that created the instance object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3204},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":137368,"byte_end":137374,"line_start":3061,"line_end":3061,"column_start":12,"column_end":18},"name":"create","qualname":"<Object>::create","value":"fn create(&Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.create()` method creates a new object, using an existing\n object to provide the newly created object's prototype.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3207},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":137816,"byte_end":137831,"line_start":3069,"line_end":3069,"column_start":12,"column_end":27},"name":"define_property","qualname":"<Object>::define_property","value":"fn define_property(&Object, &JsValue, &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The static method `Object.defineProperty()` defines a new\n property directly on an object, or modifies an existing\n property on an object, and returns the object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3210},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":138275,"byte_end":138292,"line_start":3077,"line_end":3077,"column_start":12,"column_end":29},"name":"define_properties","qualname":"<Object>::define_properties","value":"fn define_properties(&Object, &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.defineProperties()` method defines new or modifies\n existing properties directly on an object, returning the\n object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3213},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":138827,"byte_end":138834,"line_start":3087,"line_end":3087,"column_start":12,"column_end":19},"name":"entries","qualname":"<Object>::entries","value":"fn entries(&Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Object.entries()` method returns an array of a given\n object's own enumerable property [key, value] pairs, in the\n same order as that provided by a for...in loop (the difference\n being that a for-in loop enumerates properties in the\n prototype chain as well).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3216},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":139447,"byte_end":139453,"line_start":3097,"line_end":3097,"column_start":12,"column_end":18},"name":"freeze","qualname":"<Object>::freeze","value":"fn freeze(&Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.freeze()` method freezes an object: that is, prevents new\n properties from being added to it; prevents existing properties from\n being removed; and prevents existing properties, or their enumerability,\n configurability, or writability, from being changed, it also prevents\n the prototype from being changed. The method returns the passed object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3219},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":139810,"byte_end":139822,"line_start":3104,"line_end":3104,"column_start":12,"column_end":24},"name":"from_entries","qualname":"<Object>::from_entries","value":"fn from_entries(&JsValue) -> Result<Object, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `Object.fromEntries()` method transforms a list of key-value pairs\n into an object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3222},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":140349,"byte_end":140376,"line_start":3113,"line_end":3113,"column_start":12,"column_end":39},"name":"get_own_property_descriptor","qualname":"<Object>::get_own_property_descriptor","value":"fn get_own_property_descriptor(&Object, &JsValue) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `Object.getOwnPropertyDescriptor()` method returns a\n property descriptor for an own property (that is, one directly\n present on an object and not in the object's prototype chain)\n of a given object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3225},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":140786,"byte_end":140814,"line_start":3120,"line_end":3120,"column_start":12,"column_end":40},"name":"get_own_property_descriptors","qualname":"<Object>::get_own_property_descriptors","value":"fn get_own_property_descriptors(&Object) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `Object.getOwnPropertyDescriptors()` method returns all own\n property descriptors of a given object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3228},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":141285,"byte_end":141307,"line_start":3128,"line_end":3128,"column_start":12,"column_end":34},"name":"get_own_property_names","qualname":"<Object>::get_own_property_names","value":"fn get_own_property_names(&Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Object.getOwnPropertyNames()` method returns an array of\n all properties (including non-enumerable properties except for\n those which use Symbol) found directly upon a given object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3231},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":141709,"byte_end":141733,"line_start":3135,"line_end":3135,"column_start":12,"column_end":36},"name":"get_own_property_symbols","qualname":"<Object>::get_own_property_symbols","value":"fn get_own_property_symbols(&Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Object.getOwnPropertySymbols()` method returns an array of\n all symbol properties found directly upon a given object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3234},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":142147,"byte_end":142163,"line_start":3143,"line_end":3143,"column_start":12,"column_end":28},"name":"get_prototype_of","qualname":"<Object>::get_prototype_of","value":"fn get_prototype_of(&JsValue) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.getPrototypeOf()` method returns the prototype\n (i.e. the value of the internal [[Prototype]] property) of the\n specified object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3237},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":142576,"byte_end":142592,"line_start":3151,"line_end":3151,"column_start":12,"column_end":28},"name":"has_own_property","qualname":"<Object>::has_own_property","value":"fn has_own_property(&Self, &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `hasOwnProperty()` method returns a boolean indicating whether the\n object has the specified property as its own property (as opposed to\n inheriting it).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3240},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":143035,"byte_end":143042,"line_start":3159,"line_end":3159,"column_start":12,"column_end":19},"name":"has_own","qualname":"<Object>::has_own","value":"fn has_own(&Object, &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Object.hasOwn()` method returns a boolean indicating whether the\n object passed in has the specified property as its own property (as\n opposed to inheriting it).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3243},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":143361,"byte_end":143363,"line_start":3165,"line_end":3165,"column_start":12,"column_end":14},"name":"is","qualname":"<Object>::is","value":"fn is(&JsValue, &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Object.is()` method determines whether two values are the same value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3246},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":143771,"byte_end":143784,"line_start":3172,"line_end":3172,"column_start":12,"column_end":25},"name":"is_extensible","qualname":"<Object>::is_extensible","value":"fn is_extensible(&Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Object.isExtensible()` method determines if an object is extensible\n (whether it can have new properties added to it).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3249},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":144091,"byte_end":144100,"line_start":3178,"line_end":3178,"column_start":12,"column_end":21},"name":"is_frozen","qualname":"<Object>::is_frozen","value":"fn is_frozen(&Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Object.isFrozen()` determines if an object is frozen.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3252},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":144414,"byte_end":144423,"line_start":3184,"line_end":3184,"column_start":12,"column_end":21},"name":"is_sealed","qualname":"<Object>::is_sealed","value":"fn is_sealed(&Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Object.isSealed()` method determines if an object is sealed.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3255},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":144763,"byte_end":144778,"line_start":3191,"line_end":3191,"column_start":12,"column_end":27},"name":"is_prototype_of","qualname":"<Object>::is_prototype_of","value":"fn is_prototype_of(&Self, &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `isPrototypeOf()` method checks if an object exists in another\n object's prototype chain.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3258},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":145153,"byte_end":145157,"line_start":3198,"line_end":3198,"column_start":12,"column_end":16},"name":"keys","qualname":"<Object>::keys","value":"fn keys(&Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Object.keys()` method returns an array of a given object's property\n names, in the same order as we get with a normal loop.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3261},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":145417,"byte_end":145420,"line_start":3204,"line_end":3204,"column_start":12,"column_end":15},"name":"new","qualname":"<Object>::new","value":"fn new() -> Object","parent":null,"children":[],"decl_id":null,"docs":" The [`Object`] constructor creates an object wrapper.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3264},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":145837,"byte_end":145855,"line_start":3212,"line_end":3212,"column_start":12,"column_end":30},"name":"prevent_extensions","qualname":"<Object>::prevent_extensions","value":"fn prevent_extensions(&Object)","parent":null,"children":[],"decl_id":null,"docs":" The `Object.preventExtensions()` method prevents new properties from\n ever being added to an object (i.e. prevents future extensions to the\n object).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3267},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":146219,"byte_end":146241,"line_start":3219,"line_end":3219,"column_start":12,"column_end":34},"name":"property_is_enumerable","qualname":"<Object>::property_is_enumerable","value":"fn property_is_enumerable(&Self, &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `propertyIsEnumerable()` method returns a Boolean indicating\n whether the specified property is enumerable.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3270},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":146738,"byte_end":146742,"line_start":3228,"line_end":3228,"column_start":12,"column_end":16},"name":"seal","qualname":"<Object>::seal","value":"fn seal(&Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.seal()` method seals an object, preventing new properties\n from being added to it and marking all existing properties as\n non-configurable.  Values of present properties can still be changed as\n long as they are writable.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3273},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":147172,"byte_end":147188,"line_start":3236,"line_end":3236,"column_start":12,"column_end":28},"name":"set_prototype_of","qualname":"<Object>::set_prototype_of","value":"fn set_prototype_of(&Object, &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.setPrototypeOf()` method sets the prototype (i.e., the\n internal `[[Prototype]]` property) of a specified object to another\n object or `null`.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3276},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":147626,"byte_end":147642,"line_start":3244,"line_end":3244,"column_start":12,"column_end":28},"name":"to_locale_string","qualname":"<Object>::to_locale_string","value":"fn to_locale_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleString()` method returns a string representing the object.\n This method is meant to be overridden by derived objects for\n locale-specific purposes.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3279},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":147939,"byte_end":147948,"line_start":3250,"line_end":3250,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Object>::to_string","value":"fn to_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3282},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":148261,"byte_end":148269,"line_start":3257,"line_end":3257,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Object>::value_of","value":"fn value_of(&Self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `valueOf()` method returns the primitive value of the\n specified object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3285},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":148769,"byte_end":148775,"line_start":3266,"line_end":3266,"column_start":12,"column_end":18},"name":"values","qualname":"<Object>::values","value":"fn values(&Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Object.values()` method returns an array of a given object's own\n enumerable property values, in the same order as that provided by a\n `for...in` loop (the difference being that a for-in loop enumerates\n properties in the prototype chain as well).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":135125,"byte_end":135140,"line_start":3018,"line_end":3018,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":149024,"byte_end":149032,"line_start":3275,"line_end":3275,"column_start":12,"column_end":20},"name":"try_from","qualname":"<Object>::try_from","value":"fn try_from(&JsValue) -> Option<&Object>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Object` value of this JS value if it's an instance of an\n object.","sig":null,"attributes":[{"value":"/ Returns the `Object` value of this JS value if it's an instance of an","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":148824,"byte_end":148897,"line_start":3270,"line_end":3270,"column_start":5,"column_end":78}},{"value":"/ object.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":148902,"byte_end":148913,"line_start":3271,"line_end":3271,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":148918,"byte_end":148921,"line_start":3272,"line_end":3272,"column_start":5,"column_end":8}},{"value":"/ If this JS value is not an instance of an object then this returns","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":148926,"byte_end":148996,"line_start":3273,"line_end":3273,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":149001,"byte_end":149012,"line_start":3274,"line_end":3274,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":149238,"byte_end":149240,"line_start":3286,"line_end":3286,"column_start":8,"column_end":10},"name":"eq","qualname":"<Object as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Object) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":149221,"byte_end":149230,"line_start":3285,"line_end":3285,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":149389,"byte_end":149396,"line_start":3294,"line_end":3294,"column_start":8,"column_end":15},"name":"default","qualname":"<Object as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3374},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":149575,"byte_end":149580,"line_start":3304,"line_end":3304,"column_start":14,"column_end":19},"name":"Proxy","qualname":"::Proxy","value":"Proxy {  }","parent":null,"children":[{"krate":0,"index":3375}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":149447,"byte_end":149462,"line_start":3300,"line_end":3300,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":149447,"byte_end":149462,"line_start":3300,"line_end":3300,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3369},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":149932,"byte_end":149935,"line_start":3312,"line_end":3312,"column_start":12,"column_end":15},"name":"new","qualname":"<Proxy>::new","value":"fn new(&JsValue, &Object) -> Proxy","parent":null,"children":[],"decl_id":null,"docs":" The [`Proxy`] object is used to define custom behavior for fundamental\n operations (e.g. property lookup, assignment, enumeration, function\n invocation, etc).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":149447,"byte_end":149462,"line_start":3300,"line_end":3300,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":149447,"byte_end":149462,"line_start":3300,"line_end":3300,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3372},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":150269,"byte_end":150278,"line_start":3319,"line_end":3319,"column_start":12,"column_end":21},"name":"revocable","qualname":"<Proxy>::revocable","value":"fn revocable(&JsValue, &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Proxy.revocable()` method is used to create a revocable [`Proxy`]\n object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":149447,"byte_end":149462,"line_start":3300,"line_end":3300,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":149447,"byte_end":149462,"line_start":3300,"line_end":3300,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3478},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":150762,"byte_end":150772,"line_start":3331,"line_end":3331,"column_start":14,"column_end":24},"name":"RangeError","qualname":"::RangeError","value":"RangeError {  }","parent":null,"children":[{"krate":0,"index":3479}],"decl_id":null,"docs":" The `RangeError` object indicates an error when a value is not in the set\n or range of allowed values.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":150343,"byte_end":150358,"line_start":3323,"line_end":3323,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":150343,"byte_end":150358,"line_start":3323,"line_end":3323,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3476},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151066,"byte_end":151069,"line_start":3338,"line_end":3338,"column_start":12,"column_end":15},"name":"new","qualname":"<RangeError>::new","value":"fn new(&str) -> RangeError","parent":null,"children":[],"decl_id":null,"docs":" The `RangeError` object indicates an error when a value is not in the set\n or range of allowed values.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":150343,"byte_end":150358,"line_start":3323,"line_end":3323,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":150343,"byte_end":150358,"line_start":3323,"line_end":3323,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3589},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151538,"byte_end":151552,"line_start":3350,"line_end":3350,"column_start":14,"column_end":28},"name":"ReferenceError","qualname":"::ReferenceError","value":"ReferenceError {  }","parent":null,"children":[{"krate":0,"index":3590}],"decl_id":null,"docs":" The `ReferenceError` object represents an error when a non-existent\n variable is referenced.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151121,"byte_end":151136,"line_start":3342,"line_end":3342,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151121,"byte_end":151136,"line_start":3342,"line_end":3342,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3587},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151840,"byte_end":151843,"line_start":3357,"line_end":3357,"column_start":12,"column_end":15},"name":"new","qualname":"<ReferenceError>::new","value":"fn new(&str) -> ReferenceError","parent":null,"children":[],"decl_id":null,"docs":" The `ReferenceError` object represents an error when a non-existent\n variable is referenced.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151121,"byte_end":151136,"line_start":3342,"line_end":3342,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151121,"byte_end":151136,"line_start":3342,"line_end":3342,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":240},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151914,"byte_end":151921,"line_start":3361,"line_end":3361,"column_start":9,"column_end":16},"name":"Reflect","qualname":"::Reflect","value":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":3602},{"krate":0,"index":3604},{"krate":0,"index":3606},{"krate":0,"index":3608},{"krate":0,"index":3610},{"krate":0,"index":3612},{"krate":0,"index":3614},{"krate":0,"index":3616},{"krate":0,"index":3618},{"krate":0,"index":3620},{"krate":0,"index":3622},{"krate":0,"index":3624},{"krate":0,"index":3626},{"krate":0,"index":3628},{"krate":0,"index":3630},{"krate":0,"index":3632},{"krate":0,"index":3634},{"krate":0,"index":3636},{"krate":0,"index":3638}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151881,"byte_end":151905,"line_start":3360,"line_end":3360,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":3602},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":152318,"byte_end":152323,"line_start":3372,"line_end":3372,"column_start":16,"column_end":21},"name":"apply","qualname":"::Reflect::apply","value":"fn apply(&Function, &JsValue, &Array) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.apply()` method calls a target function with\n arguments as specified.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3604},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":152923,"byte_end":152932,"line_start":3384,"line_end":3384,"column_start":16,"column_end":25},"name":"construct","qualname":"::Reflect::construct","value":"fn construct(&Function, &Array) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.construct()` method acts like the new operator, but\n as a function.  It is equivalent to calling `new target(...args)`. It\n gives also the added option to specify a different prototype.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3606},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":153481,"byte_end":153506,"line_start":3392,"line_end":3392,"column_start":16,"column_end":41},"name":"construct_with_new_target","qualname":"::Reflect::construct_with_new_target","value":"fn construct_with_new_target(&Function, &Array, &Function)\n-> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.construct()` method acts like the new operator, but\n as a function.  It is equivalent to calling `new target(...args)`. It\n gives also the added option to specify a different prototype.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3608},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":154023,"byte_end":154038,"line_start":3403,"line_end":3403,"column_start":16,"column_end":31},"name":"define_property","qualname":"::Reflect::define_property","value":"fn define_property(&Object, &JsValue, &Object) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.defineProperty()` method is like\n `Object.defineProperty()` but returns a `Boolean`.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3610},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":154567,"byte_end":154582,"line_start":3414,"line_end":3414,"column_start":16,"column_end":31},"name":"delete_property","qualname":"::Reflect::delete_property","value":"fn delete_property(&Object, &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.deleteProperty()` method allows to delete\n properties.  It is like the `delete` operator as a function.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3612},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":154992,"byte_end":154995,"line_start":3421,"line_end":3421,"column_start":16,"column_end":19},"name":"get","qualname":"::Reflect::get","value":"fn get(&JsValue, &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.get()` method works like getting a property from\n an object (`target[propertyKey]`) as a function.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3614},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":155257,"byte_end":155264,"line_start":3426,"line_end":3426,"column_start":16,"column_end":23},"name":"get_f64","qualname":"::Reflect::get_f64","value":"fn get_f64(&JsValue, f64) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The same as [`get`](fn.get.html)\n except the key is an `f64`, which is slightly faster.\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3616},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":155520,"byte_end":155527,"line_start":3431,"line_end":3431,"column_start":16,"column_end":23},"name":"get_u32","qualname":"::Reflect::get_u32","value":"fn get_u32(&JsValue, u32) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The same as [`get`](fn.get.html)\n except the key is a `u32`, which is slightly faster.\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3618},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":156099,"byte_end":156126,"line_start":3439,"line_end":3439,"column_start":16,"column_end":43},"name":"get_own_property_descriptor","qualname":"::Reflect::get_own_property_descriptor","value":"fn get_own_property_descriptor(&Object, &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.getOwnPropertyDescriptor()` method is similar to\n `Object.getOwnPropertyDescriptor()`. It returns a property descriptor\n of the given property if it exists on the object, `undefined` otherwise.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3620},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":156735,"byte_end":156751,"line_start":3451,"line_end":3451,"column_start":16,"column_end":32},"name":"get_prototype_of","qualname":"::Reflect::get_prototype_of","value":"fn get_prototype_of(&JsValue) -> Result<Object, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.getPrototypeOf()` method is almost the same\n method as `Object.getPrototypeOf()`. It returns the prototype\n (i.e. the value of the internal `[[Prototype]]` property) of\n the specified object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3622},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":157107,"byte_end":157110,"line_start":3458,"line_end":3458,"column_start":16,"column_end":19},"name":"has","qualname":"::Reflect::has","value":"fn has(&JsValue, &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.has()` method works like the in operator as a\n function.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3624},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":157657,"byte_end":157670,"line_start":3466,"line_end":3466,"column_start":16,"column_end":29},"name":"is_extensible","qualname":"::Reflect::is_extensible","value":"fn is_extensible(&Object) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.isExtensible()` method determines if an object is\n extensible (whether it can have new properties added to it). It is\n similar to `Object.isExtensible()`, but with some differences.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3626},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":158067,"byte_end":158075,"line_start":3473,"line_end":3473,"column_start":16,"column_end":24},"name":"own_keys","qualname":"::Reflect::own_keys","value":"fn own_keys(&JsValue) -> Result<Array, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.ownKeys()` method returns an array of the\n target object's own property keys.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3628},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":158651,"byte_end":158669,"line_start":3482,"line_end":3482,"column_start":16,"column_end":34},"name":"prevent_extensions","qualname":"::Reflect::prevent_extensions","value":"fn prevent_extensions(&Object) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.preventExtensions()` method prevents new\n properties from ever being added to an object (i.e. prevents\n future extensions to the object). It is similar to\n `Object.preventExtensions()`, but with some differences.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3630},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":159024,"byte_end":159027,"line_start":3489,"line_end":3489,"column_start":16,"column_end":19},"name":"set","qualname":"::Reflect::set","value":"fn set(&JsValue, &JsValue, &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.set()` method works like setting a\n property on an object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3632},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":159359,"byte_end":159366,"line_start":3498,"line_end":3498,"column_start":16,"column_end":23},"name":"set_f64","qualname":"::Reflect::set_f64","value":"fn set_f64(&JsValue, f64, &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The same as [`set`](fn.set.html)\n except the key is an `f64`, which is slightly faster.\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3634},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":159692,"byte_end":159699,"line_start":3507,"line_end":3507,"column_start":16,"column_end":23},"name":"set_u32","qualname":"::Reflect::set_u32","value":"fn set_u32(&JsValue, u32, &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The same as [`set`](fn.set.html)\n except the key is a `u32`, which is slightly faster.\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3636},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160153,"byte_end":160170,"line_start":3518,"line_end":3518,"column_start":16,"column_end":33},"name":"set_with_receiver","qualname":"::Reflect::set_with_receiver","value":"fn set_with_receiver(&JsValue, &JsValue, &JsValue, &JsValue)\n-> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.set()` method works like setting a\n property on an object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3638},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160843,"byte_end":160859,"line_start":3532,"line_end":3532,"column_start":16,"column_end":32},"name":"set_prototype_of","qualname":"::Reflect::set_prototype_of","value":"fn set_prototype_of(&Object, &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.setPrototypeOf()` method is the same\n method as `Object.setPrototypeOf()`. It sets the prototype\n (i.e., the internal `[[Prototype]]` property) of a specified\n object to another object or to null.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":151962,"byte_end":151977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3809},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":161094,"byte_end":161100,"line_start":3541,"line_end":3541,"column_start":14,"column_end":20},"name":"RegExp","qualname":"::RegExp","value":"RegExp {  }","parent":null,"children":[{"krate":0,"index":3810}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3726},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":161394,"byte_end":161398,"line_start":3548,"line_end":3548,"column_start":12,"column_end":16},"name":"exec","qualname":"<RegExp>::exec","value":"fn exec(&Self, &str) -> Option<Array>","parent":null,"children":[],"decl_id":null,"docs":" The `exec()` method executes a search for a match in a specified\n string. Returns a result array, or null.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3729},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":161741,"byte_end":161746,"line_start":3555,"line_end":3555,"column_start":12,"column_end":17},"name":"flags","qualname":"<RegExp>::flags","value":"fn flags(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The flags property returns a string consisting of the flags of\n the current regular expression object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3732},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":162151,"byte_end":162157,"line_start":3563,"line_end":3563,"column_start":12,"column_end":18},"name":"global","qualname":"<RegExp>::global","value":"fn global(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The global property indicates whether or not the \"g\" flag is\n used with the regular expression. global is a read-only\n property of an individual regular expression instance.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3735},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":162592,"byte_end":162603,"line_start":3571,"line_end":3571,"column_start":12,"column_end":23},"name":"ignore_case","qualname":"<RegExp>::ignore_case","value":"fn ignore_case(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The ignoreCase property indicates whether or not the \"i\" flag\n is used with the regular expression. ignoreCase is a read-only\n property of an individual regular expression instance.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3738},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":163047,"byte_end":163052,"line_start":3580,"line_end":3580,"column_start":12,"column_end":17},"name":"input","qualname":"<RegExp>::input","value":"fn input() -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard input property is a static property of\n regular expressions that contains the string against which a\n regular expression is matched. RegExp.$_ is an alias for this\n property.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3741},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":163429,"byte_end":163439,"line_start":3587,"line_end":3587,"column_start":12,"column_end":22},"name":"last_index","qualname":"<RegExp>::last_index","value":"fn last_index(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The lastIndex is a read/write integer property of regular expression\n instances that specifies the index at which to start the next match.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3744},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":163824,"byte_end":163838,"line_start":3594,"line_end":3594,"column_start":12,"column_end":26},"name":"set_last_index","qualname":"<RegExp>::set_last_index","value":"fn set_last_index(&Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" The lastIndex is a read/write integer property of regular expression\n instances that specifies the index at which to start the next match.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3747},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":164294,"byte_end":164304,"line_start":3602,"line_end":3602,"column_start":12,"column_end":22},"name":"last_match","qualname":"<RegExp>::last_match","value":"fn last_match() -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard lastMatch property is a static and read-only\n property of regular expressions that contains the last matched\n characters. `RegExp.$&` is an alias for this property.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3750},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":164774,"byte_end":164784,"line_start":3611,"line_end":3611,"column_start":12,"column_end":22},"name":"last_paren","qualname":"<RegExp>::last_paren","value":"fn last_paren() -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard lastParen property is a static and read-only\n property of regular expressions that contains the last\n parenthesized substring match, if any. `RegExp.$+` is an alias\n for this property.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3753},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":165259,"byte_end":165271,"line_start":3620,"line_end":3620,"column_start":12,"column_end":24},"name":"left_context","qualname":"<RegExp>::left_context","value":"fn left_context() -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard leftContext property is a static and\n read-only property of regular expressions that contains the\n substring preceding the most recent match. `RegExp.$`` is an\n alias for this property.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3756},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":165672,"byte_end":165681,"line_start":3628,"line_end":3628,"column_start":12,"column_end":21},"name":"multiline","qualname":"<RegExp>::multiline","value":"fn multiline(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The multiline property indicates whether or not the \"m\" flag\n is used with the regular expression. multiline is a read-only\n property of an individual regular expression instance.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3759},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":166108,"byte_end":166110,"line_start":3636,"line_end":3636,"column_start":12,"column_end":14},"name":"n1","qualname":"<RegExp>::n1","value":"fn n1() -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard $1, $2, $3, $4, $5, $6, $7, $8, $9 properties\n are static and read-only properties of regular expressions\n that contain parenthesized substring matches.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3762},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":166208,"byte_end":166210,"line_start":3638,"line_end":3638,"column_start":12,"column_end":14},"name":"n2","qualname":"<RegExp>::n2","value":"fn n2() -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3765},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":166308,"byte_end":166310,"line_start":3640,"line_end":3640,"column_start":12,"column_end":14},"name":"n3","qualname":"<RegExp>::n3","value":"fn n3() -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3768},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":166408,"byte_end":166410,"line_start":3642,"line_end":3642,"column_start":12,"column_end":14},"name":"n4","qualname":"<RegExp>::n4","value":"fn n4() -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3771},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":166508,"byte_end":166510,"line_start":3644,"line_end":3644,"column_start":12,"column_end":14},"name":"n5","qualname":"<RegExp>::n5","value":"fn n5() -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3774},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":166608,"byte_end":166610,"line_start":3646,"line_end":3646,"column_start":12,"column_end":14},"name":"n6","qualname":"<RegExp>::n6","value":"fn n6() -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3777},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":166708,"byte_end":166710,"line_start":3648,"line_end":3648,"column_start":12,"column_end":14},"name":"n7","qualname":"<RegExp>::n7","value":"fn n7() -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3780},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":166808,"byte_end":166810,"line_start":3650,"line_end":3650,"column_start":12,"column_end":14},"name":"n8","qualname":"<RegExp>::n8","value":"fn n8() -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3783},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":166908,"byte_end":166910,"line_start":3652,"line_end":3652,"column_start":12,"column_end":14},"name":"n9","qualname":"<RegExp>::n9","value":"fn n9() -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3786},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":167199,"byte_end":167202,"line_start":3658,"line_end":3658,"column_start":12,"column_end":15},"name":"new","qualname":"<RegExp>::new","value":"fn new(&str, &str) -> RegExp","parent":null,"children":[],"decl_id":null,"docs":" The `RegExp` constructor creates a regular expression object for matching text with a pattern.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3789},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":167286,"byte_end":167296,"line_start":3660,"line_end":3660,"column_start":12,"column_end":22},"name":"new_regexp","qualname":"<RegExp>::new_regexp","value":"fn new_regexp(&RegExp, &str) -> RegExp","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3792},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":167801,"byte_end":167814,"line_start":3669,"line_end":3669,"column_start":12,"column_end":25},"name":"right_context","qualname":"<RegExp>::right_context","value":"fn right_context() -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard rightContext property is a static and\n read-only property of regular expressions that contains the\n substring following the most recent match. `RegExp.$'` is an\n alias for this property.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3795},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":168196,"byte_end":168202,"line_start":3677,"line_end":3677,"column_start":12,"column_end":18},"name":"source","qualname":"<RegExp>::source","value":"fn source(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The source property returns a String containing the source\n text of the regexp object, and it doesn't contain the two\n forward slashes on both sides and any flags.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3798},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":168697,"byte_end":168703,"line_start":3687,"line_end":3687,"column_start":12,"column_end":18},"name":"sticky","qualname":"<RegExp>::sticky","value":"fn sticky(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The sticky property reflects whether or not the search is\n sticky (searches in strings only from the index indicated by\n the lastIndex property of this regular expression). sticky is\n a read-only property of an individual regular expression\n object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3801},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":169048,"byte_end":169052,"line_start":3695,"line_end":3695,"column_start":12,"column_end":16},"name":"test","qualname":"<RegExp>::test","value":"fn test(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `test()` method executes a search for a match between a\n regular expression and a specified string. Returns true or\n false.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3804},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":169377,"byte_end":169386,"line_start":3702,"line_end":3702,"column_start":12,"column_end":21},"name":"to_string","qualname":"<RegExp>::to_string","value":"fn to_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the\n regular expression.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3807},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":169792,"byte_end":169799,"line_start":3710,"line_end":3710,"column_start":12,"column_end":19},"name":"unicode","qualname":"<RegExp>::unicode","value":"fn unicode(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The unicode property indicates whether or not the \"u\" flag is\n used with a regular expression. unicode is a read-only\n property of an individual regular expression instance.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":160943,"byte_end":160958,"line_start":3537,"line_end":3537,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3928},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":169987,"byte_end":169990,"line_start":3718,"line_end":3718,"column_start":14,"column_end":17},"name":"Set","qualname":"::Set","value":"Set {  }","parent":null,"children":[{"krate":0,"index":3929}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":169834,"byte_end":169849,"line_start":3714,"line_end":3714,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":169834,"byte_end":169849,"line_start":3714,"line_end":3714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3908},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":170270,"byte_end":170273,"line_start":3725,"line_end":3725,"column_start":12,"column_end":15},"name":"add","qualname":"<Set>::add","value":"fn add(&Self, &JsValue) -> Set","parent":null,"children":[],"decl_id":null,"docs":" The `add()` method appends a new element with a specified value to the\n end of a [`Set`] object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":169834,"byte_end":169849,"line_start":3714,"line_end":3714,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":169834,"byte_end":169849,"line_start":3714,"line_end":3714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3911},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":170552,"byte_end":170557,"line_start":3731,"line_end":3731,"column_start":12,"column_end":17},"name":"clear","qualname":"<Set>::clear","value":"fn clear(&Self)","parent":null,"children":[],"decl_id":null,"docs":" The `clear()` method removes all elements from a [`Set`] object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":169834,"byte_end":169849,"line_start":3714,"line_end":3714,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":169834,"byte_end":169849,"line_start":3714,"line_end":3714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3914},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":170831,"byte_end":170837,"line_start":3738,"line_end":3738,"column_start":12,"column_end":18},"name":"delete","qualname":"<Set>::delete","value":"fn delete(&Self, &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `delete()` method removes the specified element from a [`Set`]\n object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":169834,"byte_end":169849,"line_start":3714,"line_end":3714,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":169834,"byte_end":169849,"line_start":3714,"line_end":3714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3917},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":171192,"byte_end":171200,"line_start":3745,"line_end":3745,"column_start":12,"column_end":20},"name":"for_each","qualname":"<Set>::for_each","value":"fn for_each(&Self, &mut dyn FnMut(JsValue, JsValue, Set) -> ())","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once for each value\n in the Set object, in insertion order.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":169834,"byte_end":169849,"line_start":3714,"line_end":3714,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":169834,"byte_end":169849,"line_start":3714,"line_end":3714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3920},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":171572,"byte_end":171575,"line_start":3752,"line_end":3752,"column_start":12,"column_end":15},"name":"has","qualname":"<Set>::has","value":"fn has(&Self, &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `has()` method returns a boolean indicating whether an element with\n the specified value exists in a [`Set`] object or not.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":169834,"byte_end":169849,"line_start":3714,"line_end":3714,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":169834,"byte_end":169849,"line_start":3714,"line_end":3714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3923},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":171905,"byte_end":171908,"line_start":3759,"line_end":3759,"column_start":12,"column_end":15},"name":"new","qualname":"<Set>::new","value":"fn new(&JsValue) -> Set","parent":null,"children":[],"decl_id":null,"docs":" The [`Set`] object lets you store unique values of any type, whether\n primitive values or object references.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":169834,"byte_end":169849,"line_start":3714,"line_end":3714,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":169834,"byte_end":169849,"line_start":3714,"line_end":3714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3926},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":172212,"byte_end":172216,"line_start":3766,"line_end":3766,"column_start":12,"column_end":16},"name":"size","qualname":"<Set>::size","value":"fn size(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The size accessor property returns the number of elements in a [`Set`]\n object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":169834,"byte_end":169849,"line_start":3714,"line_end":3714,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":169834,"byte_end":169849,"line_start":3714,"line_end":3714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":172270,"byte_end":172277,"line_start":3770,"line_end":3770,"column_start":8,"column_end":15},"name":"default","qualname":"<Set as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3942},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":172949,"byte_end":172956,"line_start":3786,"line_end":3786,"column_start":12,"column_end":19},"name":"entries","qualname":"<Set>::entries","value":"fn entries(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `entries()` method returns a new Iterator object that contains an\n array of [value, value] for each element in the Set object, in insertion\n order. For Set objects there is no key like in Map objects. However, to\n keep the API similar to the Map object, each entry has the same value\n for its key and value here, so that an array [value, value] is returned.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":172353,"byte_end":172368,"line_start":3776,"line_end":3776,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":172353,"byte_end":172368,"line_start":3776,"line_end":3776,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3945},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":173321,"byte_end":173325,"line_start":3794,"line_end":3794,"column_start":12,"column_end":16},"name":"keys","qualname":"<Set>::keys","value":"fn keys(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `keys()` method is an alias for this method (for similarity with\n Map objects); it behaves exactly the same and returns values\n of Set elements.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":172353,"byte_end":172368,"line_start":3776,"line_end":3776,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":172353,"byte_end":172368,"line_start":3776,"line_end":3776,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3948},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":173667,"byte_end":173673,"line_start":3801,"line_end":3801,"column_start":12,"column_end":18},"name":"values","qualname":"<Set>::values","value":"fn values(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `values()` method returns a new Iterator object that contains the\n values for each element in the Set object in insertion order.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":172353,"byte_end":172368,"line_start":3776,"line_end":3776,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":172353,"byte_end":172368,"line_start":3776,"line_end":3776,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":4048},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":174200,"byte_end":174211,"line_start":3814,"line_end":3814,"column_start":14,"column_end":25},"name":"SyntaxError","qualname":"::SyntaxError","value":"SyntaxError {  }","parent":null,"children":[{"krate":0,"index":4049}],"decl_id":null,"docs":" A `SyntaxError` is thrown when the JavaScript engine encounters tokens or\n token order that does not conform to the syntax of the language when\n parsing code.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":173716,"byte_end":173731,"line_start":3805,"line_end":3805,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":173716,"byte_end":173731,"line_start":3805,"line_end":3805,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4046},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":174569,"byte_end":174572,"line_start":3822,"line_end":3822,"column_start":12,"column_end":15},"name":"new","qualname":"<SyntaxError>::new","value":"fn new(&str) -> SyntaxError","parent":null,"children":[],"decl_id":null,"docs":" A `SyntaxError` is thrown when the JavaScript engine encounters tokens or\n token order that does not conform to the syntax of the language when\n parsing code.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":173716,"byte_end":173731,"line_start":3805,"line_end":3805,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":173716,"byte_end":173731,"line_start":3805,"line_end":3805,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":4159},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":175020,"byte_end":175029,"line_start":3834,"line_end":3834,"column_start":14,"column_end":23},"name":"TypeError","qualname":"::TypeError","value":"TypeError {  }","parent":null,"children":[{"krate":0,"index":4160}],"decl_id":null,"docs":" The `TypeError` object represents an error when a value is not of the\n expected type.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":174620,"byte_end":174635,"line_start":3826,"line_end":3826,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":174620,"byte_end":174635,"line_start":3826,"line_end":3826,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4157},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":175305,"byte_end":175308,"line_start":3841,"line_end":3841,"column_start":12,"column_end":15},"name":"new","qualname":"<TypeError>::new","value":"fn new(&str) -> TypeError","parent":null,"children":[],"decl_id":null,"docs":" The `TypeError` object represents an error when a value is not of the\n expected type.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":174620,"byte_end":174635,"line_start":3826,"line_end":3826,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":174620,"byte_end":174635,"line_start":3826,"line_end":3826,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":4270},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":175789,"byte_end":175797,"line_start":3853,"line_end":3853,"column_start":14,"column_end":22},"name":"UriError","qualname":"::UriError","value":"UriError {  }","parent":null,"children":[{"krate":0,"index":4271}],"decl_id":null,"docs":" The `URIError` object represents an error when a global URI handling\n function was used in a wrong way.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":175353,"byte_end":175368,"line_start":3845,"line_end":3845,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":175353,"byte_end":175368,"line_start":3845,"line_end":3845,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4268},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":176113,"byte_end":176116,"line_start":3860,"line_end":3860,"column_start":12,"column_end":15},"name":"new","qualname":"<UriError>::new","value":"fn new(&str) -> UriError","parent":null,"children":[],"decl_id":null,"docs":" The `URIError` object represents an error when a global URI handling\n function was used in a wrong way.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":175353,"byte_end":175368,"line_start":3845,"line_end":3845,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":175353,"byte_end":175368,"line_start":3845,"line_end":3845,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":4383},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":176324,"byte_end":176331,"line_start":3868,"line_end":3868,"column_start":14,"column_end":21},"name":"WeakMap","qualname":"::WeakMap","value":"WeakMap {  }","parent":null,"children":[{"krate":0,"index":4384}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":176159,"byte_end":176174,"line_start":3864,"line_end":3864,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":176159,"byte_end":176174,"line_start":3864,"line_end":3864,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4369},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":176693,"byte_end":176696,"line_start":3876,"line_end":3876,"column_start":12,"column_end":15},"name":"new","qualname":"<WeakMap>::new","value":"fn new() -> WeakMap","parent":null,"children":[],"decl_id":null,"docs":" The [`WeakMap`] object is a collection of key/value pairs in which the\n keys are weakly referenced.  The keys must be objects and the values can\n be arbitrary values.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":176159,"byte_end":176174,"line_start":3864,"line_end":3864,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":176159,"byte_end":176174,"line_start":3864,"line_end":3864,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4372},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":177024,"byte_end":177027,"line_start":3883,"line_end":3883,"column_start":12,"column_end":15},"name":"set","qualname":"<WeakMap>::set","value":"fn set(&Self, &Object, &JsValue) -> WeakMap","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method sets the value for the key in the [`WeakMap`] object.\n Returns the [`WeakMap`] object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":176159,"byte_end":176174,"line_start":3864,"line_end":3864,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":176159,"byte_end":176174,"line_start":3864,"line_end":3864,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4375},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":177354,"byte_end":177357,"line_start":3890,"line_end":3890,"column_start":12,"column_end":15},"name":"get","qualname":"<WeakMap>::get","value":"fn get(&Self, &Object) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `get()` method returns a specified by key element\n from a [`WeakMap`] object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":176159,"byte_end":176174,"line_start":3864,"line_end":3864,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":176159,"byte_end":176174,"line_start":3864,"line_end":3864,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4378},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":177717,"byte_end":177720,"line_start":3897,"line_end":3897,"column_start":12,"column_end":15},"name":"has","qualname":"<WeakMap>::has","value":"fn has(&Self, &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `has()` method returns a boolean indicating whether an element with\n the specified key exists in the [`WeakMap`] object or not.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":176159,"byte_end":176174,"line_start":3864,"line_end":3864,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":176159,"byte_end":176174,"line_start":3864,"line_end":3864,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4381},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":178028,"byte_end":178034,"line_start":3904,"line_end":3904,"column_start":12,"column_end":18},"name":"delete","qualname":"<WeakMap>::delete","value":"fn delete(&Self, &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `delete()` method removes the specified element from a [`WeakMap`]\n object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":176159,"byte_end":176174,"line_start":3864,"line_end":3864,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":176159,"byte_end":176174,"line_start":3864,"line_end":3864,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":178111,"byte_end":178118,"line_start":3908,"line_end":3908,"column_start":8,"column_end":15},"name":"default","qualname":"<WeakMap as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4493},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":178331,"byte_end":178338,"line_start":3918,"line_end":3918,"column_start":14,"column_end":21},"name":"WeakSet","qualname":"::WeakSet","value":"WeakSet {  }","parent":null,"children":[{"krate":0,"index":4494}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":178171,"byte_end":178186,"line_start":3914,"line_end":3914,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":178171,"byte_end":178186,"line_start":3914,"line_end":3914,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4482},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":178592,"byte_end":178595,"line_start":3924,"line_end":3924,"column_start":12,"column_end":15},"name":"new","qualname":"<WeakSet>::new","value":"fn new() -> WeakSet","parent":null,"children":[],"decl_id":null,"docs":" The `WeakSet` object lets you store weakly held objects in a collection.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":178171,"byte_end":178186,"line_start":3914,"line_end":3914,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":178171,"byte_end":178186,"line_start":3914,"line_end":3914,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4485},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":178890,"byte_end":178893,"line_start":3931,"line_end":3931,"column_start":12,"column_end":15},"name":"has","qualname":"<WeakSet>::has","value":"fn has(&Self, &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `has()` method returns a boolean indicating whether an object exists\n in a WeakSet or not.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":178171,"byte_end":178186,"line_start":3914,"line_end":3914,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":178171,"byte_end":178186,"line_start":3914,"line_end":3914,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4488},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":179185,"byte_end":179188,"line_start":3937,"line_end":3937,"column_start":12,"column_end":15},"name":"add","qualname":"<WeakSet>::add","value":"fn add(&Self, &Object) -> WeakSet","parent":null,"children":[],"decl_id":null,"docs":" The `add()` method appends a new object to the end of a WeakSet object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":178171,"byte_end":178186,"line_start":3914,"line_end":3914,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":178171,"byte_end":178186,"line_start":3914,"line_end":3914,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4491},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":179497,"byte_end":179503,"line_start":3944,"line_end":3944,"column_start":12,"column_end":18},"name":"delete","qualname":"<WeakSet>::delete","value":"fn delete(&Self, &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `delete()` method removes the specified element from a WeakSet\n object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":178171,"byte_end":178186,"line_start":3914,"line_end":3914,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":178171,"byte_end":178186,"line_start":3914,"line_end":3914,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":179582,"byte_end":179589,"line_start":3948,"line_end":3948,"column_start":8,"column_end":15},"name":"default","qualname":"<WeakSet as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":248},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":179737,"byte_end":179748,"line_start":3958,"line_end":3958,"column_start":9,"column_end":20},"name":"WebAssembly","qualname":"::WebAssembly","value":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":4506},{"krate":0,"index":4508},{"krate":0,"index":4510},{"krate":0,"index":4512},{"krate":0,"index":4514},{"krate":0,"index":4516},{"krate":0,"index":4606},{"krate":0,"index":4608},{"krate":0,"index":4610},{"krate":0,"index":4612},{"krate":0,"index":4613},{"krate":0,"index":4616},{"krate":0,"index":4617},{"krate":0,"index":4518},{"krate":0,"index":4590},{"krate":0,"index":4593},{"krate":0,"index":4598},{"krate":0,"index":4603},{"krate":0,"index":4710},{"krate":0,"index":4712},{"krate":0,"index":4714},{"krate":0,"index":4716},{"krate":0,"index":4717},{"krate":0,"index":4720},{"krate":0,"index":4721},{"krate":0,"index":4619},{"krate":0,"index":4691},{"krate":0,"index":4694},{"krate":0,"index":4699},{"krate":0,"index":4704},{"krate":0,"index":4707},{"krate":0,"index":4811},{"krate":0,"index":4813},{"krate":0,"index":4815},{"krate":0,"index":4817},{"krate":0,"index":4818},{"krate":0,"index":4821},{"krate":0,"index":4822},{"krate":0,"index":4723},{"krate":0,"index":4795},{"krate":0,"index":4798},{"krate":0,"index":4803},{"krate":0,"index":4808},{"krate":0,"index":4912},{"krate":0,"index":4914},{"krate":0,"index":4916},{"krate":0,"index":4918},{"krate":0,"index":4919},{"krate":0,"index":4922},{"krate":0,"index":4923},{"krate":0,"index":4824},{"krate":0,"index":4896},{"krate":0,"index":4899},{"krate":0,"index":4904},{"krate":0,"index":4909},{"krate":0,"index":5022},{"krate":0,"index":5024},{"krate":0,"index":5026},{"krate":0,"index":5028},{"krate":0,"index":5029},{"krate":0,"index":5032},{"krate":0,"index":5033},{"krate":0,"index":4925},{"krate":0,"index":4997},{"krate":0,"index":5000},{"krate":0,"index":5005},{"krate":0,"index":5010},{"krate":0,"index":5013},{"krate":0,"index":5016},{"krate":0,"index":5019},{"krate":0,"index":5135},{"krate":0,"index":5137},{"krate":0,"index":5139},{"krate":0,"index":5141},{"krate":0,"index":5142},{"krate":0,"index":5145},{"krate":0,"index":5146},{"krate":0,"index":5035},{"krate":0,"index":5107},{"krate":0,"index":5110},{"krate":0,"index":5115},{"krate":0,"index":5120},{"krate":0,"index":5123},{"krate":0,"index":5126},{"krate":0,"index":5129},{"krate":0,"index":5132},{"krate":0,"index":5242},{"krate":0,"index":5244},{"krate":0,"index":5246},{"krate":0,"index":5248},{"krate":0,"index":5249},{"krate":0,"index":5252},{"krate":0,"index":5253},{"krate":0,"index":5148},{"krate":0,"index":5220},{"krate":0,"index":5223},{"krate":0,"index":5228},{"krate":0,"index":5233},{"krate":0,"index":5236},{"krate":0,"index":5239},{"krate":0,"index":5349},{"krate":0,"index":5351},{"krate":0,"index":5353},{"krate":0,"index":5355},{"krate":0,"index":5356},{"krate":0,"index":5359},{"krate":0,"index":5360},{"krate":0,"index":5255},{"krate":0,"index":5327},{"krate":0,"index":5330},{"krate":0,"index":5335},{"krate":0,"index":5340},{"krate":0,"index":5343},{"krate":0,"index":5346}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":179704,"byte_end":179728,"line_start":3957,"line_end":3957,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":4506},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":180352,"byte_end":180359,"line_start":3971,"line_end":3971,"column_start":16,"column_end":23},"name":"compile","qualname":"::WebAssembly::compile","value":"fn compile(&JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.compile()` function compiles a `WebAssembly.Module`\n from WebAssembly binary code.  This function is useful if it is\n necessary to a compile a module before it can be instantiated\n (otherwise, the `WebAssembly.instantiate()` function should be used).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":179793,"byte_end":179808,"line_start":3962,"line_end":3962,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":179793,"byte_end":179808,"line_start":3962,"line_end":3962,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4508},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":181011,"byte_end":181028,"line_start":3981,"line_end":3981,"column_start":16,"column_end":33},"name":"compile_streaming","qualname":"::WebAssembly::compile_streaming","value":"fn compile_streaming(&Promise) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.compileStreaming()` function compiles a\n `WebAssembly.Module` module directly from a streamed underlying\n source. This function is useful if it is necessary to a compile a\n module before it can be instantiated (otherwise, the\n `WebAssembly.instantiateStreaming()` function should be used).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":179793,"byte_end":179808,"line_start":3962,"line_end":3962,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":179793,"byte_end":179808,"line_start":3962,"line_end":3962,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4510},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":181423,"byte_end":181441,"line_start":3988,"line_end":3988,"column_start":16,"column_end":34},"name":"instantiate_buffer","qualname":"::WebAssembly::instantiate_buffer","value":"fn instantiate_buffer(&[u8], &Object) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.instantiate()` function allows you to compile and\n instantiate WebAssembly code.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":179793,"byte_end":179808,"line_start":3962,"line_end":3962,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":179793,"byte_end":179808,"line_start":3962,"line_end":3962,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4512},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":181849,"byte_end":181867,"line_start":3995,"line_end":3995,"column_start":16,"column_end":34},"name":"instantiate_module","qualname":"::WebAssembly::instantiate_module","value":"fn instantiate_module(&Module, &Object) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.instantiate()` function allows you to compile and\n instantiate WebAssembly code.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":179793,"byte_end":179808,"line_start":3962,"line_end":3962,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":179793,"byte_end":179808,"line_start":3962,"line_end":3962,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4514},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":182424,"byte_end":182445,"line_start":4004,"line_end":4004,"column_start":16,"column_end":37},"name":"instantiate_streaming","qualname":"::WebAssembly::instantiate_streaming","value":"fn instantiate_streaming(&Promise, &Object) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.instantiateStreaming()` function compiles and\n instantiates a WebAssembly module directly from a streamed\n underlying source. This is the most efficient, optimized way to load\n wasm code.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":179793,"byte_end":179808,"line_start":3962,"line_end":3962,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":179793,"byte_end":179808,"line_start":3962,"line_end":3962,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4516},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":182930,"byte_end":182938,"line_start":4012,"line_end":4012,"column_start":16,"column_end":24},"name":"validate","qualname":"::WebAssembly::validate","value":"fn validate(&JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.validate()` function validates a given typed\n array of WebAssembly binary code, returning whether the bytes\n form a valid wasm module (`true`) or not (`false`).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":179793,"byte_end":179808,"line_start":3962,"line_end":3962,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":179793,"byte_end":179808,"line_start":3962,"line_end":3962,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4606},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":183594,"byte_end":183606,"line_start":4025,"line_end":4025,"column_start":18,"column_end":30},"name":"CompileError","qualname":"::WebAssembly::CompileError","value":"CompileError {  }","parent":null,"children":[{"krate":0,"index":4607}],"decl_id":null,"docs":" The `WebAssembly.CompileError()` constructor creates a new\n WebAssembly `CompileError` object, which indicates an error during\n WebAssembly decoding or validation.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":183033,"byte_end":183048,"line_start":4016,"line_end":4016,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":183033,"byte_end":183048,"line_start":4016,"line_end":4016,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4604},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":184038,"byte_end":184041,"line_start":4033,"line_end":4033,"column_start":16,"column_end":19},"name":"new","qualname":"<CompileError>::new","value":"fn new(&str) -> CompileError","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.CompileError()` constructor creates a new\n WebAssembly `CompileError` object, which indicates an error during\n WebAssembly decoding or validation.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":183033,"byte_end":183048,"line_start":4016,"line_end":4016,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":183033,"byte_end":183048,"line_start":4016,"line_end":4016,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4710},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":184733,"byte_end":184741,"line_start":4047,"line_end":4047,"column_start":18,"column_end":26},"name":"Instance","qualname":"::WebAssembly::Instance","value":"Instance {  }","parent":null,"children":[{"krate":0,"index":4711}],"decl_id":null,"docs":" A `WebAssembly.Instance` object is a stateful, executable instance\n of a `WebAssembly.Module`. Instance objects contain all the exported\n WebAssembly functions that allow calling into WebAssembly code from\n JavaScript.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":184113,"byte_end":184128,"line_start":4037,"line_end":4037,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":184113,"byte_end":184128,"line_start":4037,"line_end":4037,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4705},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":185277,"byte_end":185280,"line_start":4056,"line_end":4056,"column_start":16,"column_end":19},"name":"new","qualname":"<Instance>::new","value":"fn new(&Module, &Object) -> Result<Instance, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.Instance()` constructor function can be called to\n synchronously instantiate a given `WebAssembly.Module`\n object. However, the primary way to get an `Instance` is through the\n asynchronous `WebAssembly.instantiateStreaming()` function.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":184113,"byte_end":184128,"line_start":4037,"line_end":4037,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":184113,"byte_end":184128,"line_start":4037,"line_end":4037,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4708},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":185874,"byte_end":185881,"line_start":4065,"line_end":4065,"column_start":16,"column_end":23},"name":"exports","qualname":"<Instance>::exports","value":"fn exports(&Self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `exports` readonly property of the `WebAssembly.Instance` object\n prototype returns an object containing as its members all the\n functions exported from the WebAssembly module instance, to allow\n them to be accessed and used by JavaScript.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":184113,"byte_end":184128,"line_start":4037,"line_end":4037,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":184113,"byte_end":184128,"line_start":4037,"line_end":4037,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4811},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":186523,"byte_end":186532,"line_start":4078,"line_end":4078,"column_start":18,"column_end":27},"name":"LinkError","qualname":"::WebAssembly::LinkError","value":"LinkError {  }","parent":null,"children":[{"krate":0,"index":4812}],"decl_id":null,"docs":" The `WebAssembly.LinkError()` constructor creates a new WebAssembly\n LinkError object, which indicates an error during module\n instantiation (besides traps from the start function).","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":185950,"byte_end":185965,"line_start":4069,"line_end":4069,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":185950,"byte_end":185965,"line_start":4069,"line_end":4069,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4809},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":186979,"byte_end":186982,"line_start":4086,"line_end":4086,"column_start":16,"column_end":19},"name":"new","qualname":"<LinkError>::new","value":"fn new(&str) -> LinkError","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.LinkError()` constructor creates a new WebAssembly\n LinkError object, which indicates an error during module\n instantiation (besides traps from the start function).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":185950,"byte_end":185965,"line_start":4069,"line_end":4069,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":185950,"byte_end":185965,"line_start":4069,"line_end":4069,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4912},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":187614,"byte_end":187626,"line_start":4099,"line_end":4099,"column_start":18,"column_end":30},"name":"RuntimeError","qualname":"::WebAssembly::RuntimeError","value":"RuntimeError {  }","parent":null,"children":[{"krate":0,"index":4913}],"decl_id":null,"docs":" The `WebAssembly.RuntimeError()` constructor creates a new WebAssembly\n `RuntimeError` object — the type that is thrown whenever WebAssembly\n specifies a trap.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":187055,"byte_end":187070,"line_start":4090,"line_end":4090,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":187055,"byte_end":187070,"line_start":4090,"line_end":4090,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4910},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":188056,"byte_end":188059,"line_start":4107,"line_end":4107,"column_start":16,"column_end":19},"name":"new","qualname":"<RuntimeError>::new","value":"fn new(&str) -> RuntimeError","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.RuntimeError()` constructor creates a new WebAssembly\n `RuntimeError` object — the type that is thrown whenever WebAssembly\n specifies a trap.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":187055,"byte_end":187070,"line_start":4090,"line_end":4090,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":187055,"byte_end":187070,"line_start":4090,"line_end":4090,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5022},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":188706,"byte_end":188712,"line_start":4120,"line_end":4120,"column_start":18,"column_end":24},"name":"Module","qualname":"::WebAssembly::Module","value":"Module {  }","parent":null,"children":[{"krate":0,"index":5023}],"decl_id":null,"docs":" A `WebAssembly.Module` object contains stateless WebAssembly code\n that has already been compiled by the browser and can be\n efficiently shared with Workers, and instantiated multiple times.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":188129,"byte_end":188144,"line_start":4111,"line_end":4111,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":188129,"byte_end":188144,"line_start":4111,"line_end":4111,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5011},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":189172,"byte_end":189175,"line_start":4128,"line_end":4128,"column_start":16,"column_end":19},"name":"new","qualname":"<Module>::new","value":"fn new(&JsValue) -> Result<Module, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" A `WebAssembly.Module` object contains stateless WebAssembly code\n that has already been compiled by the browser and can be\n efficiently shared with Workers, and instantiated multiple times.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":188129,"byte_end":188144,"line_start":4111,"line_end":4111,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":188129,"byte_end":188144,"line_start":4111,"line_end":4111,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5014},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":189692,"byte_end":189707,"line_start":4136,"line_end":4136,"column_start":16,"column_end":31},"name":"custom_sections","qualname":"<Module>::custom_sections","value":"fn custom_sections(&Module, &str) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.customSections()` function returns a copy of the\n contents of all custom sections in the given module with the given\n string name.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":188129,"byte_end":188144,"line_start":4111,"line_end":4111,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":188129,"byte_end":188144,"line_start":4111,"line_end":4111,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5017},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":190155,"byte_end":190162,"line_start":4143,"line_end":4143,"column_start":16,"column_end":23},"name":"exports","qualname":"<Module>::exports","value":"fn exports(&Module) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.exports()` function returns an array containing\n descriptions of all the declared exports of the given `Module`.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":188129,"byte_end":188144,"line_start":4111,"line_end":4111,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":188129,"byte_end":188144,"line_start":4111,"line_end":4111,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5020},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":190591,"byte_end":190598,"line_start":4150,"line_end":4150,"column_start":16,"column_end":23},"name":"imports","qualname":"<Module>::imports","value":"fn imports(&Module) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.imports()` function returns an array containing\n descriptions of all the declared imports of the given `Module`.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":188129,"byte_end":188144,"line_start":4111,"line_end":4111,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":188129,"byte_end":188144,"line_start":4111,"line_end":4111,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5135},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":191139,"byte_end":191144,"line_start":4162,"line_end":4162,"column_start":18,"column_end":23},"name":"Table","qualname":"::WebAssembly::Table","value":"Table {  }","parent":null,"children":[{"krate":0,"index":5136}],"decl_id":null,"docs":" The `WebAssembly.Table()` constructor creates a new `Table` object\n of the given size and element type.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":190662,"byte_end":190677,"line_start":4154,"line_end":4154,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":190662,"byte_end":190677,"line_start":4154,"line_end":4154,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5121},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":191505,"byte_end":191508,"line_start":4169,"line_end":4169,"column_start":16,"column_end":19},"name":"new","qualname":"<Table>::new","value":"fn new(&Object) -> Result<Table, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.Table()` constructor creates a new `Table` object\n of the given size and element type.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":190662,"byte_end":190677,"line_start":4154,"line_end":4154,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":190662,"byte_end":190677,"line_start":4154,"line_end":4154,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5124},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":191973,"byte_end":191979,"line_start":4177,"line_end":4177,"column_start":16,"column_end":22},"name":"length","qualname":"<Table>::length","value":"fn length(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The length prototype property of the `WebAssembly.Table` object\n returns the length of the table, i.e. the number of elements in the\n table.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":190662,"byte_end":190677,"line_start":4154,"line_end":4154,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":190662,"byte_end":190677,"line_start":4154,"line_end":4154,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5127},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":192378,"byte_end":192381,"line_start":4184,"line_end":4184,"column_start":16,"column_end":19},"name":"get","qualname":"<Table>::get","value":"fn get(&Self, u32) -> Result<Function, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `get()` prototype method of the `WebAssembly.Table()` object\n retrieves a function reference stored at a given index.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":190662,"byte_end":190677,"line_start":4154,"line_end":4154,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":190662,"byte_end":190677,"line_start":4154,"line_end":4154,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5130},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":192848,"byte_end":192852,"line_start":4192,"line_end":4192,"column_start":16,"column_end":20},"name":"grow","qualname":"<Table>::grow","value":"fn grow(&Self, u32) -> Result<u32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `grow()` prototype method of the `WebAssembly.Table` object\n increases the size of the `Table` instance by a specified number of\n elements.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":190662,"byte_end":190677,"line_start":4154,"line_end":4154,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":190662,"byte_end":190677,"line_start":4154,"line_end":4154,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5133},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":193302,"byte_end":193305,"line_start":4199,"line_end":4199,"column_start":16,"column_end":19},"name":"set","qualname":"<Table>::set","value":"fn set(&Self, u32, &Function) -> Result<(), JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `set()` prototype method of the `WebAssembly.Table` object mutates a\n reference stored at a given index to a different value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":190662,"byte_end":190677,"line_start":4154,"line_end":4154,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":190662,"byte_end":190677,"line_start":4154,"line_end":4154,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5242},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":193888,"byte_end":193894,"line_start":4211,"line_end":4211,"column_start":18,"column_end":24},"name":"Global","qualname":"::WebAssembly::Global","value":"Global {  }","parent":null,"children":[{"krate":0,"index":5243}],"decl_id":null,"docs":" The `WebAssembly.Global()` constructor creates a new `Global` object\n of the given type and value.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":193414,"byte_end":193429,"line_start":4203,"line_end":4203,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":193414,"byte_end":193429,"line_start":4203,"line_end":4203,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5234},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":194251,"byte_end":194254,"line_start":4218,"line_end":4218,"column_start":16,"column_end":19},"name":"new","qualname":"<Global>::new","value":"fn new(&Object, &JsValue) -> Result<Global, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.Global()` constructor creates a new `Global` object\n of the given type and value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":193414,"byte_end":193429,"line_start":4203,"line_end":4203,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":193414,"byte_end":193429,"line_start":4203,"line_end":4203,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5237},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":194690,"byte_end":194695,"line_start":4225,"line_end":4225,"column_start":16,"column_end":21},"name":"value","qualname":"<Global>::value","value":"fn value(&Self) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The value prototype property of the `WebAssembly.Global` object\n returns the value of the global.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":193414,"byte_end":193429,"line_start":4203,"line_end":4203,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":193414,"byte_end":193429,"line_start":4203,"line_end":4203,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5240},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":194826,"byte_end":194835,"line_start":4227,"line_end":4227,"column_start":16,"column_end":25},"name":"set_value","qualname":"<Global>::set_value","value":"fn set_value(&Self, &JsValue)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":193414,"byte_end":193429,"line_start":4203,"line_end":4203,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":193414,"byte_end":193429,"line_start":4203,"line_end":4203,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5349},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":195246,"byte_end":195252,"line_start":4236,"line_end":4236,"column_start":18,"column_end":24},"name":"Memory","qualname":"::WebAssembly::Memory","value":"Memory {  }","parent":null,"children":[{"krate":0,"index":5350}],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Memory)","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":194906,"byte_end":194921,"line_start":4231,"line_end":4231,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":194906,"byte_end":194921,"line_start":4231,"line_end":4231,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5341},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":195859,"byte_end":195862,"line_start":4247,"line_end":4247,"column_start":16,"column_end":19},"name":"new","qualname":"<Memory>::new","value":"fn new(&Object) -> Result<Memory, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.Memory()` constructor creates a new `Memory` object\n which is a resizable `ArrayBuffer` that holds the raw bytes of\n memory accessed by a WebAssembly `Instance`.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":194906,"byte_end":194921,"line_start":4231,"line_end":4231,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":194906,"byte_end":194921,"line_start":4231,"line_end":4231,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5344},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":196242,"byte_end":196248,"line_start":4254,"line_end":4254,"column_start":16,"column_end":22},"name":"buffer","qualname":"<Memory>::buffer","value":"fn buffer(&Self) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" An accessor property that returns the buffer contained in the\n memory.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":194906,"byte_end":194921,"line_start":4231,"line_end":4231,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":194906,"byte_end":194921,"line_start":4231,"line_end":4231,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5347},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":196813,"byte_end":196817,"line_start":4265,"line_end":4265,"column_start":16,"column_end":20},"name":"grow","qualname":"<Memory>::grow","value":"fn grow(&Self, u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `grow()` protoype method of the `Memory` object increases the\n size of the memory instance by a specified number of WebAssembly\n pages.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":194906,"byte_end":194921,"line_start":4231,"line_end":4231,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":194906,"byte_end":194921,"line_start":4231,"line_end":4231,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":250},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":197169,"byte_end":197173,"line_start":4274,"line_end":4274,"column_start":9,"column_end":13},"name":"JSON","qualname":"::JSON","value":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":5362},{"krate":0,"index":5364},{"krate":0,"index":5366},{"krate":0,"index":5368}],"decl_id":null,"docs":" The `JSON` object contains methods for parsing [JavaScript Object\n Notation (JSON)](https://json.org/) and converting values to JSON. It\n can't be called or constructed, and aside from its two method\n properties, it has no interesting functionality of its own.\n","sig":null,"attributes":[{"value":"/ The `JSON` object contains methods for parsing [JavaScript Object","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":196862,"byte_end":196931,"line_start":4269,"line_end":4269,"column_start":1,"column_end":70}},{"value":"/ Notation (JSON)](https://json.org/) and converting values to JSON. It","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":196932,"byte_end":197005,"line_start":4270,"line_end":4270,"column_start":1,"column_end":74}},{"value":"/ can't be called or constructed, and aside from its two method","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":197006,"byte_end":197071,"line_start":4271,"line_end":4271,"column_start":1,"column_end":66}},{"value":"/ properties, it has no interesting functionality of its own.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":197072,"byte_end":197135,"line_start":4272,"line_end":4272,"column_start":1,"column_end":64}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":197136,"byte_end":197160,"line_start":4273,"line_end":4273,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":5362},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":197589,"byte_end":197594,"line_start":4285,"line_end":4285,"column_start":16,"column_end":21},"name":"parse","qualname":"::JSON::parse","value":"fn parse(&str) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `JSON.parse()` method parses a JSON string, constructing the\n JavaScript value or object described by the string.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":197211,"byte_end":197226,"line_start":4278,"line_end":4278,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":197211,"byte_end":197226,"line_start":4278,"line_end":4278,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5364},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":197933,"byte_end":197942,"line_start":4291,"line_end":4291,"column_start":16,"column_end":25},"name":"stringify","qualname":"::JSON::stringify","value":"fn stringify(&JsValue) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `JSON.stringify()` method converts a JavaScript value to a JSON string.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":197211,"byte_end":197226,"line_start":4278,"line_end":4278,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":197211,"byte_end":197226,"line_start":4278,"line_end":4278,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5366},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":198745,"byte_end":198768,"line_start":4303,"line_end":4303,"column_start":16,"column_end":39},"name":"stringify_with_replacer","qualname":"::JSON::stringify_with_replacer","value":"fn stringify_with_replacer(&JsValue, &JsValue) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `JSON.stringify()` method converts a JavaScript value to a JSON string.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":197211,"byte_end":197226,"line_start":4278,"line_end":4278,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":197211,"byte_end":197226,"line_start":4278,"line_end":4278,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5368},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200285,"byte_end":200318,"line_start":4327,"line_end":4327,"column_start":16,"column_end":49},"name":"stringify_with_replacer_and_space","qualname":"::JSON::stringify_with_replacer_and_space","value":"fn stringify_with_replacer_and_space(&JsValue, &JsValue, &JsValue)\n-> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `JSON.stringify()` method converts a JavaScript value to a JSON string.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":197211,"byte_end":197226,"line_start":4278,"line_end":4278,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":197211,"byte_end":197226,"line_start":4278,"line_end":4278,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5654},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200665,"byte_end":200673,"line_start":4341,"line_end":4341,"column_start":14,"column_end":22},"name":"JsString","qualname":"::JsString","value":"JsString {  }","parent":null,"children":[{"krate":0,"index":5655}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5457},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200978,"byte_end":200984,"line_start":4348,"line_end":4348,"column_start":12,"column_end":18},"name":"length","qualname":"<JsString>::length","value":"fn length(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The length property of a String object indicates the length of a string,\n in UTF-16 code units.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5460},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":201393,"byte_end":201395,"line_start":4356,"line_end":4356,"column_start":12,"column_end":14},"name":"at","qualname":"<JsString>::at","value":"fn at(&Self, i32) -> Option<JsString>","parent":null,"children":[],"decl_id":null,"docs":" The 'at()' method returns a new string consisting of the single UTF-16\n code unit located at the specified offset into the string, counting from\n the end if it's negative.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5463},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":201831,"byte_end":201838,"line_start":4364,"line_end":4364,"column_start":12,"column_end":19},"name":"char_at","qualname":"<JsString>::char_at","value":"fn char_at(&Self, u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The String object's `charAt()` method returns a new string consisting of\n the single UTF-16 code unit located at the specified offset into the\n string.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5466},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":202665,"byte_end":202677,"line_start":4378,"line_end":4378,"column_start":12,"column_end":24},"name":"char_code_at","qualname":"<JsString>::char_code_at","value":"fn char_code_at(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `charCodeAt()` method returns an integer between 0 and 65535\n representing the UTF-16 code unit at the given index (the UTF-16 code\n unit matches the Unicode code point for code points representable in a\n single UTF-16 code unit, but might also be the first code unit of a\n surrogate pair for code points not representable in a single UTF-16 code\n unit, e.g. Unicode code points > 0x10000).  If you want the entire code\n point value, use `codePointAt()`.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5469},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":203048,"byte_end":203061,"line_start":4385,"line_end":4385,"column_start":12,"column_end":25},"name":"code_point_at","qualname":"<JsString>::code_point_at","value":"fn code_point_at(&Self, u32) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `codePointAt()` method returns a non-negative integer that is the\n Unicode code point value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5472},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":203414,"byte_end":203420,"line_start":4392,"line_end":4392,"column_start":12,"column_end":18},"name":"concat","qualname":"<JsString>::concat","value":"fn concat(&Self, &JsValue) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `concat()` method concatenates the string arguments to the calling\n string and returns a new string.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5475},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":203842,"byte_end":203851,"line_start":4399,"line_end":4399,"column_start":12,"column_end":21},"name":"ends_with","qualname":"<JsString>::ends_with","value":"fn ends_with(&Self, &str, i32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `endsWith()` method determines whether a string ends with the characters of a\n specified string, returning true or false as appropriate.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5478},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":204694,"byte_end":204708,"line_start":4415,"line_end":4415,"column_start":12,"column_end":26},"name":"from_char_code","qualname":"<JsString>::from_char_code","value":"fn from_char_code(&[u16]) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The static `String.fromCharCode()` method returns a string created from\n the specified sequence of UTF-16 code units.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5481},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":204978,"byte_end":204993,"line_start":4419,"line_end":4419,"column_start":12,"column_end":27},"name":"from_char_code1","qualname":"<JsString>::from_char_code1","value":"fn from_char_code1(u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode)\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5484},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":205251,"byte_end":205266,"line_start":4423,"line_end":4423,"column_start":12,"column_end":27},"name":"from_char_code2","qualname":"<JsString>::from_char_code2","value":"fn from_char_code2(u32, u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode)\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5487},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":205532,"byte_end":205547,"line_start":4427,"line_end":4427,"column_start":12,"column_end":27},"name":"from_char_code3","qualname":"<JsString>::from_char_code3","value":"fn from_char_code3(u32, u32, u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode)\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5490},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":205821,"byte_end":205836,"line_start":4431,"line_end":4431,"column_start":12,"column_end":27},"name":"from_char_code4","qualname":"<JsString>::from_char_code4","value":"fn from_char_code4(u32, u32, u32, u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode)\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5493},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":206118,"byte_end":206133,"line_start":4435,"line_end":4435,"column_start":12,"column_end":27},"name":"from_char_code5","qualname":"<JsString>::from_char_code5","value":"fn from_char_code5(u32, u32, u32, u32, u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode)\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5496},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":206870,"byte_end":206885,"line_start":4451,"line_end":4451,"column_start":12,"column_end":27},"name":"from_code_point","qualname":"<JsString>::from_code_point","value":"fn from_code_point(&[u32]) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `String.fromCodePoint()` method returns a string created by\n using the specified sequence of code points.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5499},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":207182,"byte_end":207198,"line_start":4455,"line_end":4455,"column_start":12,"column_end":28},"name":"from_code_point1","qualname":"<JsString>::from_code_point1","value":"fn from_code_point1(u32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5502},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":207482,"byte_end":207498,"line_start":4459,"line_end":4459,"column_start":12,"column_end":28},"name":"from_code_point2","qualname":"<JsString>::from_code_point2","value":"fn from_code_point2(u32, u32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5505},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":207790,"byte_end":207806,"line_start":4463,"line_end":4463,"column_start":12,"column_end":28},"name":"from_code_point3","qualname":"<JsString>::from_code_point3","value":"fn from_code_point3(u32, u32, u32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5508},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":208106,"byte_end":208122,"line_start":4467,"line_end":4467,"column_start":12,"column_end":28},"name":"from_code_point4","qualname":"<JsString>::from_code_point4","value":"fn from_code_point4(u32, u32, u32, u32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5511},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":208430,"byte_end":208446,"line_start":4471,"line_end":4471,"column_start":12,"column_end":28},"name":"from_code_point5","qualname":"<JsString>::from_code_point5","value":"fn from_code_point5(u32, u32, u32, u32, u32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5514},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":208858,"byte_end":208866,"line_start":4478,"line_end":4478,"column_start":12,"column_end":20},"name":"includes","qualname":"<JsString>::includes","value":"fn includes(&Self, &str, i32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `includes()` method determines whether one string may be found\n within another string, returning true or false as appropriate.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5517},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":209361,"byte_end":209369,"line_start":4486,"line_end":4486,"column_start":12,"column_end":20},"name":"index_of","qualname":"<JsString>::index_of","value":"fn index_of(&Self, &str, i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `indexOf()` method returns the index within the calling String\n object of the first occurrence of the specified value, starting the\n search at fromIndex.  Returns -1 if the value is not found.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5520},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":209877,"byte_end":209890,"line_start":4494,"line_end":4494,"column_start":12,"column_end":25},"name":"last_index_of","qualname":"<JsString>::last_index_of","value":"fn last_index_of(&Self, &str, i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `lastIndexOf()` method returns the index within the calling String\n object of the last occurrence of the specified value, searching\n backwards from fromIndex.  Returns -1 if the value is not found.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5523},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":210358,"byte_end":210372,"line_start":4502,"line_end":4502,"column_start":12,"column_end":26},"name":"locale_compare","qualname":"<JsString>::locale_compare","value":"fn locale_compare(&Self, &str, &Array, &Object) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `localeCompare()` method returns a number indicating whether\n a reference string comes before or after or is the same as\n the given string in sort order.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5526},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":210807,"byte_end":210813,"line_start":4513,"line_end":4513,"column_start":12,"column_end":18},"name":"match_","qualname":"<JsString>::match_","value":"fn match_(&Self, &RegExp) -> Option<Object>","parent":null,"children":[],"decl_id":null,"docs":" The `match()` method retrieves the matches when matching a string against a regular expression.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5529},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":211214,"byte_end":211223,"line_start":4519,"line_end":4519,"column_start":12,"column_end":21},"name":"match_all","qualname":"<JsString>::match_all","value":"fn match_all(&Self, &RegExp) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `match_all()` method is similar to `match()`, but gives an iterator of `exec()` arrays, which preserve capture groups.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5532},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":211632,"byte_end":211641,"line_start":4526,"line_end":4526,"column_start":12,"column_end":21},"name":"normalize","qualname":"<JsString>::normalize","value":"fn normalize(&Self, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `normalize()` method returns the Unicode Normalization Form\n of a given string (if the value isn't a string, it will be converted to one first).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5535},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":212135,"byte_end":212142,"line_start":4535,"line_end":4535,"column_start":12,"column_end":19},"name":"pad_end","qualname":"<JsString>::pad_end","value":"fn pad_end(&Self, u32, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `padEnd()` method pads the current string with a given string\n (repeated, if needed) so that the resulting string reaches a given\n length. The padding is applied from the end (right) of the current\n string.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5538},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":212671,"byte_end":212680,"line_start":4544,"line_end":4544,"column_start":12,"column_end":21},"name":"pad_start","qualname":"<JsString>::pad_start","value":"fn pad_start(&Self, u32, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `padStart()` method pads the current string with another string\n (repeated, if needed) so that the resulting string reaches the given\n length. The padding is applied from the start (left) of the current\n string.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5541},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":213123,"byte_end":213129,"line_start":4551,"line_end":4551,"column_start":12,"column_end":18},"name":"repeat","qualname":"<JsString>::repeat","value":"fn repeat(&Self, i32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `repeat()` method constructs and returns a new string which contains the specified\n number of copies of the string on which it was called, concatenated together.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5544},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":213684,"byte_end":213691,"line_start":4561,"line_end":4561,"column_start":12,"column_end":19},"name":"replace","qualname":"<JsString>::replace","value":"fn replace(&Self, &str, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `replace()` method returns a new string with some or all matches of a pattern\n replaced by a replacement. The pattern can be a string or a RegExp, and\n the replacement can be a string or a function to be called for each match.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5547},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":213961,"byte_end":213982,"line_start":4565,"line_end":4565,"column_start":12,"column_end":33},"name":"replace_with_function","qualname":"<JsString>::replace_with_function","value":"fn replace_with_function(&Self, &str, &Function) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace)\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5550},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":214163,"byte_end":214181,"line_start":4572,"line_end":4572,"column_start":12,"column_end":30},"name":"replace_by_pattern","qualname":"<JsString>::replace_by_pattern","value":"fn replace_by_pattern(&Self, &RegExp, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5553},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":214454,"byte_end":214486,"line_start":4576,"line_end":4576,"column_start":12,"column_end":44},"name":"replace_by_pattern_with_function","qualname":"<JsString>::replace_by_pattern_with_function","value":"fn replace_by_pattern_with_function(&Self, &RegExp, &Function) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace)\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5556},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":215130,"byte_end":215141,"line_start":4590,"line_end":4590,"column_start":12,"column_end":23},"name":"replace_all","qualname":"<JsString>::replace_all","value":"fn replace_all(&Self, &str, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `replace_all()` method returns a new string with all matches of a pattern\n replaced by a replacement. The pattern can be a string or a global RegExp, and\n the replacement can be a string or a function to be called for each match.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5559},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":215417,"byte_end":215442,"line_start":4594,"line_end":4594,"column_start":12,"column_end":37},"name":"replace_all_with_function","qualname":"<JsString>::replace_all_with_function","value":"fn replace_all_with_function(&Self, &str, &Function) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replaceAll)\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5562},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":215626,"byte_end":215648,"line_start":4601,"line_end":4601,"column_start":12,"column_end":34},"name":"replace_all_by_pattern","qualname":"<JsString>::replace_all_by_pattern","value":"fn replace_all_by_pattern(&Self, &RegExp, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5565},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":215935,"byte_end":215971,"line_start":4606,"line_end":4606,"column_start":12,"column_end":48},"name":"replace_all_by_pattern_with_function","qualname":"<JsString>::replace_all_by_pattern_with_function","value":"fn replace_all_by_pattern_with_function(&Self, &RegExp, &Function) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replaceAll)\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5568},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":216389,"byte_end":216395,"line_start":4617,"line_end":4617,"column_start":12,"column_end":18},"name":"search","qualname":"<JsString>::search","value":"fn search(&Self, &RegExp) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `search()` method executes a search for a match between\n a regular expression and this String object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5571},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":216770,"byte_end":216775,"line_start":4624,"line_end":4624,"column_start":12,"column_end":17},"name":"slice","qualname":"<JsString>::slice","value":"fn slice(&Self, u32, u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method extracts a section of a string and returns it as a\n new string, without modifying the original string.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5574},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":217221,"byte_end":217226,"line_start":4631,"line_end":4631,"column_start":12,"column_end":17},"name":"split","qualname":"<JsString>::split","value":"fn split(&Self, &str) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `split()` method splits a String object into an array of strings by separating the string\n into substrings, using a specified separator string to determine where to make each split.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5577},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":217472,"byte_end":217483,"line_start":4635,"line_end":4635,"column_start":12,"column_end":23},"name":"split_limit","qualname":"<JsString>::split_limit","value":"fn split_limit(&Self, &str, u32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split)\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5580},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":217741,"byte_end":217757,"line_start":4639,"line_end":4639,"column_start":12,"column_end":28},"name":"split_by_pattern","qualname":"<JsString>::split_by_pattern","value":"fn split_by_pattern(&Self, &RegExp) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split)\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5583},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":218004,"byte_end":218026,"line_start":4643,"line_end":4643,"column_start":12,"column_end":34},"name":"split_by_pattern_limit","qualname":"<JsString>::split_by_pattern_limit","value":"fn split_by_pattern_limit(&Self, &RegExp, u32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split)\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5586},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":218471,"byte_end":218482,"line_start":4651,"line_end":4651,"column_start":12,"column_end":23},"name":"starts_with","qualname":"<JsString>::starts_with","value":"fn starts_with(&Self, &str, u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `startsWith()` method determines whether a string begins with the\n characters of a specified string, returning true or false as\n appropriate.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5589},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":218877,"byte_end":218886,"line_start":4658,"line_end":4658,"column_start":12,"column_end":21},"name":"substring","qualname":"<JsString>::substring","value":"fn substring(&Self, u32, u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `substring()` method returns the part of the string between the\n start and end indexes, or to the end of the string.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5592},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":219272,"byte_end":219278,"line_start":4665,"line_end":4665,"column_start":12,"column_end":18},"name":"substr","qualname":"<JsString>::substr","value":"fn substr(&Self, i32, i32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `substr()` method returns the part of a string between\n the start index and a number of characters after it.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5595},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":219722,"byte_end":219742,"line_start":4672,"line_end":4672,"column_start":12,"column_end":32},"name":"to_locale_lower_case","qualname":"<JsString>::to_locale_lower_case","value":"fn to_locale_lower_case(&Self, Option<&str>) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleLowerCase()` method returns the calling string value converted to lower case,\n according to any locale-specific case mappings.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5598},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":220180,"byte_end":220200,"line_start":4679,"line_end":4679,"column_start":12,"column_end":32},"name":"to_locale_upper_case","qualname":"<JsString>::to_locale_upper_case","value":"fn to_locale_upper_case(&Self, Option<&str>) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleUpperCase()` method returns the calling string value converted to upper case,\n according to any locale-specific case mappings.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5601},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":220575,"byte_end":220588,"line_start":4686,"line_end":4686,"column_start":12,"column_end":25},"name":"to_lower_case","qualname":"<JsString>::to_lower_case","value":"fn to_lower_case(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLowerCase()` method returns the calling string value\n converted to lower case.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5604},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":220926,"byte_end":220935,"line_start":4693,"line_end":4693,"column_start":12,"column_end":21},"name":"to_string","qualname":"<JsString>::to_string","value":"fn to_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the specified\n object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5607},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":221345,"byte_end":221358,"line_start":4700,"line_end":4700,"column_start":12,"column_end":25},"name":"to_upper_case","qualname":"<JsString>::to_upper_case","value":"fn to_upper_case(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toUpperCase()` method returns the calling string value converted to\n uppercase (the value will be converted to a string if it isn't one).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5610},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":221829,"byte_end":221833,"line_start":4709,"line_end":4709,"column_start":12,"column_end":16},"name":"trim","qualname":"<JsString>::trim","value":"fn trim(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `trim()` method removes whitespace from both ends of a string.\n Whitespace in this context is all the whitespace characters (space, tab,\n no-break space, etc.) and all the line terminator characters (LF, CR,\n etc.).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5613},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":222203,"byte_end":222211,"line_start":4716,"line_end":4716,"column_start":12,"column_end":20},"name":"trim_end","qualname":"<JsString>::trim_end","value":"fn trim_end(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `trimEnd()` method removes whitespace from the end of a string.\n `trimRight()` is an alias of this method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5616},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":222583,"byte_end":222593,"line_start":4723,"line_end":4723,"column_start":12,"column_end":22},"name":"trim_right","qualname":"<JsString>::trim_right","value":"fn trim_right(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `trimEnd()` method removes whitespace from the end of a string.\n `trimRight()` is an alias of this method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5619},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":222974,"byte_end":222984,"line_start":4730,"line_end":4730,"column_start":12,"column_end":22},"name":"trim_start","qualname":"<JsString>::trim_start","value":"fn trim_start(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `trimStart()` method removes whitespace from the beginning of a\n string. `trimLeft()` is an alias of this method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5622},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":223364,"byte_end":223373,"line_start":4737,"line_end":4737,"column_start":12,"column_end":21},"name":"trim_left","qualname":"<JsString>::trim_left","value":"fn trim_left(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `trimStart()` method removes whitespace from the beginning of a\n string. `trimLeft()` is an alias of this method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5625},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":223698,"byte_end":223706,"line_start":4743,"line_end":4743,"column_start":12,"column_end":20},"name":"value_of","qualname":"<JsString>::value_of","value":"fn value_of(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `valueOf()` method returns the primitive value of a `String` object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5628},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":224128,"byte_end":224131,"line_start":4750,"line_end":4750,"column_start":12,"column_end":15},"name":"raw","qualname":"<JsString>::raw","value":"fn raw(&Object, &Array) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5631},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":224601,"byte_end":224606,"line_start":4757,"line_end":4757,"column_start":12,"column_end":17},"name":"raw_0","qualname":"<JsString>::raw_0","value":"fn raw_0(&Object) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5634},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":225053,"byte_end":225058,"line_start":4764,"line_end":4764,"column_start":12,"column_end":17},"name":"raw_1","qualname":"<JsString>::raw_1","value":"fn raw_1(&Object, &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5637},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":225528,"byte_end":225533,"line_start":4771,"line_end":4771,"column_start":12,"column_end":17},"name":"raw_2","qualname":"<JsString>::raw_2","value":"fn raw_2(&Object, &str, &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5640},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":226057,"byte_end":226062,"line_start":4782,"line_end":4782,"column_start":12,"column_end":17},"name":"raw_3","qualname":"<JsString>::raw_3","value":"fn raw_3(&Object, &str, &str, &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5643},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":226617,"byte_end":226622,"line_start":4794,"line_end":4794,"column_start":12,"column_end":17},"name":"raw_4","qualname":"<JsString>::raw_4","value":"fn raw_4(&Object, &str, &str, &str, &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5646},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":227208,"byte_end":227213,"line_start":4807,"line_end":4807,"column_start":12,"column_end":17},"name":"raw_5","qualname":"<JsString>::raw_5","value":"fn raw_5(&Object, &str, &str, &str, &str, &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5649},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":227830,"byte_end":227835,"line_start":4821,"line_end":4821,"column_start":12,"column_end":17},"name":"raw_6","qualname":"<JsString>::raw_6","value":"fn raw_6(&Object, &str, &str, &str, &str, &str, &str)\n-> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5652},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":228483,"byte_end":228488,"line_start":4836,"line_end":4836,"column_start":12,"column_end":17},"name":"raw_7","qualname":"<JsString>::raw_7","value":"fn raw_7(&Object, &str, &str, &str, &str, &str, &str, &str)\n-> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":200470,"byte_end":200485,"line_start":4337,"line_end":4337,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":229081,"byte_end":229089,"line_start":4855,"line_end":4855,"column_start":12,"column_end":20},"name":"try_from","qualname":"<JsString>::try_from","value":"fn try_from(&JsValue) -> Option<&JsString>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `JsString` value of this JS value if it's an instance of a\n string.","sig":null,"attributes":[{"value":"/ Returns the `JsString` value of this JS value if it's an instance of a","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":228794,"byte_end":228868,"line_start":4849,"line_end":4849,"column_start":5,"column_end":79}},{"value":"/ string.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":228873,"byte_end":228884,"line_start":4850,"line_end":4850,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":228889,"byte_end":228892,"line_start":4851,"line_end":4851,"column_start":5,"column_end":8}},{"value":"/ If this JS value is not an instance of a string then this returns","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":228897,"byte_end":228966,"line_start":4852,"line_end":4852,"column_start":5,"column_end":74}},{"value":"/ `None`.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":228971,"byte_end":228982,"line_start":4853,"line_end":4853,"column_start":5,"column_end":16}},{"value":"deprecated(note =\n\"recommended to use dyn_ref instead which is now equivalent\")","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":228987,"byte_end":229069,"line_start":4854,"line_end":4854,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":230014,"byte_end":230028,"line_start":4875,"line_end":4875,"column_start":12,"column_end":26},"name":"is_valid_utf16","qualname":"<JsString>::is_valid_utf16","value":"fn is_valid_utf16(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this string is a valid UTF-16 string.","sig":null,"attributes":[{"value":"/ Returns whether this string is a valid UTF-16 string.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":229161,"byte_end":229218,"line_start":4859,"line_end":4859,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":229223,"byte_end":229226,"line_start":4860,"line_end":4860,"column_start":5,"column_end":8}},{"value":"/ This is useful for learning whether `String::from(..)` will return a","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":229231,"byte_end":229303,"line_start":4861,"line_end":4861,"column_start":5,"column_end":77}},{"value":"/ lossless representation of the JS string. If this string contains","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":229308,"byte_end":229377,"line_start":4862,"line_end":4862,"column_start":5,"column_end":74}},{"value":"/ unpaired surrogates then `String::from` will succeed but it will be a","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":229382,"byte_end":229455,"line_start":4863,"line_end":4863,"column_start":5,"column_end":78}},{"value":"/ lossy representation of the JS string because unpaired surrogates will","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":229460,"byte_end":229534,"line_start":4864,"line_end":4864,"column_start":5,"column_end":79}},{"value":"/ become replacement characters.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":229539,"byte_end":229573,"line_start":4865,"line_end":4865,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":229578,"byte_end":229581,"line_start":4866,"line_end":4866,"column_start":5,"column_end":8}},{"value":"/ If this function returns `false` then to get a lossless representation","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":229586,"byte_end":229660,"line_start":4867,"line_end":4867,"column_start":5,"column_end":79}},{"value":"/ of the string you'll need to manually use the `iter` method (or the","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":229665,"byte_end":229736,"line_start":4868,"line_end":4868,"column_start":5,"column_end":76}},{"value":"/ `char_code_at` accessor) to view the raw character codes.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":229741,"byte_end":229802,"line_start":4869,"line_end":4869,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":229807,"byte_end":229810,"line_start":4870,"line_end":4870,"column_start":5,"column_end":8}},{"value":"/ For more information, see the documentation on [JS strings vs Rust","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":229815,"byte_end":229885,"line_start":4871,"line_end":4871,"column_start":5,"column_end":75}},{"value":"/ strings][docs]","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":229890,"byte_end":229908,"line_start":4872,"line_end":4872,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":229913,"byte_end":229916,"line_start":4873,"line_end":4873,"column_start":5,"column_end":8}},{"value":"/ [docs]: https://rustwasm.github.io/docs/wasm-bindgen/reference/types/str.html","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":229921,"byte_end":230002,"line_start":4874,"line_end":4874,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":230366,"byte_end":230370,"line_start":4884,"line_end":4884,"column_start":12,"column_end":16},"name":"iter","qualname":"<JsString>::iter","value":"fn iter<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the `u16` character codes that make up this JS\n string.","sig":null,"attributes":[{"value":"/ Returns an iterator over the `u16` character codes that make up this JS","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":230121,"byte_end":230196,"line_start":4879,"line_end":4879,"column_start":5,"column_end":80}},{"value":"/ string.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":230201,"byte_end":230212,"line_start":4880,"line_end":4880,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":230217,"byte_end":230220,"line_start":4881,"line_end":4881,"column_start":5,"column_end":8}},{"value":"/ This method will call `char_code_at` for each code in this JS string,","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":230225,"byte_end":230298,"line_start":4882,"line_end":4882,"column_start":5,"column_end":78}},{"value":"/ returning an iterator of the codes in sequence.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":230303,"byte_end":230354,"line_start":4883,"line_end":4883,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":231139,"byte_end":231146,"line_start":4900,"line_end":4900,"column_start":12,"column_end":19},"name":"as_char","qualname":"<JsString>::as_char","value":"fn as_char(&Self) -> Option<char>","parent":null,"children":[],"decl_id":null,"docs":" If this string consists of a single Unicode code point, then this method\n converts it into a Rust `char` without doing any allocations.","sig":null,"attributes":[{"value":"/ If this string consists of a single Unicode code point, then this method","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":230559,"byte_end":230635,"line_start":4890,"line_end":4890,"column_start":5,"column_end":81}},{"value":"/ converts it into a Rust `char` without doing any allocations.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":230640,"byte_end":230705,"line_start":4891,"line_end":4891,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":230710,"byte_end":230713,"line_start":4892,"line_end":4892,"column_start":5,"column_end":8}},{"value":"/ If this JS value is not a valid UTF-8 or consists of more than a single","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":230718,"byte_end":230793,"line_start":4893,"line_end":4893,"column_start":5,"column_end":80}},{"value":"/ codepoint, then this returns `None`.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":230798,"byte_end":230838,"line_start":4894,"line_end":4894,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":230843,"byte_end":230846,"line_start":4895,"line_end":4895,"column_start":5,"column_end":8}},{"value":"/ Note that a single Unicode code point might be represented as more than","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":230851,"byte_end":230926,"line_start":4896,"line_end":4896,"column_start":5,"column_end":80}},{"value":"/ one code unit on the JavaScript side. For example, a JavaScript string","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":230931,"byte_end":231005,"line_start":4897,"line_end":4897,"column_start":5,"column_end":79}},{"value":"/ `\"\\uD801\\uDC37\"` is actually a single Unicode code point U+10437 which","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":231010,"byte_end":231084,"line_start":4898,"line_end":4898,"column_start":5,"column_end":79}},{"value":"/ corresponds to a character '𐐷'.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":231089,"byte_end":231127,"line_start":4899,"line_end":4899,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":231673,"byte_end":231675,"line_start":4922,"line_end":4922,"column_start":8,"column_end":10},"name":"eq","qualname":"<JsString as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &str) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":231801,"byte_end":231803,"line_start":4928,"line_end":4928,"column_start":8,"column_end":10},"name":"eq","qualname":"<JsString as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &&'a str) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":231946,"byte_end":231948,"line_start":4934,"line_end":4934,"column_start":8,"column_end":10},"name":"eq","qualname":"<JsString as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &String) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":232098,"byte_end":232100,"line_start":4940,"line_end":4940,"column_start":8,"column_end":10},"name":"eq","qualname":"<JsString as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &&'a String) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":232246,"byte_end":232250,"line_start":4946,"line_end":4946,"column_start":8,"column_end":12},"name":"from","qualname":"<JsString as std::convert::From>::from","value":"fn from(&'a str) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":232380,"byte_end":232384,"line_start":4952,"line_end":4952,"column_start":8,"column_end":12},"name":"from","qualname":"<JsString as std::convert::From>::from","value":"fn from(String) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":232491,"byte_end":232495,"line_start":4959,"line_end":4959,"column_start":8,"column_end":12},"name":"from","qualname":"<JsString as std::convert::From>::from","value":"fn from(char) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":232474,"byte_end":232483,"line_start":4958,"line_end":4958,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":232632,"byte_end":232636,"line_start":4965,"line_end":4965,"column_start":8,"column_end":12},"name":"from","qualname":"<String as std::convert::From>::from","value":"fn from(&'a JsString) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":232754,"byte_end":232758,"line_start":4971,"line_end":4971,"column_start":8,"column_end":12},"name":"from","qualname":"<String as std::convert::From>::from","value":"fn from(JsString) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":232866,"byte_end":232869,"line_start":4978,"line_end":4978,"column_start":8,"column_end":11},"name":"fmt","qualname":"<JsString as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":232849,"byte_end":232858,"line_start":4977,"line_end":4977,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233029,"byte_end":233032,"line_start":4985,"line_end":4985,"column_start":8,"column_end":11},"name":"fmt","qualname":"<JsString as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10115},"children":[],"decl_id":{"krate":2,"index":10116},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233012,"byte_end":233021,"line_start":4984,"line_end":4984,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233216,"byte_end":233224,"line_start":4992,"line_end":4992,"column_start":8,"column_end":16},"name":"from_str","qualname":"<JsString as std::str::FromStr>::from_str","value":"fn from_str(&str) -> Result<Self, Self::Err>","parent":{"krate":2,"index":12765},"children":[],"decl_id":{"krate":2,"index":12767},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5789},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233463,"byte_end":233469,"line_start":5002,"line_end":5002,"column_start":14,"column_end":20},"name":"Symbol","qualname":"::Symbol","value":"Symbol {  }","parent":null,"children":[{"krate":0,"index":5790}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5742},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233931,"byte_end":233943,"line_start":5010,"line_end":5010,"column_start":12,"column_end":24},"name":"has_instance","qualname":"<Symbol>::has_instance","value":"fn has_instance() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.hasInstance` well-known symbol is used to determine\n if a constructor object recognizes an object as its instance.\n The `instanceof` operator's behavior can be customized by this symbol.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5745},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":234410,"byte_end":234430,"line_start":5018,"line_end":5018,"column_start":12,"column_end":32},"name":"is_concat_spreadable","qualname":"<Symbol>::is_concat_spreadable","value":"fn is_concat_spreadable() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.isConcatSpreadable` well-known symbol is used to configure\n if an object should be flattened to its array elements when using the\n `Array.prototype.concat()` method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5748},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":234905,"byte_end":234919,"line_start":5025,"line_end":5025,"column_start":12,"column_end":26},"name":"async_iterator","qualname":"<Symbol>::async_iterator","value":"fn async_iterator() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.asyncIterator` well-known symbol specifies the default AsyncIterator for an object.\n If this property is set on an object, it is an async iterable and can be used in a `for await...of` loop.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5751},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":235269,"byte_end":235277,"line_start":5032,"line_end":5032,"column_start":12,"column_end":20},"name":"iterator","qualname":"<Symbol>::iterator","value":"fn iterator() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.iterator` well-known symbol specifies the default iterator\n for an object.  Used by `for...of`.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5754},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":235710,"byte_end":235716,"line_start":5040,"line_end":5040,"column_start":12,"column_end":18},"name":"match_","qualname":"<Symbol>::match_","value":"fn match_() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.match` well-known symbol specifies the matching of a regular\n expression against a string. This function is called by the\n `String.prototype.match()` method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5757},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":236257,"byte_end":236264,"line_start":5051,"line_end":5051,"column_start":12,"column_end":19},"name":"replace","qualname":"<Symbol>::replace","value":"fn replace() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.replace` well-known symbol specifies the method that\n replaces matched substrings of a string.  This function is called by the\n `String.prototype.replace()` method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5760},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":236830,"byte_end":236836,"line_start":5062,"line_end":5062,"column_start":12,"column_end":18},"name":"search","qualname":"<Symbol>::search","value":"fn search() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.search` well-known symbol specifies the method that returns\n the index within a string that matches the regular expression.  This\n function is called by the `String.prototype.search()` method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5763},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":237216,"byte_end":237223,"line_start":5069,"line_end":5069,"column_start":12,"column_end":19},"name":"species","qualname":"<Symbol>::species","value":"fn species() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The well-known symbol `Symbol.species` specifies a function-valued\n property that the constructor function uses to create derived objects.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5766},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":237769,"byte_end":237774,"line_start":5079,"line_end":5079,"column_start":12,"column_end":17},"name":"split","qualname":"<Symbol>::split","value":"fn split() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.split` well-known symbol specifies the method that splits a\n string at the indices that match a regular expression.  This function is\n called by the `String.prototype.split()` method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5769},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":238202,"byte_end":238214,"line_start":5087,"line_end":5087,"column_start":12,"column_end":24},"name":"to_primitive","qualname":"<Symbol>::to_primitive","value":"fn to_primitive() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.toPrimitive` is a symbol that specifies a function valued\n property that is called to convert an object to a corresponding\n primitive value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5772},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":238716,"byte_end":238729,"line_start":5096,"line_end":5096,"column_start":12,"column_end":25},"name":"to_string_tag","qualname":"<Symbol>::to_string_tag","value":"fn to_string_tag() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.toStringTag` well-known symbol is a string valued property\n that is used in the creation of the default string description of an\n object.  It is accessed internally by the `Object.prototype.toString()`\n method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5775},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":239188,"byte_end":239192,"line_start":5104,"line_end":5104,"column_start":12,"column_end":16},"name":"for_","qualname":"<Symbol>::for_","value":"fn for_(&str) -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.for(key)` method searches for existing symbols in a runtime-wide symbol registry with\n the given key and returns it if found.\n Otherwise a new symbol gets created in the global symbol registry with this key.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5778},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":239548,"byte_end":239555,"line_start":5110,"line_end":5110,"column_start":12,"column_end":19},"name":"key_for","qualname":"<Symbol>::key_for","value":"fn key_for(&Symbol) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.keyFor(sym)` method retrieves a shared symbol key from the global symbol registry for the given symbol.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5781},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":239867,"byte_end":239876,"line_start":5116,"line_end":5116,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Symbol>::to_string","value":"fn to_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the specified Symbol object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5784},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":240339,"byte_end":240350,"line_start":5124,"line_end":5124,"column_start":12,"column_end":23},"name":"unscopables","qualname":"<Symbol>::unscopables","value":"fn unscopables() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.unscopables` well-known symbol is used to specify an object\n value of whose own and inherited property names are excluded from the\n with environment bindings of the associated object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5787},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":240635,"byte_end":240643,"line_start":5130,"line_end":5130,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Symbol>::value_of","value":"fn value_of(&Self) -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `valueOf()` method returns the primitive value of a Symbol object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233312,"byte_end":233327,"line_start":4998,"line_end":4998,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":290},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":240706,"byte_end":240710,"line_start":5134,"line_end":5134,"column_start":9,"column_end":13},"name":"Intl","qualname":"::Intl","value":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":5795},{"krate":0,"index":5894},{"krate":0,"index":5896},{"krate":0,"index":5898},{"krate":0,"index":5797},{"krate":0,"index":5869},{"krate":0,"index":5872},{"krate":0,"index":5877},{"krate":0,"index":5882},{"krate":0,"index":5885},{"krate":0,"index":5888},{"krate":0,"index":5891},{"krate":0,"index":292},{"krate":0,"index":6000},{"krate":0,"index":6002},{"krate":0,"index":6004},{"krate":0,"index":5900},{"krate":0,"index":5972},{"krate":0,"index":5975},{"krate":0,"index":5980},{"krate":0,"index":5985},{"krate":0,"index":5988},{"krate":0,"index":5991},{"krate":0,"index":5994},{"krate":0,"index":5997},{"krate":0,"index":294},{"krate":0,"index":6106},{"krate":0,"index":6108},{"krate":0,"index":6110},{"krate":0,"index":6006},{"krate":0,"index":6078},{"krate":0,"index":6081},{"krate":0,"index":6086},{"krate":0,"index":6091},{"krate":0,"index":6094},{"krate":0,"index":6097},{"krate":0,"index":6100},{"krate":0,"index":6103},{"krate":0,"index":296},{"krate":0,"index":6209},{"krate":0,"index":6211},{"krate":0,"index":6213},{"krate":0,"index":6112},{"krate":0,"index":6184},{"krate":0,"index":6187},{"krate":0,"index":6192},{"krate":0,"index":6197},{"krate":0,"index":6200},{"krate":0,"index":6203},{"krate":0,"index":6206},{"krate":0,"index":298}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":240673,"byte_end":240697,"line_start":5133,"line_end":5133,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":5795},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":241250,"byte_end":241271,"line_start":5146,"line_end":5146,"column_start":16,"column_end":37},"name":"get_canonical_locales","qualname":"::Intl::get_canonical_locales","value":"fn get_canonical_locales(&JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.getCanonicalLocales()` method returns an array containing\n the canonical locale names. Duplicates will be omitted and elements\n will be validated as structurally valid language tags.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":240748,"byte_end":240763,"line_start":5138,"line_end":5138,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":240748,"byte_end":240763,"line_start":5138,"line_end":5138,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5894},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":241783,"byte_end":241791,"line_start":5158,"line_end":5158,"column_start":18,"column_end":26},"name":"Collator","qualname":"::Intl::Collator","value":"Collator {  }","parent":null,"children":[{"krate":0,"index":5895}],"decl_id":null,"docs":" The `Intl.Collator` object is a constructor for collators, objects\n that enable language sensitive string comparison.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":241327,"byte_end":241342,"line_start":5150,"line_end":5150,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":241327,"byte_end":241342,"line_start":5150,"line_end":5150,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5883},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":242143,"byte_end":242146,"line_start":5165,"line_end":5165,"column_start":16,"column_end":19},"name":"new","qualname":"<Collator>::new","value":"fn new(&Array, &Object) -> Collator","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.Collator` object is a constructor for collators, objects\n that enable language sensitive string comparison.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":241327,"byte_end":241342,"line_start":5150,"line_end":5150,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":241327,"byte_end":241342,"line_start":5150,"line_end":5150,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5886},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":242601,"byte_end":242608,"line_start":5173,"line_end":5173,"column_start":16,"column_end":23},"name":"compare","qualname":"<Collator>::compare","value":"fn compare(&Self) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The Intl.Collator.prototype.compare property returns a function that\n compares two strings according to the sort order of this Collator\n object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":241327,"byte_end":241342,"line_start":5150,"line_end":5150,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":241327,"byte_end":241342,"line_start":5150,"line_end":5150,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5889},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":243114,"byte_end":243130,"line_start":5181,"line_end":5181,"column_start":16,"column_end":32},"name":"resolved_options","qualname":"<Collator>::resolved_options","value":"fn resolved_options(&Self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.Collator.prototype.resolvedOptions()` method returns a new\n object with properties reflecting the locale and collation options\n computed during initialization of this Collator object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":241327,"byte_end":241342,"line_start":5150,"line_end":5150,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":241327,"byte_end":241342,"line_start":5150,"line_end":5150,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5892},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":243680,"byte_end":243700,"line_start":5190,"line_end":5190,"column_start":16,"column_end":36},"name":"supported_locales_of","qualname":"<Collator>::supported_locales_of","value":"fn supported_locales_of(&Array, &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.Collator.supportedLocalesOf()` method returns an array\n containing those of the provided locales that are supported in\n collation without having to fall back to the runtime's default\n locale.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":241327,"byte_end":241342,"line_start":5150,"line_end":5150,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":241327,"byte_end":241342,"line_start":5150,"line_end":5150,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":243796,"byte_end":243803,"line_start":5194,"line_end":5194,"column_start":12,"column_end":19},"name":"default","qualname":"<Collator as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6000},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":244479,"byte_end":244493,"line_start":5211,"line_end":5211,"column_start":18,"column_end":32},"name":"DateTimeFormat","qualname":"::Intl::DateTimeFormat","value":"DateTimeFormat {  }","parent":null,"children":[{"krate":0,"index":6001}],"decl_id":null,"docs":" The `Intl.DateTimeFormat` object is a constructor for objects\n that enable language-sensitive date and time formatting.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":244009,"byte_end":244024,"line_start":5203,"line_end":5203,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":244009,"byte_end":244024,"line_start":5203,"line_end":5203,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5986},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":244853,"byte_end":244856,"line_start":5218,"line_end":5218,"column_start":16,"column_end":19},"name":"new","qualname":"<DateTimeFormat>::new","value":"fn new(&Array, &Object) -> DateTimeFormat","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.DateTimeFormat` object is a constructor for objects\n that enable language-sensitive date and time formatting.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":244009,"byte_end":244024,"line_start":5203,"line_end":5203,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":244009,"byte_end":244024,"line_start":5203,"line_end":5203,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5989},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":245364,"byte_end":245370,"line_start":5226,"line_end":5226,"column_start":16,"column_end":22},"name":"format","qualname":"<DateTimeFormat>::format","value":"fn format(&Self) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The Intl.DateTimeFormat.prototype.format property returns a getter function that\n formats a date according to the locale and formatting options of this\n Intl.DateTimeFormat object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":244009,"byte_end":244024,"line_start":5203,"line_end":5203,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":244009,"byte_end":244024,"line_start":5203,"line_end":5203,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5992},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":245833,"byte_end":245848,"line_start":5233,"line_end":5233,"column_start":16,"column_end":31},"name":"format_to_parts","qualname":"<DateTimeFormat>::format_to_parts","value":"fn format_to_parts(&Self, &Date) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.DateTimeFormat.prototype.formatToParts()` method allows locale-aware\n formatting of strings produced by DateTimeFormat formatters.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":244009,"byte_end":244024,"line_start":5203,"line_end":5203,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":244009,"byte_end":244024,"line_start":5203,"line_end":5203,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5995},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":246403,"byte_end":246419,"line_start":5241,"line_end":5241,"column_start":16,"column_end":32},"name":"resolved_options","qualname":"<DateTimeFormat>::resolved_options","value":"fn resolved_options(&Self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.DateTimeFormat.prototype.resolvedOptions()` method returns a new\n object with properties reflecting the locale and date and time formatting\n options computed during initialization of this DateTimeFormat object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":244009,"byte_end":244024,"line_start":5203,"line_end":5203,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":244009,"byte_end":244024,"line_start":5203,"line_end":5203,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5998},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":247008,"byte_end":247028,"line_start":5250,"line_end":5250,"column_start":16,"column_end":36},"name":"supported_locales_of","qualname":"<DateTimeFormat>::supported_locales_of","value":"fn supported_locales_of(&Array, &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.DateTimeFormat.supportedLocalesOf()` method returns an array\n containing those of the provided locales that are supported in date\n and time formatting without having to fall back to the runtime's default\n locale.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":244009,"byte_end":244024,"line_start":5203,"line_end":5203,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":244009,"byte_end":244024,"line_start":5203,"line_end":5203,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":247130,"byte_end":247137,"line_start":5254,"line_end":5254,"column_start":12,"column_end":19},"name":"default","qualname":"<DateTimeFormat as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6106},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":247798,"byte_end":247810,"line_start":5271,"line_end":5271,"column_start":18,"column_end":30},"name":"NumberFormat","qualname":"::Intl::NumberFormat","value":"NumberFormat {  }","parent":null,"children":[{"krate":0,"index":6107}],"decl_id":null,"docs":" The `Intl.NumberFormat` object is a constructor for objects\n that enable language sensitive number formatting.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":247341,"byte_end":247356,"line_start":5263,"line_end":5263,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":247341,"byte_end":247356,"line_start":5263,"line_end":5263,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6092},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":248159,"byte_end":248162,"line_start":5278,"line_end":5278,"column_start":16,"column_end":19},"name":"new","qualname":"<NumberFormat>::new","value":"fn new(&Array, &Object) -> NumberFormat","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.NumberFormat` object is a constructor for objects\n that enable language sensitive number formatting.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":247341,"byte_end":247356,"line_start":5263,"line_end":5263,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":247341,"byte_end":247356,"line_start":5263,"line_end":5263,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6095},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":248657,"byte_end":248663,"line_start":5286,"line_end":5286,"column_start":16,"column_end":22},"name":"format","qualname":"<NumberFormat>::format","value":"fn format(&Self) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The Intl.NumberFormat.prototype.format property returns a getter function that\n formats a number according to the locale and formatting options of this\n NumberFormat object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":247341,"byte_end":247356,"line_start":5263,"line_end":5263,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":247341,"byte_end":247356,"line_start":5263,"line_end":5263,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6098},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":249120,"byte_end":249135,"line_start":5293,"line_end":5293,"column_start":16,"column_end":31},"name":"format_to_parts","qualname":"<NumberFormat>::format_to_parts","value":"fn format_to_parts(&Self, f64) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.Numberformat.prototype.formatToParts()` method allows locale-aware\n formatting of strings produced by NumberTimeFormat formatters.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":247341,"byte_end":247356,"line_start":5263,"line_end":5263,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":247341,"byte_end":247356,"line_start":5263,"line_end":5263,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6101},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":249675,"byte_end":249691,"line_start":5301,"line_end":5301,"column_start":16,"column_end":32},"name":"resolved_options","qualname":"<NumberFormat>::resolved_options","value":"fn resolved_options(&Self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.NumberFormat.prototype.resolvedOptions()` method returns a new\n object with properties reflecting the locale and number formatting\n options computed during initialization of this NumberFormat object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":247341,"byte_end":247356,"line_start":5263,"line_end":5263,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":247341,"byte_end":247356,"line_start":5263,"line_end":5263,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6104},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":250253,"byte_end":250273,"line_start":5309,"line_end":5309,"column_start":16,"column_end":36},"name":"supported_locales_of","qualname":"<NumberFormat>::supported_locales_of","value":"fn supported_locales_of(&Array, &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.NumberFormat.supportedLocalesOf()` method returns an array\n containing those of the provided locales that are supported in number\n formatting without having to fall back to the runtime's default locale.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":247341,"byte_end":247356,"line_start":5263,"line_end":5263,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":247341,"byte_end":247356,"line_start":5263,"line_end":5263,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":250373,"byte_end":250380,"line_start":5313,"line_end":5313,"column_start":12,"column_end":19},"name":"default","qualname":"<NumberFormat as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6209},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":251054,"byte_end":251065,"line_start":5330,"line_end":5330,"column_start":18,"column_end":29},"name":"PluralRules","qualname":"::Intl::PluralRules","value":"PluralRules {  }","parent":null,"children":[{"krate":0,"index":6210}],"decl_id":null,"docs":" The `Intl.PluralRules` object is a constructor for objects\n that enable plural sensitive formatting and plural language rules.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":250583,"byte_end":250598,"line_start":5322,"line_end":5322,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":250583,"byte_end":250598,"line_start":5322,"line_end":5322,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6198},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":251429,"byte_end":251432,"line_start":5337,"line_end":5337,"column_start":16,"column_end":19},"name":"new","qualname":"<PluralRules>::new","value":"fn new(&Array, &Object) -> PluralRules","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.PluralRules` object is a constructor for objects\n that enable plural sensitive formatting and plural language rules.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":250583,"byte_end":250598,"line_start":5322,"line_end":5322,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":250583,"byte_end":250598,"line_start":5322,"line_end":5322,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6201},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":251976,"byte_end":251992,"line_start":5345,"line_end":5345,"column_start":16,"column_end":32},"name":"resolved_options","qualname":"<PluralRules>::resolved_options","value":"fn resolved_options(&Self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.PluralRules.prototype.resolvedOptions()` method returns a new\n object with properties reflecting the locale and plural formatting\n options computed during initialization of this PluralRules object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":250583,"byte_end":250598,"line_start":5322,"line_end":5322,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":250583,"byte_end":250598,"line_start":5322,"line_end":5322,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6204},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":252393,"byte_end":252399,"line_start":5352,"line_end":5352,"column_start":16,"column_end":22},"name":"select","qualname":"<PluralRules>::select","value":"fn select(&Self, f64) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.PluralRules.prototype.select()` method returns a String indicating\n which plural rule to use for locale-aware formatting.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":250583,"byte_end":250598,"line_start":5322,"line_end":5322,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":250583,"byte_end":250598,"line_start":5322,"line_end":5322,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6207},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":252972,"byte_end":252992,"line_start":5360,"line_end":5360,"column_start":16,"column_end":36},"name":"supported_locales_of","qualname":"<PluralRules>::supported_locales_of","value":"fn supported_locales_of(&Array, &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.PluralRules.supportedLocalesOf()` method returns an array\n containing those of the provided locales that are supported in plural\n formatting without having to fall back to the runtime's default locale.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":250583,"byte_end":250598,"line_start":5322,"line_end":5322,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":250583,"byte_end":250598,"line_start":5322,"line_end":5322,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253091,"byte_end":253098,"line_start":5364,"line_end":5364,"column_start":12,"column_end":19},"name":"default","qualname":"<PluralRules as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6333},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253710,"byte_end":253717,"line_start":5383,"line_end":5383,"column_start":14,"column_end":21},"name":"Promise","qualname":"::Promise","value":"Promise {  }","parent":null,"children":[{"krate":0,"index":6334}],"decl_id":null,"docs":" The `Promise` object represents the eventual completion (or failure) of\n an asynchronous operation, and its resulting value.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253286,"byte_end":253301,"line_start":5374,"line_end":5374,"column_start":1,"column_end":16}},{"value":"must_use","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253585,"byte_end":253596,"line_start":5380,"line_end":5380,"column_start":5,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253286,"byte_end":253301,"line_start":5374,"line_end":5374,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":6301},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":254747,"byte_end":254750,"line_start":5402,"line_end":5402,"column_start":12,"column_end":15},"name":"new","qualname":"<Promise>::new","value":"fn new(&mut dyn FnMut(Function, Function) -> ()) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Promise` with the provided executor `cb`","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253286,"byte_end":253301,"line_start":5374,"line_end":5374,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253286,"byte_end":253301,"line_start":5374,"line_end":5374,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":6304},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":255279,"byte_end":255282,"line_start":5411,"line_end":5411,"column_start":12,"column_end":15},"name":"all","qualname":"<Promise>::all","value":"fn all(&JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `Promise.all(iterable)` method returns a single `Promise` that\n resolves when all of the promises in the iterable argument have resolved\n or when the iterable argument contains no promises. It rejects with the\n reason of the first promise that rejects.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253286,"byte_end":253301,"line_start":5374,"line_end":5374,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253286,"byte_end":253301,"line_start":5374,"line_end":5374,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":6307},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":255772,"byte_end":255783,"line_start":5419,"line_end":5419,"column_start":12,"column_end":23},"name":"all_settled","qualname":"<Promise>::all_settled","value":"fn all_settled(&JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `Promise.allSettled(iterable)` method returns a single `Promise` that\n resolves when all of the promises in the iterable argument have either\n fulfilled or rejected or when the iterable argument contains no promises.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253286,"byte_end":253301,"line_start":5374,"line_end":5374,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253286,"byte_end":253301,"line_start":5374,"line_end":5374,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":6310},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":256303,"byte_end":256306,"line_start":5428,"line_end":5428,"column_start":12,"column_end":15},"name":"any","qualname":"<Promise>::any","value":"fn any(&JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `Promise.any(iterable)` method returns a single `Promise` that\n resolves when any of the promises in the iterable argument have resolved\n or when the iterable argument contains no promises. It rejects with an\n `AggregateError` if all promises in the iterable rejected.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253286,"byte_end":253301,"line_start":5374,"line_end":5374,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253286,"byte_end":253301,"line_start":5374,"line_end":5374,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":6313},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":256740,"byte_end":256744,"line_start":5436,"line_end":5436,"column_start":12,"column_end":16},"name":"race","qualname":"<Promise>::race","value":"fn race(&JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `Promise.race(iterable)` method returns a promise that resolves or\n rejects as soon as one of the promises in the iterable resolves or\n rejects, with the value or reason from that promise.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253286,"byte_end":253301,"line_start":5374,"line_end":5374,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253286,"byte_end":253301,"line_start":5374,"line_end":5374,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":6316},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":257084,"byte_end":257090,"line_start":5443,"line_end":5443,"column_start":12,"column_end":18},"name":"reject","qualname":"<Promise>::reject","value":"fn reject(&JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `Promise.reject(reason)` method returns a `Promise` object that is\n rejected with the given reason.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253286,"byte_end":253301,"line_start":5374,"line_end":5374,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253286,"byte_end":253301,"line_start":5374,"line_end":5374,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":6319},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":257706,"byte_end":257713,"line_start":5453,"line_end":5453,"column_start":12,"column_end":19},"name":"resolve","qualname":"<Promise>::resolve","value":"fn resolve(&JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `Promise.resolve(value)` method returns a `Promise` object that is\n resolved with the given value. If the value is a promise, that promise\n is returned; if the value is a thenable (i.e. has a \"then\" method), the\n returned promise will \"follow\" that thenable, adopting its eventual\n state; otherwise the returned promise will be fulfilled with the value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253286,"byte_end":253301,"line_start":5374,"line_end":5374,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253286,"byte_end":253301,"line_start":5374,"line_end":5374,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":6322},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":258197,"byte_end":258202,"line_start":5462,"line_end":5462,"column_start":12,"column_end":17},"name":"catch","qualname":"<Promise>::catch","value":"fn catch(&Self, &Closure<dyn FnMut(JsValue) -> ()>) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `catch()` method returns a `Promise` and deals with rejected cases\n only.  It behaves the same as calling `Promise.prototype.then(undefined,\n onRejected)` (in fact, calling `obj.catch(onRejected)` internally calls\n `obj.then(undefined, onRejected)`).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253286,"byte_end":253301,"line_start":5374,"line_end":5374,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253286,"byte_end":253301,"line_start":5374,"line_end":5374,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":6325},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":258594,"byte_end":258598,"line_start":5469,"line_end":5469,"column_start":12,"column_end":16},"name":"then","qualname":"<Promise>::then","value":"fn then(&Self, &Closure<dyn FnMut(JsValue) -> ()>) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `then()` method returns a `Promise`. It takes up to two arguments:\n callback functions for the success and failure cases of the `Promise`.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253286,"byte_end":253301,"line_start":5374,"line_end":5374,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253286,"byte_end":253301,"line_start":5374,"line_end":5374,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":6328},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":258776,"byte_end":258781,"line_start":5473,"line_end":5473,"column_start":12,"column_end":17},"name":"then2","qualname":"<Promise>::then2","value":"fn then2(&Self, &Closure<dyn FnMut(JsValue) -> ()>,\n&Closure<dyn FnMut(JsValue) -> ()>) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" Same as `then`, only with both arguments provided.\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253286,"byte_end":253301,"line_start":5374,"line_end":5374,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253286,"byte_end":253301,"line_start":5374,"line_end":5374,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":6331},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":259557,"byte_end":259564,"line_start":5490,"line_end":5490,"column_start":12,"column_end":19},"name":"finally","qualname":"<Promise>::finally","value":"fn finally(&Self, &Closure<dyn FnMut() -> ()>) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `finally()` method returns a `Promise`. When the promise is settled,\n whether fulfilled or rejected, the specified callback function is\n executed. This provides a way for code that must be executed once the\n `Promise` has been dealt with to be run whether the promise was\n fulfilled successfully or rejected.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253286,"byte_end":253301,"line_start":5374,"line_end":5374,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\nrestriction)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253286,"byte_end":253301,"line_start":5374,"line_end":5374,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":300},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":259788,"byte_end":259794,"line_start":5497,"line_end":5497,"column_start":8,"column_end":14},"name":"global","qualname":"::global","value":"fn global() -> Object","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the global scope object.","sig":null,"attributes":[{"value":"/ Returns a handle to the global scope object.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":259623,"byte_end":259671,"line_start":5493,"line_end":5493,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":259672,"byte_end":259675,"line_start":5494,"line_end":5494,"column_start":1,"column_end":4}},{"value":"/ This allows access to the global properties and global names by accessing","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":259676,"byte_end":259753,"line_start":5495,"line_end":5495,"column_start":1,"column_end":78}},{"value":"/ the `Object` returned.","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":259754,"byte_end":259780,"line_start":5496,"line_end":5496,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":6697},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":274319,"byte_end":274328,"line_start":5830,"line_end":5830,"column_start":5,"column_end":14},"name":"Int8Array","qualname":"::Int8Array","value":"Int8Array {  }","parent":null,"children":[{"krate":0,"index":6698}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":263222,"byte_end":263237,"line_start":5576,"line_end":5576,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":263222,"byte_end":263237,"line_start":5576,"line_end":5576,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6836},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":274462,"byte_end":274472,"line_start":5834,"line_end":5834,"column_start":5,"column_end":15},"name":"Int16Array","qualname":"::Int16Array","value":"Int16Array {  }","parent":null,"children":[{"krate":0,"index":6837}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":263222,"byte_end":263237,"line_start":5576,"line_end":5576,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":263222,"byte_end":263237,"line_start":5576,"line_end":5576,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6975},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":274607,"byte_end":274617,"line_start":5838,"line_end":5838,"column_start":5,"column_end":15},"name":"Int32Array","qualname":"::Int32Array","value":"Int32Array {  }","parent":null,"children":[{"krate":0,"index":6976}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":263222,"byte_end":263237,"line_start":5576,"line_end":5576,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":263222,"byte_end":263237,"line_start":5576,"line_end":5576,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7114},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":274752,"byte_end":274762,"line_start":5842,"line_end":5842,"column_start":5,"column_end":15},"name":"Uint8Array","qualname":"::Uint8Array","value":"Uint8Array {  }","parent":null,"children":[{"krate":0,"index":7115}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":263222,"byte_end":263237,"line_start":5576,"line_end":5576,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":263222,"byte_end":263237,"line_start":5576,"line_end":5576,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7253},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":274910,"byte_end":274927,"line_start":5846,"line_end":5846,"column_start":5,"column_end":22},"name":"Uint8ClampedArray","qualname":"::Uint8ClampedArray","value":"Uint8ClampedArray {  }","parent":null,"children":[{"krate":0,"index":7254}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":263222,"byte_end":263237,"line_start":5576,"line_end":5576,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":263222,"byte_end":263237,"line_start":5576,"line_end":5576,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7392},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":275063,"byte_end":275074,"line_start":5850,"line_end":5850,"column_start":5,"column_end":16},"name":"Uint16Array","qualname":"::Uint16Array","value":"Uint16Array {  }","parent":null,"children":[{"krate":0,"index":7393}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":263222,"byte_end":263237,"line_start":5576,"line_end":5576,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":263222,"byte_end":263237,"line_start":5576,"line_end":5576,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7531},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":275211,"byte_end":275222,"line_start":5854,"line_end":5854,"column_start":5,"column_end":16},"name":"Uint32Array","qualname":"::Uint32Array","value":"Uint32Array {  }","parent":null,"children":[{"krate":0,"index":7532}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":263222,"byte_end":263237,"line_start":5576,"line_end":5576,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":263222,"byte_end":263237,"line_start":5576,"line_end":5576,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7670},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":275361,"byte_end":275373,"line_start":5858,"line_end":5858,"column_start":5,"column_end":17},"name":"Float32Array","qualname":"::Float32Array","value":"Float32Array {  }","parent":null,"children":[{"krate":0,"index":7671}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":263222,"byte_end":263237,"line_start":5576,"line_end":5576,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":263222,"byte_end":263237,"line_start":5576,"line_end":5576,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7809},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":275512,"byte_end":275524,"line_start":5862,"line_end":5862,"column_start":5,"column_end":17},"name":"Float64Array","qualname":"::Float64Array","value":"Float64Array {  }","parent":null,"children":[{"krate":0,"index":7810}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":263222,"byte_end":263237,"line_start":5576,"line_end":5576,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":263222,"byte_end":263237,"line_start":5576,"line_end":5576,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7948},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":275665,"byte_end":275678,"line_start":5866,"line_end":5866,"column_start":5,"column_end":18},"name":"BigInt64Array","qualname":"::BigInt64Array","value":"BigInt64Array {  }","parent":null,"children":[{"krate":0,"index":7949}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":263222,"byte_end":263237,"line_start":5576,"line_end":5576,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":263222,"byte_end":263237,"line_start":5576,"line_end":5576,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8087},"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":275821,"byte_end":275835,"line_start":5870,"line_end":5870,"column_start":5,"column_end":19},"name":"BigUint64Array","qualname":"::BigUint64Array","value":"BigUint64Array {  }","parent":null,"children":[{"krate":0,"index":8088}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":263222,"byte_end":263237,"line_start":5576,"line_end":5576,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":263222,"byte_end":263237,"line_start":5576,"line_end":5576,"column_start":9,"column_end":24}}]}],"impls":[{"id":56,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":26891,"byte_end":26900,"line_start":608,"line_end":608,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":27213,"byte_end":27222,"line_start":622,"line_end":622,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":27409,"byte_end":27418,"line_start":629,"line_end":629,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":27469,"byte_end":27478,"line_start":631,"line_end":631,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":27492,"byte_end":27497,"line_start":633,"line_end":633,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":28097,"byte_end":28102,"line_start":657,"line_end":657,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":28339,"byte_end":28344,"line_start":671,"line_end":671,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":28567,"byte_end":28572,"line_start":685,"line_end":685,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":45234,"byte_end":45240,"line_start":1004,"line_end":1004,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":47666,"byte_end":47672,"line_start":1084,"line_end":1084,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48592,"byte_end":48598,"line_start":1116,"line_end":1116,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48691,"byte_end":48697,"line_start":1122,"line_end":1122,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48851,"byte_end":48857,"line_start":1131,"line_end":1131,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":49003,"byte_end":49009,"line_start":1138,"line_end":1138,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":49203,"byte_end":49209,"line_start":1145,"line_end":1145,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":49403,"byte_end":49409,"line_start":1152,"line_end":1152,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":49606,"byte_end":49612,"line_start":1159,"line_end":1159,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":49857,"byte_end":49863,"line_start":1170,"line_end":1170,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":51023,"byte_end":51030,"line_start":1201,"line_end":1201,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":51276,"byte_end":51283,"line_start":1215,"line_end":1215,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":51404,"byte_end":51411,"line_start":1222,"line_end":1222,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":51549,"byte_end":51556,"line_start":1228,"line_end":1228,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":51691,"byte_end":51698,"line_start":1234,"line_end":1234,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":75447,"byte_end":75455,"line_start":1690,"line_end":1690,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":75848,"byte_end":75856,"line_start":1702,"line_end":1702,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":80375,"byte_end":80378,"line_start":1805,"line_end":1805,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Inherent","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":82397,"byte_end":82405,"line_start":1856,"line_end":1856,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":84464,"byte_end":84468,"line_start":1927,"line_end":1927,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":84629,"byte_end":84637,"line_start":1935,"line_end":1935,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":84876,"byte_end":84884,"line_start":1947,"line_end":1947,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Inherent","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":85025,"byte_end":85034,"line_start":1955,"line_end":1955,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Inherent","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":105147,"byte_end":105153,"line_start":2377,"line_end":2377,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":109111,"byte_end":109117,"line_start":2479,"line_end":2479,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":109269,"byte_end":109275,"line_start":2486,"line_end":2486,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":109424,"byte_end":109430,"line_start":2493,"line_end":2493,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":109531,"byte_end":109537,"line_start":2499,"line_end":2499,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110435,"byte_end":110441,"line_start":2530,"line_end":2530,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111297,"byte_end":111303,"line_start":2565,"line_end":2565,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Inherent","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":148811,"byte_end":148817,"line_start":3269,"line_end":3269,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":149208,"byte_end":149214,"line_start":3284,"line_end":3284,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":149345,"byte_end":149351,"line_start":3291,"line_end":3291,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":149373,"byte_end":149379,"line_start":3293,"line_end":3293,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":172257,"byte_end":172260,"line_start":3769,"line_end":3769,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":763,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":178094,"byte_end":178101,"line_start":3907,"line_end":3907,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":782,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":179565,"byte_end":179572,"line_start":3947,"line_end":3947,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":995,"kind":"Inherent","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":228779,"byte_end":228787,"line_start":4848,"line_end":4848,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":996,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":231655,"byte_end":231663,"line_start":4921,"line_end":4921,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":997,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":231783,"byte_end":231791,"line_start":4927,"line_end":4927,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":998,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":231928,"byte_end":231936,"line_start":4933,"line_end":4933,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":999,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":232080,"byte_end":232088,"line_start":4939,"line_end":4939,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":1000,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":232228,"byte_end":232236,"line_start":4945,"line_end":4945,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":1001,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":232362,"byte_end":232370,"line_start":4951,"line_end":4951,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":1002,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":232459,"byte_end":232467,"line_start":4957,"line_end":4957,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":1003,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":232616,"byte_end":232622,"line_start":4964,"line_end":4964,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":1004,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":232738,"byte_end":232744,"line_start":4970,"line_end":4970,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":1005,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":232834,"byte_end":232842,"line_start":4976,"line_end":4976,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":1006,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":232997,"byte_end":233005,"line_start":4983,"line_end":4983,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":1007,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233162,"byte_end":233170,"line_start":4990,"line_end":4990,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":1054,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":243774,"byte_end":243782,"line_start":5193,"line_end":5193,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":1074,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":247102,"byte_end":247116,"line_start":5253,"line_end":5253,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":1094,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":250347,"byte_end":250359,"line_start":5312,"line_end":5312,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":1113,"kind":"Direct","span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253066,"byte_end":253077,"line_start":5363,"line_end":5363,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":26891,"byte_end":26900,"line_start":608,"line_end":608,"column_start":34,"column_end":43},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":552},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":27213,"byte_end":27222,"line_start":622,"line_end":622,"column_start":45,"column_end":54},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":552},"to":{"krate":2,"index":8323}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":27409,"byte_end":27418,"line_start":629,"line_end":629,"column_start":39,"column_end":48},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":552},"to":{"krate":2,"index":8749}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":27469,"byte_end":27478,"line_start":631,"line_end":631,"column_start":43,"column_end":52},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":552},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":27492,"byte_end":27497,"line_start":633,"line_end":633,"column_start":6,"column_end":11},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":28097,"byte_end":28102,"line_start":657,"line_end":657,"column_start":40,"column_end":45},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":539},"to":{"krate":2,"index":8275}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":28339,"byte_end":28344,"line_start":671,"line_end":671,"column_start":34,"column_end":39},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":539},"to":{"krate":2,"index":8288}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":28567,"byte_end":28572,"line_start":685,"line_end":685,"column_start":18,"column_end":23},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":539},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":45234,"byte_end":45240,"line_start":1004,"line_end":1004,"column_start":6,"column_end":12},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":47666,"byte_end":47672,"line_start":1084,"line_end":1084,"column_start":28,"column_end":34},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":924},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48592,"byte_end":48598,"line_start":1116,"line_end":1116,"column_start":18,"column_end":24},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":924},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48691,"byte_end":48697,"line_start":1122,"line_end":1122,"column_start":18,"column_end":24},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":924},"to":{"krate":2,"index":12765}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":48851,"byte_end":48857,"line_start":1131,"line_end":1131,"column_start":21,"column_end":27},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":924},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":49003,"byte_end":49009,"line_start":1138,"line_end":1138,"column_start":23,"column_end":29},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":924},"to":{"krate":2,"index":10115}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":49203,"byte_end":49209,"line_start":1145,"line_end":1145,"column_start":22,"column_end":28},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":924},"to":{"krate":2,"index":10119}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":49403,"byte_end":49409,"line_start":1152,"line_end":1152,"column_start":21,"column_end":27},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":924},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":49606,"byte_end":49612,"line_start":1159,"line_end":1159,"column_start":24,"column_end":30},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":924},"to":{"krate":2,"index":10121}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":49857,"byte_end":49863,"line_start":1170,"line_end":1170,"column_start":24,"column_end":30},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":924},"to":{"krate":2,"index":10123}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":51023,"byte_end":51030,"line_start":1201,"line_end":1201,"column_start":21,"column_end":28},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1253},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":51276,"byte_end":51283,"line_start":1215,"line_end":1215,"column_start":26,"column_end":33},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1253},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":51404,"byte_end":51411,"line_start":1222,"line_end":1222,"column_start":21,"column_end":28},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1253},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":51549,"byte_end":51556,"line_start":1228,"line_end":1228,"column_start":23,"column_end":30},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1253},"to":{"krate":2,"index":10115}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":51691,"byte_end":51698,"line_start":1234,"line_end":1234,"column_start":18,"column_end":25},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1253},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":75447,"byte_end":75455,"line_start":1690,"line_end":1690,"column_start":6,"column_end":14},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":1844},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":75848,"byte_end":75856,"line_start":1702,"line_end":1702,"column_start":18,"column_end":26},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":1844},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":80375,"byte_end":80378,"line_start":1805,"line_end":1805,"column_start":18,"column_end":21},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":2073},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":82397,"byte_end":82405,"line_start":1856,"line_end":1856,"column_start":6,"column_end":14},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":2174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":84464,"byte_end":84468,"line_start":1927,"line_end":1927,"column_start":34,"column_end":38},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":84629,"byte_end":84637,"line_start":1935,"line_end":1935,"column_start":23,"column_end":31},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":2174},"to":{"krate":2,"index":8279}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":84876,"byte_end":84884,"line_start":1947,"line_end":1947,"column_start":30,"column_end":38},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":170},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":85025,"byte_end":85034,"line_start":1955,"line_end":1955,"column_start":6,"column_end":15},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":105147,"byte_end":105153,"line_start":2377,"line_end":2377,"column_start":6,"column_end":12},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":2647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":109111,"byte_end":109117,"line_start":2479,"line_end":2479,"column_start":21,"column_end":27},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":2647},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":109269,"byte_end":109275,"line_start":2486,"line_end":2486,"column_start":23,"column_end":29},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":2647},"to":{"krate":2,"index":10115}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":109424,"byte_end":109430,"line_start":2493,"line_end":2493,"column_start":18,"column_end":24},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":2647},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":109531,"byte_end":109537,"line_start":2499,"line_end":2499,"column_start":28,"column_end":34},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":2647},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":110435,"byte_end":110441,"line_start":2530,"line_end":2530,"column_start":21,"column_end":27},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":2647},"to":{"krate":2,"index":2877}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":111297,"byte_end":111303,"line_start":2565,"line_end":2565,"column_start":18,"column_end":24},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":2647},"to":{"krate":2,"index":12765}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":148811,"byte_end":148817,"line_start":3269,"line_end":3269,"column_start":6,"column_end":12},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":3287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":149208,"byte_end":149214,"line_start":3284,"line_end":3284,"column_start":20,"column_end":26},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":3287},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":149345,"byte_end":149351,"line_start":3291,"line_end":3291,"column_start":13,"column_end":19},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":3287},"to":{"krate":2,"index":2836}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":149373,"byte_end":149379,"line_start":3293,"line_end":3293,"column_start":18,"column_end":24},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":3287},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":172257,"byte_end":172260,"line_start":3769,"line_end":3769,"column_start":18,"column_end":21},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":3928},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":178094,"byte_end":178101,"line_start":3907,"line_end":3907,"column_start":18,"column_end":25},"kind":{"Impl":{"id":763}},"from":{"krate":0,"index":4383},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":179565,"byte_end":179572,"line_start":3947,"line_end":3947,"column_start":18,"column_end":25},"kind":{"Impl":{"id":782}},"from":{"krate":0,"index":4493},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":228779,"byte_end":228787,"line_start":4848,"line_end":4848,"column_start":6,"column_end":14},"kind":{"Impl":{"id":995}},"from":{"krate":0,"index":5654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":231655,"byte_end":231663,"line_start":4921,"line_end":4921,"column_start":25,"column_end":33},"kind":{"Impl":{"id":996}},"from":{"krate":0,"index":5654},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":231783,"byte_end":231791,"line_start":4927,"line_end":4927,"column_start":33,"column_end":41},"kind":{"Impl":{"id":997}},"from":{"krate":0,"index":5654},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":231928,"byte_end":231936,"line_start":4933,"line_end":4933,"column_start":28,"column_end":36},"kind":{"Impl":{"id":998}},"from":{"krate":0,"index":5654},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":232080,"byte_end":232088,"line_start":4939,"line_end":4939,"column_start":36,"column_end":44},"kind":{"Impl":{"id":999}},"from":{"krate":0,"index":5654},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":232228,"byte_end":232236,"line_start":4945,"line_end":4945,"column_start":28,"column_end":36},"kind":{"Impl":{"id":1000}},"from":{"krate":0,"index":5654},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":232362,"byte_end":232370,"line_start":4951,"line_end":4951,"column_start":23,"column_end":31},"kind":{"Impl":{"id":1001}},"from":{"krate":0,"index":5654},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":232459,"byte_end":232467,"line_start":4957,"line_end":4957,"column_start":21,"column_end":29},"kind":{"Impl":{"id":1002}},"from":{"krate":0,"index":5654},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":232616,"byte_end":232622,"line_start":4964,"line_end":4964,"column_start":33,"column_end":39},"kind":{"Impl":{"id":1003}},"from":{"krate":5,"index":8341},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":232738,"byte_end":232744,"line_start":4970,"line_end":4970,"column_start":25,"column_end":31},"kind":{"Impl":{"id":1004}},"from":{"krate":5,"index":8341},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":232834,"byte_end":232842,"line_start":4976,"line_end":4976,"column_start":21,"column_end":29},"kind":{"Impl":{"id":1005}},"from":{"krate":0,"index":5654},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":232997,"byte_end":233005,"line_start":4983,"line_end":4983,"column_start":23,"column_end":31},"kind":{"Impl":{"id":1006}},"from":{"krate":0,"index":5654},"to":{"krate":2,"index":10115}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":233162,"byte_end":233170,"line_start":4990,"line_end":4990,"column_start":23,"column_end":31},"kind":{"Impl":{"id":1007}},"from":{"krate":0,"index":5654},"to":{"krate":2,"index":12765}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":243774,"byte_end":243782,"line_start":5193,"line_end":5193,"column_start":22,"column_end":30},"kind":{"Impl":{"id":1054}},"from":{"krate":0,"index":5894},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":247102,"byte_end":247116,"line_start":5253,"line_end":5253,"column_start":22,"column_end":36},"kind":{"Impl":{"id":1074}},"from":{"krate":0,"index":6000},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":250347,"byte_end":250359,"line_start":5312,"line_end":5312,"column_start":22,"column_end":34},"kind":{"Impl":{"id":1094}},"from":{"krate":0,"index":6106},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/home/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.60/src/lib.rs","byte_start":253066,"byte_end":253077,"line_start":5363,"line_end":5363,"column_start":22,"column_end":33},"kind":{"Impl":{"id":1113}},"from":{"krate":0,"index":6209},"to":{"krate":2,"index":3157}}]}